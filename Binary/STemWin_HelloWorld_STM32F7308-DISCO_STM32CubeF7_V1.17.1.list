
STemWin_HelloWorld_STM32F730I8Kx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e0  90000000  90000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007254  900001e0  900001e0  000101e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00006a60  90007434  90007434  00017434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  9000de94  9000de94  0001de94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  9000de9c  9000de9c  0001de9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  9000dea0  9000dea0  0001dea0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000000c4  20000000  9000dea4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00025be0  200000c4  9000df68  000200c4  2**2
                  ALLOC
  8 ._user_heap_stack 00000c04  20025ca4  9000df68  00025ca4  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  000200c4  2**0
                  CONTENTS, READONLY
 10 .comment      000000b1  00000000  00000000  000200f4  2**0
                  CONTENTS, READONLY
 11 .debug_line   0001316b  00000000  00000000  000201a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000000c5  00000000  00000000  00033310  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_info   00014476  00000000  00000000  000333d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000032af  00000000  00000000  0004784b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000cb0  00000000  00000000  0004ab00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    000eab8b  00000000  00000000  0004b7b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000ceb  00000000  00000000  0013633b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00024939  00000000  00000000  00137026  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_frame  00002634  00000000  00000000  0015b960  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_loclists 000075c3  00000000  00000000  0015df94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900001e0 <__do_global_dtors_aux>:
900001e0:	b510      	push	{r4, lr}
900001e2:	4c05      	ldr	r4, [pc, #20]	; (900001f8 <__do_global_dtors_aux+0x18>)
900001e4:	7823      	ldrb	r3, [r4, #0]
900001e6:	b933      	cbnz	r3, 900001f6 <__do_global_dtors_aux+0x16>
900001e8:	4b04      	ldr	r3, [pc, #16]	; (900001fc <__do_global_dtors_aux+0x1c>)
900001ea:	b113      	cbz	r3, 900001f2 <__do_global_dtors_aux+0x12>
900001ec:	4804      	ldr	r0, [pc, #16]	; (90000200 <__do_global_dtors_aux+0x20>)
900001ee:	f3af 8000 	nop.w
900001f2:	2301      	movs	r3, #1
900001f4:	7023      	strb	r3, [r4, #0]
900001f6:	bd10      	pop	{r4, pc}
900001f8:	200000c4 	.word	0x200000c4
900001fc:	00000000 	.word	0x00000000
90000200:	9000741c 	.word	0x9000741c

90000204 <frame_dummy>:
90000204:	b508      	push	{r3, lr}
90000206:	4b03      	ldr	r3, [pc, #12]	; (90000214 <frame_dummy+0x10>)
90000208:	b11b      	cbz	r3, 90000212 <frame_dummy+0xe>
9000020a:	4903      	ldr	r1, [pc, #12]	; (90000218 <frame_dummy+0x14>)
9000020c:	4803      	ldr	r0, [pc, #12]	; (9000021c <frame_dummy+0x18>)
9000020e:	f3af 8000 	nop.w
90000212:	bd08      	pop	{r3, pc}
90000214:	00000000 	.word	0x00000000
90000218:	200000c8 	.word	0x200000c8
9000021c:	9000741c 	.word	0x9000741c

90000220 <__aeabi_uldivmod>:
90000220:	b953      	cbnz	r3, 90000238 <__aeabi_uldivmod+0x18>
90000222:	b94a      	cbnz	r2, 90000238 <__aeabi_uldivmod+0x18>
90000224:	2900      	cmp	r1, #0
90000226:	bf08      	it	eq
90000228:	2800      	cmpeq	r0, #0
9000022a:	bf1c      	itt	ne
9000022c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
90000230:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
90000234:	f000 b970 	b.w	90000518 <__aeabi_idiv0>
90000238:	f1ad 0c08 	sub.w	ip, sp, #8
9000023c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000240:	f000 f806 	bl	90000250 <__udivmoddi4>
90000244:	f8dd e004 	ldr.w	lr, [sp, #4]
90000248:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000024c:	b004      	add	sp, #16
9000024e:	4770      	bx	lr

90000250 <__udivmoddi4>:
90000250:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90000254:	9e08      	ldr	r6, [sp, #32]
90000256:	460d      	mov	r5, r1
90000258:	4604      	mov	r4, r0
9000025a:	460f      	mov	r7, r1
9000025c:	2b00      	cmp	r3, #0
9000025e:	d14a      	bne.n	900002f6 <__udivmoddi4+0xa6>
90000260:	428a      	cmp	r2, r1
90000262:	4694      	mov	ip, r2
90000264:	d965      	bls.n	90000332 <__udivmoddi4+0xe2>
90000266:	fab2 f382 	clz	r3, r2
9000026a:	b143      	cbz	r3, 9000027e <__udivmoddi4+0x2e>
9000026c:	fa02 fc03 	lsl.w	ip, r2, r3
90000270:	f1c3 0220 	rsb	r2, r3, #32
90000274:	409f      	lsls	r7, r3
90000276:	fa20 f202 	lsr.w	r2, r0, r2
9000027a:	4317      	orrs	r7, r2
9000027c:	409c      	lsls	r4, r3
9000027e:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
90000282:	fa1f f58c 	uxth.w	r5, ip
90000286:	fbb7 f1fe 	udiv	r1, r7, lr
9000028a:	0c22      	lsrs	r2, r4, #16
9000028c:	fb0e 7711 	mls	r7, lr, r1, r7
90000290:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90000294:	fb01 f005 	mul.w	r0, r1, r5
90000298:	4290      	cmp	r0, r2
9000029a:	d90a      	bls.n	900002b2 <__udivmoddi4+0x62>
9000029c:	eb1c 0202 	adds.w	r2, ip, r2
900002a0:	f101 37ff 	add.w	r7, r1, #4294967295	; 0xffffffff
900002a4:	f080 811c 	bcs.w	900004e0 <__udivmoddi4+0x290>
900002a8:	4290      	cmp	r0, r2
900002aa:	f240 8119 	bls.w	900004e0 <__udivmoddi4+0x290>
900002ae:	3902      	subs	r1, #2
900002b0:	4462      	add	r2, ip
900002b2:	1a12      	subs	r2, r2, r0
900002b4:	b2a4      	uxth	r4, r4
900002b6:	fbb2 f0fe 	udiv	r0, r2, lr
900002ba:	fb0e 2210 	mls	r2, lr, r0, r2
900002be:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
900002c2:	fb00 f505 	mul.w	r5, r0, r5
900002c6:	42a5      	cmp	r5, r4
900002c8:	d90a      	bls.n	900002e0 <__udivmoddi4+0x90>
900002ca:	eb1c 0404 	adds.w	r4, ip, r4
900002ce:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
900002d2:	f080 8107 	bcs.w	900004e4 <__udivmoddi4+0x294>
900002d6:	42a5      	cmp	r5, r4
900002d8:	f240 8104 	bls.w	900004e4 <__udivmoddi4+0x294>
900002dc:	4464      	add	r4, ip
900002de:	3802      	subs	r0, #2
900002e0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
900002e4:	1b64      	subs	r4, r4, r5
900002e6:	2100      	movs	r1, #0
900002e8:	b11e      	cbz	r6, 900002f2 <__udivmoddi4+0xa2>
900002ea:	40dc      	lsrs	r4, r3
900002ec:	2300      	movs	r3, #0
900002ee:	e9c6 4300 	strd	r4, r3, [r6]
900002f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900002f6:	428b      	cmp	r3, r1
900002f8:	d908      	bls.n	9000030c <__udivmoddi4+0xbc>
900002fa:	2e00      	cmp	r6, #0
900002fc:	f000 80ed 	beq.w	900004da <__udivmoddi4+0x28a>
90000300:	2100      	movs	r1, #0
90000302:	e9c6 0500 	strd	r0, r5, [r6]
90000306:	4608      	mov	r0, r1
90000308:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000030c:	fab3 f183 	clz	r1, r3
90000310:	2900      	cmp	r1, #0
90000312:	d149      	bne.n	900003a8 <__udivmoddi4+0x158>
90000314:	42ab      	cmp	r3, r5
90000316:	d302      	bcc.n	9000031e <__udivmoddi4+0xce>
90000318:	4282      	cmp	r2, r0
9000031a:	f200 80f8 	bhi.w	9000050e <__udivmoddi4+0x2be>
9000031e:	1a84      	subs	r4, r0, r2
90000320:	eb65 0203 	sbc.w	r2, r5, r3
90000324:	2001      	movs	r0, #1
90000326:	4617      	mov	r7, r2
90000328:	2e00      	cmp	r6, #0
9000032a:	d0e2      	beq.n	900002f2 <__udivmoddi4+0xa2>
9000032c:	e9c6 4700 	strd	r4, r7, [r6]
90000330:	e7df      	b.n	900002f2 <__udivmoddi4+0xa2>
90000332:	b902      	cbnz	r2, 90000336 <__udivmoddi4+0xe6>
90000334:	deff      	udf	#255	; 0xff
90000336:	fab2 f382 	clz	r3, r2
9000033a:	2b00      	cmp	r3, #0
9000033c:	f040 8090 	bne.w	90000460 <__udivmoddi4+0x210>
90000340:	1a8a      	subs	r2, r1, r2
90000342:	ea4f 471c 	mov.w	r7, ip, lsr #16
90000346:	fa1f fe8c 	uxth.w	lr, ip
9000034a:	2101      	movs	r1, #1
9000034c:	fbb2 f5f7 	udiv	r5, r2, r7
90000350:	fb07 2015 	mls	r0, r7, r5, r2
90000354:	0c22      	lsrs	r2, r4, #16
90000356:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000035a:	fb0e f005 	mul.w	r0, lr, r5
9000035e:	4290      	cmp	r0, r2
90000360:	d908      	bls.n	90000374 <__udivmoddi4+0x124>
90000362:	eb1c 0202 	adds.w	r2, ip, r2
90000366:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
9000036a:	d202      	bcs.n	90000372 <__udivmoddi4+0x122>
9000036c:	4290      	cmp	r0, r2
9000036e:	f200 80cb 	bhi.w	90000508 <__udivmoddi4+0x2b8>
90000372:	4645      	mov	r5, r8
90000374:	1a12      	subs	r2, r2, r0
90000376:	b2a4      	uxth	r4, r4
90000378:	fbb2 f0f7 	udiv	r0, r2, r7
9000037c:	fb07 2210 	mls	r2, r7, r0, r2
90000380:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
90000384:	fb0e fe00 	mul.w	lr, lr, r0
90000388:	45a6      	cmp	lr, r4
9000038a:	d908      	bls.n	9000039e <__udivmoddi4+0x14e>
9000038c:	eb1c 0404 	adds.w	r4, ip, r4
90000390:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
90000394:	d202      	bcs.n	9000039c <__udivmoddi4+0x14c>
90000396:	45a6      	cmp	lr, r4
90000398:	f200 80bb 	bhi.w	90000512 <__udivmoddi4+0x2c2>
9000039c:	4610      	mov	r0, r2
9000039e:	eba4 040e 	sub.w	r4, r4, lr
900003a2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
900003a6:	e79f      	b.n	900002e8 <__udivmoddi4+0x98>
900003a8:	f1c1 0720 	rsb	r7, r1, #32
900003ac:	408b      	lsls	r3, r1
900003ae:	fa22 fc07 	lsr.w	ip, r2, r7
900003b2:	ea4c 0c03 	orr.w	ip, ip, r3
900003b6:	fa05 f401 	lsl.w	r4, r5, r1
900003ba:	fa20 f307 	lsr.w	r3, r0, r7
900003be:	40fd      	lsrs	r5, r7
900003c0:	ea4f 491c 	mov.w	r9, ip, lsr #16
900003c4:	4323      	orrs	r3, r4
900003c6:	fbb5 f8f9 	udiv	r8, r5, r9
900003ca:	fa1f fe8c 	uxth.w	lr, ip
900003ce:	fb09 5518 	mls	r5, r9, r8, r5
900003d2:	0c1c      	lsrs	r4, r3, #16
900003d4:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
900003d8:	fb08 f50e 	mul.w	r5, r8, lr
900003dc:	42a5      	cmp	r5, r4
900003de:	fa02 f201 	lsl.w	r2, r2, r1
900003e2:	fa00 f001 	lsl.w	r0, r0, r1
900003e6:	d90b      	bls.n	90000400 <__udivmoddi4+0x1b0>
900003e8:	eb1c 0404 	adds.w	r4, ip, r4
900003ec:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
900003f0:	f080 8088 	bcs.w	90000504 <__udivmoddi4+0x2b4>
900003f4:	42a5      	cmp	r5, r4
900003f6:	f240 8085 	bls.w	90000504 <__udivmoddi4+0x2b4>
900003fa:	f1a8 0802 	sub.w	r8, r8, #2
900003fe:	4464      	add	r4, ip
90000400:	1b64      	subs	r4, r4, r5
90000402:	b29d      	uxth	r5, r3
90000404:	fbb4 f3f9 	udiv	r3, r4, r9
90000408:	fb09 4413 	mls	r4, r9, r3, r4
9000040c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
90000410:	fb03 fe0e 	mul.w	lr, r3, lr
90000414:	45a6      	cmp	lr, r4
90000416:	d908      	bls.n	9000042a <__udivmoddi4+0x1da>
90000418:	eb1c 0404 	adds.w	r4, ip, r4
9000041c:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
90000420:	d26c      	bcs.n	900004fc <__udivmoddi4+0x2ac>
90000422:	45a6      	cmp	lr, r4
90000424:	d96a      	bls.n	900004fc <__udivmoddi4+0x2ac>
90000426:	3b02      	subs	r3, #2
90000428:	4464      	add	r4, ip
9000042a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
9000042e:	fba3 9502 	umull	r9, r5, r3, r2
90000432:	eba4 040e 	sub.w	r4, r4, lr
90000436:	42ac      	cmp	r4, r5
90000438:	46c8      	mov	r8, r9
9000043a:	46ae      	mov	lr, r5
9000043c:	d356      	bcc.n	900004ec <__udivmoddi4+0x29c>
9000043e:	d053      	beq.n	900004e8 <__udivmoddi4+0x298>
90000440:	b156      	cbz	r6, 90000458 <__udivmoddi4+0x208>
90000442:	ebb0 0208 	subs.w	r2, r0, r8
90000446:	eb64 040e 	sbc.w	r4, r4, lr
9000044a:	fa04 f707 	lsl.w	r7, r4, r7
9000044e:	40ca      	lsrs	r2, r1
90000450:	40cc      	lsrs	r4, r1
90000452:	4317      	orrs	r7, r2
90000454:	e9c6 7400 	strd	r7, r4, [r6]
90000458:	4618      	mov	r0, r3
9000045a:	2100      	movs	r1, #0
9000045c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000460:	f1c3 0120 	rsb	r1, r3, #32
90000464:	fa02 fc03 	lsl.w	ip, r2, r3
90000468:	fa20 f201 	lsr.w	r2, r0, r1
9000046c:	fa25 f101 	lsr.w	r1, r5, r1
90000470:	409d      	lsls	r5, r3
90000472:	432a      	orrs	r2, r5
90000474:	ea4f 471c 	mov.w	r7, ip, lsr #16
90000478:	fa1f fe8c 	uxth.w	lr, ip
9000047c:	fbb1 f0f7 	udiv	r0, r1, r7
90000480:	fb07 1510 	mls	r5, r7, r0, r1
90000484:	0c11      	lsrs	r1, r2, #16
90000486:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
9000048a:	fb00 f50e 	mul.w	r5, r0, lr
9000048e:	428d      	cmp	r5, r1
90000490:	fa04 f403 	lsl.w	r4, r4, r3
90000494:	d908      	bls.n	900004a8 <__udivmoddi4+0x258>
90000496:	eb1c 0101 	adds.w	r1, ip, r1
9000049a:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
9000049e:	d22f      	bcs.n	90000500 <__udivmoddi4+0x2b0>
900004a0:	428d      	cmp	r5, r1
900004a2:	d92d      	bls.n	90000500 <__udivmoddi4+0x2b0>
900004a4:	3802      	subs	r0, #2
900004a6:	4461      	add	r1, ip
900004a8:	1b49      	subs	r1, r1, r5
900004aa:	b292      	uxth	r2, r2
900004ac:	fbb1 f5f7 	udiv	r5, r1, r7
900004b0:	fb07 1115 	mls	r1, r7, r5, r1
900004b4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
900004b8:	fb05 f10e 	mul.w	r1, r5, lr
900004bc:	4291      	cmp	r1, r2
900004be:	d908      	bls.n	900004d2 <__udivmoddi4+0x282>
900004c0:	eb1c 0202 	adds.w	r2, ip, r2
900004c4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
900004c8:	d216      	bcs.n	900004f8 <__udivmoddi4+0x2a8>
900004ca:	4291      	cmp	r1, r2
900004cc:	d914      	bls.n	900004f8 <__udivmoddi4+0x2a8>
900004ce:	3d02      	subs	r5, #2
900004d0:	4462      	add	r2, ip
900004d2:	1a52      	subs	r2, r2, r1
900004d4:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
900004d8:	e738      	b.n	9000034c <__udivmoddi4+0xfc>
900004da:	4631      	mov	r1, r6
900004dc:	4630      	mov	r0, r6
900004de:	e708      	b.n	900002f2 <__udivmoddi4+0xa2>
900004e0:	4639      	mov	r1, r7
900004e2:	e6e6      	b.n	900002b2 <__udivmoddi4+0x62>
900004e4:	4610      	mov	r0, r2
900004e6:	e6fb      	b.n	900002e0 <__udivmoddi4+0x90>
900004e8:	4548      	cmp	r0, r9
900004ea:	d2a9      	bcs.n	90000440 <__udivmoddi4+0x1f0>
900004ec:	ebb9 0802 	subs.w	r8, r9, r2
900004f0:	eb65 0e0c 	sbc.w	lr, r5, ip
900004f4:	3b01      	subs	r3, #1
900004f6:	e7a3      	b.n	90000440 <__udivmoddi4+0x1f0>
900004f8:	4645      	mov	r5, r8
900004fa:	e7ea      	b.n	900004d2 <__udivmoddi4+0x282>
900004fc:	462b      	mov	r3, r5
900004fe:	e794      	b.n	9000042a <__udivmoddi4+0x1da>
90000500:	4640      	mov	r0, r8
90000502:	e7d1      	b.n	900004a8 <__udivmoddi4+0x258>
90000504:	46d0      	mov	r8, sl
90000506:	e77b      	b.n	90000400 <__udivmoddi4+0x1b0>
90000508:	3d02      	subs	r5, #2
9000050a:	4462      	add	r2, ip
9000050c:	e732      	b.n	90000374 <__udivmoddi4+0x124>
9000050e:	4608      	mov	r0, r1
90000510:	e70a      	b.n	90000328 <__udivmoddi4+0xd8>
90000512:	4464      	add	r4, ip
90000514:	3802      	subs	r0, #2
90000516:	e742      	b.n	9000039e <__udivmoddi4+0x14e>

90000518 <__aeabi_idiv0>:
90000518:	4770      	bx	lr
9000051a:	bf00      	nop

9000051c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
9000051c:	f8df d034 	ldr.w	sp, [pc, #52]	; 90000554 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000520:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000522:	e003      	b.n	9000052c <LoopCopyDataInit>

90000524 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000524:	4b0c      	ldr	r3, [pc, #48]	; (90000558 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000526:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000528:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000052a:	3104      	adds	r1, #4

9000052c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
9000052c:	480b      	ldr	r0, [pc, #44]	; (9000055c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
9000052e:	4b0c      	ldr	r3, [pc, #48]	; (90000560 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000530:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000532:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000534:	d3f6      	bcc.n	90000524 <CopyDataInit>
  ldr  r2, =_sbss
90000536:	4a0b      	ldr	r2, [pc, #44]	; (90000564 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000538:	e002      	b.n	90000540 <LoopFillZerobss>

9000053a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000053a:	2300      	movs	r3, #0
  str  r3, [r2], #4
9000053c:	f842 3b04 	str.w	r3, [r2], #4

90000540 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000540:	4b09      	ldr	r3, [pc, #36]	; (90000568 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000542:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000544:	d3f9      	bcc.n	9000053a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000546:	f000 fd2b 	bl	90000fa0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
9000054a:	f006 ff35 	bl	900073b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
9000054e:	f000 f82b 	bl	900005a8 <main>
  bx  lr    
90000552:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000554:	20040000 	.word	0x20040000
  ldr  r3, =_sidata
90000558:	9000dea4 	.word	0x9000dea4
  ldr  r0, =_sdata
9000055c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
90000560:	200000c4 	.word	0x200000c4
  ldr  r2, =_sbss
90000564:	200000c4 	.word	0x200000c4
  ldr  r3, = _ebss
90000568:	20025ca4 	.word	0x20025ca4

9000056c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
9000056c:	e7fe      	b.n	9000056c <ADC_IRQHandler>
	...

90000570 <MainTask>:
*/
/*********************************************************************
*
*       MainTask
*/
void MainTask(void) {
90000570:	b508      	push	{r3, lr}
  GUI_Clear();
90000572:	f002 f93b 	bl	900027ec <GUI_Clear>
  GUI_SetFont(&GUI_Font20_1);
90000576:	480a      	ldr	r0, [pc, #40]	; (900005a0 <MainTask+0x30>)
90000578:	f002 f87a 	bl	90002670 <GUI_SetFont>
  GUI_DispStringAt("Hello world!", (LCD_GetXSize()-100)/2, (LCD_GetYSize()-20)/2);
9000057c:	f003 f89e 	bl	900036bc <LCD_GetXSize>
90000580:	4604      	mov	r4, r0
90000582:	f003 f8a3 	bl	900036cc <LCD_GetYSize>
90000586:	3814      	subs	r0, #20
90000588:	eb00 72d0 	add.w	r2, r0, r0, lsr #31
9000058c:	f1a4 0064 	sub.w	r0, r4, #100	; 0x64
90000590:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
90000594:	1052      	asrs	r2, r2, #1
90000596:	1041      	asrs	r1, r0, #1
90000598:	4802      	ldr	r0, [pc, #8]	; (900005a4 <MainTask+0x34>)
9000059a:	f002 fb8d 	bl	90002cb8 <GUI_DispStringAt>
  while(1);
9000059e:	e7fe      	b.n	9000059e <MainTask+0x2e>
900005a0:	9000b560 	.word	0x9000b560
900005a4:	9000de84 	.word	0x9000de84

900005a8 <main>:
  * @brief  Main program
  * @param  None
  * @retval None
  */ 
int main(void)
{
900005a8:	b580      	push	{r7, lr}
900005aa:	b094      	sub	sp, #80	; 0x50

  /* Configure the MPU attributes for TFT-LCD with recommended configurations:
     Normal memory, Shareable, write-back */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
  MPU_InitStruct.BaseAddress = 0x64000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
900005ac:	f04f 47c8 	mov.w	r7, #1677721600	; 0x64000000
  HAL_MPU_Disable();
900005b0:	f000 fddc 	bl	9000116c <HAL_MPU_Disable>
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
900005b4:	f240 4301 	movw	r3, #1025	; 0x401
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
  MPU_InitStruct.SubRegionDisable = 0x00;
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900005b8:	a808      	add	r0, sp, #32
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
900005ba:	f8ad 3020 	strh.w	r3, [sp, #32]
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
900005be:	4b62      	ldr	r3, [pc, #392]	; (90000748 <main+0x1a0>)
900005c0:	e9cd 7309 	strd	r7, r3, [sp, #36]	; 0x24
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
900005c4:	4b61      	ldr	r3, [pc, #388]	; (9000074c <main+0x1a4>)
900005c6:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900005c8:	f000 fdee 	bl	900011a8 <HAL_MPU_ConfigRegion>
#else
#error Can't setup MPU regions, specific board name isn't defined!
#endif

  /* Enable the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
900005cc:	2004      	movs	r0, #4
900005ce:	f000 fddb 	bl	90001188 <HAL_MPU_Enable>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
900005d2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900005d6:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
900005da:	4a5d      	ldr	r2, [pc, #372]	; (90000750 <main+0x1a8>)
900005dc:	2100      	movs	r1, #0
900005de:	f8c2 1250 	str.w	r1, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
900005e2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900005e6:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
900005ea:	6953      	ldr	r3, [r2, #20]
900005ec:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
900005f0:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
900005f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900005f6:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
900005fa:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900005fe:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000602:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90000606:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000060a:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000060e:	f3c3 334e 	ubfx	r3, r3, #13, #15
90000612:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90000614:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000618:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000061a:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
9000061e:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90000620:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
90000624:	d2f9      	bcs.n	9000061a <main+0x72>
    } while(sets-- != 0U);
90000626:	3b20      	subs	r3, #32
90000628:	f113 0f20 	cmn.w	r3, #32
9000062c:	d1f2      	bne.n	90000614 <main+0x6c>
9000062e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90000632:	6953      	ldr	r3, [r2, #20]
90000634:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90000638:	6153      	str	r3, [r2, #20]
9000063a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000063e:	f3bf 8f6f 	isb	sy
  __HAL_RCC_PWR_CLK_ENABLE();
90000642:	4d44      	ldr	r5, [pc, #272]	; (90000754 <main+0x1ac>)
  HAL_Init();
90000644:	f000 fcf6 	bl	90001034 <HAL_Init>
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
90000648:	2701      	movs	r7, #1
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
9000064a:	2402      	movs	r4, #2
  __HAL_RCC_PWR_CLK_ENABLE();
9000064c:	6c2b      	ldr	r3, [r5, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 432;  
9000064e:	2619      	movs	r6, #25
  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
90000650:	a808      	add	r0, sp, #32
  __HAL_RCC_PWR_CLK_ENABLE();
90000652:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
90000656:	642b      	str	r3, [r5, #64]	; 0x40
90000658:	6c2b      	ldr	r3, [r5, #64]	; 0x40
9000065a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
9000065e:	9301      	str	r3, [sp, #4]
90000660:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);  
90000662:	4b3d      	ldr	r3, [pc, #244]	; (90000758 <main+0x1b0>)
90000664:	681a      	ldr	r2, [r3, #0]
90000666:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
9000066a:	601a      	str	r2, [r3, #0]
9000066c:	681b      	ldr	r3, [r3, #0]
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
9000066e:	9412      	str	r4, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);  
90000670:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
90000674:	9302      	str	r3, [sp, #8]
90000676:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
90000678:	f44f 3380 	mov.w	r3, #65536	; 0x10000
9000067c:	e9cd 7308 	strd	r7, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90000680:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
90000684:	e9cd 430e 	strd	r4, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 432;  
90000688:	f44f 73d8 	mov.w	r3, #432	; 0x1b0
9000068c:	e9cd 6310 	strd	r6, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLQ = 9;
90000690:	2309      	movs	r3, #9
90000692:	9313      	str	r3, [sp, #76]	; 0x4c
  ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
90000694:	f000 fed0 	bl	90001438 <HAL_RCC_OscConfig>
  if(ret != HAL_OK)
90000698:	b118      	cbz	r0, 900006a2 <main+0xfa>
    HAL_Delay(50);
9000069a:	2032      	movs	r0, #50	; 0x32
9000069c:	f000 fcee 	bl	9000107c <HAL_Delay>
  while(1)
900006a0:	e7fb      	b.n	9000069a <main+0xf2>
  ret = HAL_PWREx_EnableOverDrive();
900006a2:	f000 fe91 	bl	900013c8 <HAL_PWREx_EnableOverDrive>
  if(ret != HAL_OK)
900006a6:	b118      	cbz	r0, 900006b0 <main+0x108>
    HAL_Delay(50);
900006a8:	2032      	movs	r0, #50	; 0x32
900006aa:	f000 fce7 	bl	9000107c <HAL_Delay>
  while(1)
900006ae:	e7fb      	b.n	900006a8 <main+0x100>
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
900006b0:	230f      	movs	r3, #15
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
900006b2:	9005      	str	r0, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2; 
900006b4:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
900006b8:	2107      	movs	r1, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
900006ba:	e9cd 3403 	strd	r3, r4, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2; 
900006be:	f44f 5380 	mov.w	r3, #4096	; 0x1000
900006c2:	e9cd 0306 	strd	r0, r3, [sp, #24]
  ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7);
900006c6:	a803      	add	r0, sp, #12
900006c8:	f001 f89e 	bl	90001808 <HAL_RCC_ClockConfig>
  if(ret != HAL_OK)
900006cc:	4606      	mov	r6, r0
900006ce:	b118      	cbz	r0, 900006d8 <main+0x130>
    HAL_Delay(50);
900006d0:	2032      	movs	r0, #50	; 0x32
900006d2:	f000 fcd3 	bl	9000107c <HAL_Delay>
  while(1)
900006d6:	e7fb      	b.n	900006d0 <main+0x128>
  BSP_LED_Init(LED5);
900006d8:	f000 fada 	bl	90000c90 <BSP_LED_Init>
  uwPrescalerValue = (uint32_t) ((SystemCoreClock /2) / 10000) - 1;
900006dc:	4b1f      	ldr	r3, [pc, #124]	; (9000075c <main+0x1b4>)
900006de:	f644 6220 	movw	r2, #20000	; 0x4e20
900006e2:	4c1f      	ldr	r4, [pc, #124]	; (90000760 <main+0x1b8>)
900006e4:	681b      	ldr	r3, [r3, #0]
  TimHandle.Init.ClockDivision = 0;
900006e6:	6166      	str	r6, [r4, #20]
  TimHandle.Init.CounterMode = TIM_COUNTERMODE_UP;
900006e8:	60e6      	str	r6, [r4, #12]
  TimHandle.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
900006ea:	61e6      	str	r6, [r4, #28]
  if(HAL_TIM_Base_Init(&TimHandle) != HAL_OK)
900006ec:	1d26      	adds	r6, r4, #4
  uwPrescalerValue = (uint32_t) ((SystemCoreClock /2) / 10000) - 1;
900006ee:	fbb3 f3f2 	udiv	r3, r3, r2
  TimHandle.Instance = TIM3;
900006f2:	4a1c      	ldr	r2, [pc, #112]	; (90000764 <main+0x1bc>)
  uwPrescalerValue = (uint32_t) ((SystemCoreClock /2) / 10000) - 1;
900006f4:	3b01      	subs	r3, #1
  if(HAL_TIM_Base_Init(&TimHandle) != HAL_OK)
900006f6:	4630      	mov	r0, r6
  TimHandle.Instance = TIM3;
900006f8:	6062      	str	r2, [r4, #4]
  TimHandle.Init.Period = 500 - 1;
900006fa:	f240 12f3 	movw	r2, #499	; 0x1f3
  uwPrescalerValue = (uint32_t) ((SystemCoreClock /2) / 10000) - 1;
900006fe:	6023      	str	r3, [r4, #0]
  TimHandle.Init.Period = 500 - 1;
90000700:	6122      	str	r2, [r4, #16]
  TimHandle.Init.Prescaler = uwPrescalerValue;
90000702:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&TimHandle) != HAL_OK)
90000704:	f001 faa4 	bl	90001c50 <HAL_TIM_Base_Init>
90000708:	b100      	cbz	r0, 9000070c <main+0x164>
    while(1) 
9000070a:	e7fe      	b.n	9000070a <main+0x162>
  if(HAL_TIM_Base_Start_IT(&TimHandle) != HAL_OK)
9000070c:	4630      	mov	r0, r6
9000070e:	f001 f947 	bl	900019a0 <HAL_TIM_Base_Start_IT>
90000712:	b100      	cbz	r0, 90000716 <main+0x16e>
    while(1) 
90000714:	e7fe      	b.n	90000714 <main+0x16c>
  BSP_LED_Init(LED5);
90000716:	f000 fabb 	bl	90000c90 <BSP_LED_Init>
  BSP_LED_Init(LED6);
9000071a:	4638      	mov	r0, r7
9000071c:	f000 fab8 	bl	90000c90 <BSP_LED_Init>
  __HAL_RCC_CRC_CLK_ENABLE();
90000720:	6b2b      	ldr	r3, [r5, #48]	; 0x30
90000722:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
90000726:	632b      	str	r3, [r5, #48]	; 0x30
90000728:	6b2b      	ldr	r3, [r5, #48]	; 0x30
9000072a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
9000072e:	9308      	str	r3, [sp, #32]
90000730:	9b08      	ldr	r3, [sp, #32]
  GUI_Init();
90000732:	f002 f8b7 	bl	900028a4 <GUI_Init>
  WM_SetCreateFlags(WM_CF_MEMDEV);
90000736:	2004      	movs	r0, #4
  GUI_Initialized = 1;
90000738:	f884 7050 	strb.w	r7, [r4, #80]	; 0x50
  WM_SetCreateFlags(WM_CF_MEMDEV);
9000073c:	f006 f91a 	bl	90006974 <WM_SetCreateFlags>
  MainTask();
90000740:	f7ff ff16 	bl	90000570 <MainTask>
  for(;;);
90000744:	e7fe      	b.n	90000744 <main+0x19c>
90000746:	bf00      	nop
90000748:	03000012 	.word	0x03000012
9000074c:	01010100 	.word	0x01010100
90000750:	e000ed00 	.word	0xe000ed00
90000754:	40023800 	.word	0x40023800
90000758:	40007000 	.word	0x40007000
9000075c:	20000084 	.word	0x20000084
90000760:	200000e0 	.word	0x200000e0
90000764:	40000400 	.word	0x40000400

90000768 <HAL_TIM_Base_MspInit>:
  __HAL_RCC_TIM3_CLK_ENABLE();
90000768:	4b0a      	ldr	r3, [pc, #40]	; (90000794 <HAL_TIM_Base_MspInit+0x2c>)
{
9000076a:	b507      	push	{r0, r1, r2, lr}
  __HAL_RCC_TIM3_CLK_ENABLE();
9000076c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  HAL_NVIC_SetPriority(TIM3_IRQn, 0, 1);
9000076e:	2100      	movs	r1, #0
90000770:	201d      	movs	r0, #29
  __HAL_RCC_TIM3_CLK_ENABLE();
90000772:	f042 0202 	orr.w	r2, r2, #2
90000776:	641a      	str	r2, [r3, #64]	; 0x40
  HAL_NVIC_SetPriority(TIM3_IRQn, 0, 1);
90000778:	2201      	movs	r2, #1
  __HAL_RCC_TIM3_CLK_ENABLE();
9000077a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9000077c:	f003 0302 	and.w	r3, r3, #2
90000780:	9301      	str	r3, [sp, #4]
90000782:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(TIM3_IRQn, 0, 1);
90000784:	f000 fc9e 	bl	900010c4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM3_IRQn);
90000788:	201d      	movs	r0, #29
}
9000078a:	b003      	add	sp, #12
9000078c:	f85d eb04 	ldr.w	lr, [sp], #4
  HAL_NVIC_EnableIRQ(TIM3_IRQn);
90000790:	f000 bcca 	b.w	90001128 <HAL_NVIC_EnableIRQ>
90000794:	40023800 	.word	0x40023800

90000798 <BSP_Background>:
  BSP_LED_Toggle(LED5);
90000798:	2000      	movs	r0, #0
{
9000079a:	b508      	push	{r3, lr}
  BSP_LED_Toggle(LED5);
9000079c:	f000 faa8 	bl	90000cf0 <BSP_LED_Toggle>
  BSP_LED_Toggle(LED6);
900007a0:	2001      	movs	r0, #1
}
900007a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  BSP_LED_Toggle(LED6);
900007a6:	f000 baa3 	b.w	90000cf0 <BSP_LED_Toggle>

900007aa <HAL_TIM_PeriodElapsedCallback>:
  BSP_Background();
900007aa:	f7ff bff5 	b.w	90000798 <BSP_Background>

900007ae <NMI_Handler>:
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
}
900007ae:	4770      	bx	lr

900007b0 <HardFault_Handler>:
  * @retval None
  */
void HardFault_Handler(void)
{
  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
900007b0:	e7fe      	b.n	900007b0 <HardFault_Handler>

900007b2 <MemManage_Handler>:
  * @retval None
  */
void MemManage_Handler(void)
{
  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
900007b2:	e7fe      	b.n	900007b2 <MemManage_Handler>

900007b4 <BusFault_Handler>:
  * @retval None
  */
void BusFault_Handler(void)
{
  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
900007b4:	e7fe      	b.n	900007b4 <BusFault_Handler>

900007b6 <UsageFault_Handler>:
  * @retval None
  */
void UsageFault_Handler(void)
{
  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
900007b6:	e7fe      	b.n	900007b6 <UsageFault_Handler>

900007b8 <DebugMon_Handler>:
900007b8:	4770      	bx	lr
	...

900007bc <SysTick_Handler>:
  * @brief  This function handles SysTick Handler.
  * @param  None
  * @retval None
  */
void SysTick_Handler(void)
{
900007bc:	b508      	push	{r3, lr}
  /* Update the LocalTime by adding 1 ms each SysTick interrupt */
  HAL_IncTick();
900007be:	f000 fc4b 	bl	90001058 <HAL_IncTick>
  
  OS_TimeMS++;
900007c2:	4a02      	ldr	r2, [pc, #8]	; (900007cc <SysTick_Handler+0x10>)
900007c4:	6813      	ldr	r3, [r2, #0]
900007c6:	3301      	adds	r3, #1
900007c8:	6013      	str	r3, [r2, #0]
}
900007ca:	bd08      	pop	{r3, pc}
900007cc:	2002594c 	.word	0x2002594c

900007d0 <TIM3_IRQHandler>:
  * @param  None
  * @retval None
  */
void TIM3_IRQHandler(void)
{
  HAL_TIM_IRQHandler(&TimHandle);
900007d0:	4801      	ldr	r0, [pc, #4]	; (900007d8 <TIM3_IRQHandler+0x8>)
900007d2:	f001 b927 	b.w	90001a24 <HAL_TIM_IRQHandler>
900007d6:	bf00      	nop
900007d8:	200000e4 	.word	0x200000e4

900007dc <ST7789H2_GetLcdPixelWidth>:
  * @retval The Lcd Pixel Width
  */
uint16_t ST7789H2_GetLcdPixelWidth(void)
{
 return (uint16_t)ST7789H2_LCD_PIXEL_WIDTH;
}
900007dc:	20f0      	movs	r0, #240	; 0xf0
900007de:	4770      	bx	lr

900007e0 <ST7789H2_SetDisplayWindow>:
  * @param  Width:  display window width.
  * @retval None
  */
void ST7789H2_SetDisplayWindow(uint16_t Xpos, uint16_t Ypos, uint16_t Width, uint16_t Height)
{
  if (Xpos < ST7789H2_LCD_PIXEL_WIDTH)
900007e0:	28ef      	cmp	r0, #239	; 0xef
{
900007e2:	b530      	push	{r4, r5, lr}
  if (Xpos < ST7789H2_LCD_PIXEL_WIDTH)
900007e4:	bf94      	ite	ls
900007e6:	4605      	movls	r5, r0
900007e8:	2500      	movhi	r5, #0
900007ea:	4c0e      	ldr	r4, [pc, #56]	; (90000824 <ST7789H2_SetDisplayWindow+0x44>)
  else
  {
    WindowsXstart = 0;
  }

  if (Ypos < ST7789H2_LCD_PIXEL_HEIGHT)
900007ec:	29ef      	cmp	r1, #239	; 0xef
900007ee:	8025      	strh	r5, [r4, #0]
900007f0:	bf94      	ite	ls
900007f2:	460d      	movls	r5, r1
900007f4:	2500      	movhi	r5, #0
900007f6:	8065      	strh	r5, [r4, #2]
  else
  {
    WindowsYstart = 0;
  }

  if (Width  + Xpos <= ST7789H2_LCD_PIXEL_WIDTH)
900007f8:	1814      	adds	r4, r2, r0
900007fa:	2cf0      	cmp	r4, #240	; 0xf0
  {
    WindowsXend = Width  + Xpos - 1;
900007fc:	bfd6      	itet	le
900007fe:	f102 32ff 	addle.w	r2, r2, #4294967295	; 0xffffffff
  }
  else
  {
    WindowsXend = ST7789H2_LCD_PIXEL_WIDTH - 1;
90000802:	20ef      	movgt	r0, #239	; 0xef
    WindowsXend = Width  + Xpos - 1;
90000804:	1880      	addle	r0, r0, r2
90000806:	4a08      	ldr	r2, [pc, #32]	; (90000828 <ST7789H2_SetDisplayWindow+0x48>)
90000808:	bfd8      	it	le
9000080a:	b280      	uxthle	r0, r0
9000080c:	8010      	strh	r0, [r2, #0]
  }

  if (Height + Ypos <= ST7789H2_LCD_PIXEL_HEIGHT)
9000080e:	1858      	adds	r0, r3, r1
90000810:	28f0      	cmp	r0, #240	; 0xf0
  {
    WindowsYend = Height + Ypos - 1;
90000812:	bfd7      	itett	le
90000814:	f103 33ff 	addle.w	r3, r3, #4294967295	; 0xffffffff
  }
  else
  {
    WindowsYend = ST7789H2_LCD_PIXEL_HEIGHT-1;
90000818:	21ef      	movgt	r1, #239	; 0xef
    WindowsYend = Height + Ypos - 1;
9000081a:	18c9      	addle	r1, r1, r3
9000081c:	b289      	uxthle	r1, r1
9000081e:	8051      	strh	r1, [r2, #2]
  }
}
90000820:	bd30      	pop	{r4, r5, pc}
90000822:	bf00      	nop
90000824:	20000132 	.word	0x20000132
90000828:	20000000 	.word	0x20000000

9000082c <ST7789H2_GetLcdPixelHeight>:
9000082c:	20f0      	movs	r0, #240	; 0xf0
9000082e:	4770      	bx	lr

90000830 <ST7789H2_WriteReg>:
{
90000830:	b538      	push	{r3, r4, r5, lr}
90000832:	460c      	mov	r4, r1
90000834:	4615      	mov	r5, r2
  LCD_IO_WriteReg(Command);
90000836:	f000 fb07 	bl	90000e48 <LCD_IO_WriteReg>
  for (i=0; i<NbParameters; i++)
9000083a:	4425      	add	r5, r4
9000083c:	42ac      	cmp	r4, r5
9000083e:	d100      	bne.n	90000842 <ST7789H2_WriteReg+0x12>
}
90000840:	bd38      	pop	{r3, r4, r5, pc}
    LCD_IO_WriteData(Parameters[i]);
90000842:	f814 0b01 	ldrb.w	r0, [r4], #1
90000846:	f000 faf7 	bl	90000e38 <LCD_IO_WriteData>
  for (i=0; i<NbParameters; i++)
9000084a:	e7f7      	b.n	9000083c <ST7789H2_WriteReg+0xc>

9000084c <ST7789H2_SetOrientation>:
  if(orientation == ST7789H2_ORIENTATION_LANDSCAPE)
9000084c:	2801      	cmp	r0, #1
{
9000084e:	b513      	push	{r0, r1, r4, lr}
90000850:	4604      	mov	r4, r0
  if(orientation == ST7789H2_ORIENTATION_LANDSCAPE)
90000852:	d01e      	beq.n	90000892 <ST7789H2_SetOrientation+0x46>
  else if(orientation == ST7789H2_ORIENTATION_LANDSCAPE_ROT180)
90000854:	2802      	cmp	r0, #2
90000856:	d11e      	bne.n	90000896 <ST7789H2_SetOrientation+0x4a>
    parameter[0] = 0x00;
90000858:	4b10      	ldr	r3, [pc, #64]	; (9000089c <ST7789H2_SetOrientation+0x50>)
    ST7789H2_WriteReg(ST7789H2_VSCRDEF, parameter, 6);
9000085a:	2206      	movs	r2, #6
9000085c:	4669      	mov	r1, sp
9000085e:	2033      	movs	r0, #51	; 0x33
    parameter[0] = 0x00;
90000860:	9300      	str	r3, [sp, #0]
    parameter[4] = 0x00;
90000862:	2300      	movs	r3, #0
90000864:	f8ad 3004 	strh.w	r3, [sp, #4]
    ST7789H2_WriteReg(ST7789H2_VSCRDEF, parameter, 6);
90000868:	f7ff ffe2 	bl	90000830 <ST7789H2_WriteReg>
    parameter[0] = 0x00;
9000086c:	f44f 43a0 	mov.w	r3, #20480	; 0x5000
    ST7789H2_WriteReg(ST7789H2_VSCSAD, parameter, 2);
90000870:	4622      	mov	r2, r4
90000872:	4669      	mov	r1, sp
90000874:	2037      	movs	r0, #55	; 0x37
    parameter[0] = 0x00;
90000876:	f8ad 3000 	strh.w	r3, [sp]
    ST7789H2_WriteReg(ST7789H2_VSCSAD, parameter, 2);
9000087a:	f7ff ffd9 	bl	90000830 <ST7789H2_WriteReg>
    parameter[0] = 0xC0; 
9000087e:	23c0      	movs	r3, #192	; 0xc0
  ST7789H2_WriteReg(ST7789H2_NORMAL_DISPLAY, parameter, 1);
90000880:	2201      	movs	r2, #1
90000882:	4669      	mov	r1, sp
90000884:	2036      	movs	r0, #54	; 0x36
    parameter[0] = 0x00;     
90000886:	f88d 3000 	strb.w	r3, [sp]
  ST7789H2_WriteReg(ST7789H2_NORMAL_DISPLAY, parameter, 1);
9000088a:	f7ff ffd1 	bl	90000830 <ST7789H2_WriteReg>
}
9000088e:	b002      	add	sp, #8
90000890:	bd10      	pop	{r4, pc}
90000892:	2300      	movs	r3, #0
90000894:	e7f4      	b.n	90000880 <ST7789H2_SetOrientation+0x34>
90000896:	2360      	movs	r3, #96	; 0x60
90000898:	e7f2      	b.n	90000880 <ST7789H2_SetOrientation+0x34>
9000089a:	bf00      	nop
9000089c:	f0010000 	.word	0xf0010000

900008a0 <ST7789H2_DisplayOn>:
  ST7789H2_WriteReg(ST7789H2_DISPLAY_ON, (uint8_t*)NULL, 0);
900008a0:	2200      	movs	r2, #0
900008a2:	2029      	movs	r0, #41	; 0x29
900008a4:	4611      	mov	r1, r2
{
900008a6:	b508      	push	{r3, lr}
  ST7789H2_WriteReg(ST7789H2_DISPLAY_ON, (uint8_t*)NULL, 0);
900008a8:	f7ff ffc2 	bl	90000830 <ST7789H2_WriteReg>
  ST7789H2_WriteReg(ST7789H2_SLEEP_OUT, (uint8_t*)NULL, 0);
900008ac:	2200      	movs	r2, #0
900008ae:	2011      	movs	r0, #17
900008b0:	4611      	mov	r1, r2
}
900008b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  ST7789H2_WriteReg(ST7789H2_SLEEP_OUT, (uint8_t*)NULL, 0);
900008b6:	f7ff bfbb 	b.w	90000830 <ST7789H2_WriteReg>
	...

900008bc <ST7789H2_Init>:
{
900008bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  LCD_IO_Init();
900008be:	f000 fa21 	bl	90000d04 <LCD_IO_Init>
  ST7789H2_WriteReg(ST7789H2_SLEEP_IN, (uint8_t*)NULL, 0); 
900008c2:	2200      	movs	r2, #0
900008c4:	2010      	movs	r0, #16
  parameter[0] = 0x00;     
900008c6:	2400      	movs	r4, #0
  ST7789H2_WriteReg(ST7789H2_SLEEP_IN, (uint8_t*)NULL, 0); 
900008c8:	4611      	mov	r1, r2
  parameter[0] = 0x05;     
900008ca:	2505      	movs	r5, #5
  ST7789H2_WriteReg(ST7789H2_SLEEP_IN, (uint8_t*)NULL, 0); 
900008cc:	f7ff ffb0 	bl	90000830 <ST7789H2_WriteReg>
  LCD_IO_Delay(10);  
900008d0:	200a      	movs	r0, #10
900008d2:	f000 fac6 	bl	90000e62 <LCD_IO_Delay>
  ST7789H2_WriteReg(0x01, (uint8_t*)NULL, 0); 
900008d6:	2200      	movs	r2, #0
900008d8:	2001      	movs	r0, #1
  parameter[0] = 0x00;
900008da:	f04f 466f 	mov.w	r6, #4009754624	; 0xef000000
  ST7789H2_WriteReg(0x01, (uint8_t*)NULL, 0); 
900008de:	4611      	mov	r1, r2
900008e0:	f7ff ffa6 	bl	90000830 <ST7789H2_WriteReg>
  LCD_IO_Delay(200);
900008e4:	20c8      	movs	r0, #200	; 0xc8
900008e6:	f000 fabc 	bl	90000e62 <LCD_IO_Delay>
  ST7789H2_WriteReg(ST7789H2_SLEEP_OUT, (uint8_t*)NULL, 0); 
900008ea:	2200      	movs	r2, #0
900008ec:	2011      	movs	r0, #17
900008ee:	4611      	mov	r1, r2
900008f0:	f7ff ff9e 	bl	90000830 <ST7789H2_WriteReg>
  LCD_IO_Delay(120); 
900008f4:	2078      	movs	r0, #120	; 0x78
900008f6:	f000 fab4 	bl	90000e62 <LCD_IO_Delay>
  ST7789H2_WriteReg(ST7789H2_NORMAL_DISPLAY, parameter, 1);
900008fa:	4669      	mov	r1, sp
900008fc:	2201      	movs	r2, #1
900008fe:	2036      	movs	r0, #54	; 0x36
  parameter[0] = 0x00;     
90000900:	f88d 4000 	strb.w	r4, [sp]
  ST7789H2_WriteReg(ST7789H2_NORMAL_DISPLAY, parameter, 1);
90000904:	f7ff ff94 	bl	90000830 <ST7789H2_WriteReg>
  ST7789H2_WriteReg(ST7789H2_COLOR_MODE, parameter, 1);
90000908:	4669      	mov	r1, sp
9000090a:	2201      	movs	r2, #1
9000090c:	203a      	movs	r0, #58	; 0x3a
  parameter[0] = 0x05;     
9000090e:	f88d 5000 	strb.w	r5, [sp]
  ST7789H2_WriteReg(ST7789H2_COLOR_MODE, parameter, 1);
90000912:	f7ff ff8d 	bl	90000830 <ST7789H2_WriteReg>
  ST7789H2_WriteReg(ST7789H2_DISPLAY_INVERSION, (uint8_t*)NULL, 0);     
90000916:	4622      	mov	r2, r4
90000918:	4621      	mov	r1, r4
9000091a:	2021      	movs	r0, #33	; 0x21
9000091c:	f7ff ff88 	bl	90000830 <ST7789H2_WriteReg>
  ST7789H2_WriteReg(ST7789H2_CASET, parameter, 4);
90000920:	4669      	mov	r1, sp
90000922:	2204      	movs	r2, #4
90000924:	202a      	movs	r0, #42	; 0x2a
  parameter[0] = 0x00;
90000926:	9600      	str	r6, [sp, #0]
  ST7789H2_WriteReg(ST7789H2_CASET, parameter, 4);
90000928:	f7ff ff82 	bl	90000830 <ST7789H2_WriteReg>
  ST7789H2_WriteReg(ST7789H2_RASET, parameter, 4);
9000092c:	4669      	mov	r1, sp
9000092e:	2204      	movs	r2, #4
90000930:	202b      	movs	r0, #43	; 0x2b
  parameter[0] = 0x00;
90000932:	9600      	str	r6, [sp, #0]
  ST7789H2_WriteReg(ST7789H2_RASET, parameter, 4);
90000934:	f7ff ff7c 	bl	90000830 <ST7789H2_WriteReg>
  parameter[0] = 0x0C;
90000938:	4b3b      	ldr	r3, [pc, #236]	; (90000a28 <ST7789H2_Init+0x16c>)
  ST7789H2_WriteReg(ST7789H2_PORCH_CTRL, parameter, 5);
9000093a:	462a      	mov	r2, r5
9000093c:	4669      	mov	r1, sp
  parameter[0] = 0x0C;
9000093e:	9300      	str	r3, [sp, #0]
  parameter[4] = 0x33; 
90000940:	2333      	movs	r3, #51	; 0x33
  parameter[0] = 0x35; 
90000942:	2535      	movs	r5, #53	; 0x35
  ST7789H2_WriteReg(ST7789H2_PORCH_CTRL, parameter, 5);
90000944:	20b2      	movs	r0, #178	; 0xb2
  parameter[4] = 0x33; 
90000946:	f88d 3004 	strb.w	r3, [sp, #4]
  ST7789H2_WriteReg(ST7789H2_PORCH_CTRL, parameter, 5);
9000094a:	f7ff ff71 	bl	90000830 <ST7789H2_WriteReg>
  ST7789H2_WriteReg(ST7789H2_GATE_CTRL, parameter, 1);
9000094e:	4669      	mov	r1, sp
90000950:	2201      	movs	r2, #1
90000952:	20b7      	movs	r0, #183	; 0xb7
  parameter[0] = 0x35; 
90000954:	f88d 5000 	strb.w	r5, [sp]
  ST7789H2_WriteReg(ST7789H2_GATE_CTRL, parameter, 1);
90000958:	f7ff ff6a 	bl	90000830 <ST7789H2_WriteReg>
  parameter[0] = 0x1F; 
9000095c:	231f      	movs	r3, #31
  ST7789H2_WriteReg(ST7789H2_VCOM_SET, parameter, 1); 
9000095e:	4669      	mov	r1, sp
90000960:	2201      	movs	r2, #1
90000962:	20bb      	movs	r0, #187	; 0xbb
  parameter[0] = 0x1F; 
90000964:	f88d 3000 	strb.w	r3, [sp]
  ST7789H2_WriteReg(ST7789H2_VCOM_SET, parameter, 1); 
90000968:	f7ff ff62 	bl	90000830 <ST7789H2_WriteReg>
  parameter[0] = 0x2C; 
9000096c:	232c      	movs	r3, #44	; 0x2c
  ST7789H2_WriteReg(ST7789H2_LCM_CTRL, parameter, 1);
9000096e:	4669      	mov	r1, sp
90000970:	2201      	movs	r2, #1
90000972:	20c0      	movs	r0, #192	; 0xc0
  parameter[0] = 0x2C; 
90000974:	f88d 3000 	strb.w	r3, [sp]
  ST7789H2_WriteReg(ST7789H2_LCM_CTRL, parameter, 1);
90000978:	f7ff ff5a 	bl	90000830 <ST7789H2_WriteReg>
  parameter[0] = 0x01;
9000097c:	f24c 3301 	movw	r3, #49921	; 0xc301
  ST7789H2_WriteReg(ST7789H2_VDV_VRH_EN, parameter, 2);
90000980:	4669      	mov	r1, sp
90000982:	2202      	movs	r2, #2
90000984:	20c2      	movs	r0, #194	; 0xc2
  parameter[0] = 0x01;
90000986:	f8ad 3000 	strh.w	r3, [sp]
  ST7789H2_WriteReg(ST7789H2_VDV_VRH_EN, parameter, 2);
9000098a:	f7ff ff51 	bl	90000830 <ST7789H2_WriteReg>
  parameter[0] = 0x20; 
9000098e:	2320      	movs	r3, #32
  ST7789H2_WriteReg(ST7789H2_VDV_SET, parameter, 1); 
90000990:	4669      	mov	r1, sp
90000992:	2201      	movs	r2, #1
90000994:	20c4      	movs	r0, #196	; 0xc4
  parameter[0] = 0x20; 
90000996:	f88d 3000 	strb.w	r3, [sp]
  ST7789H2_WriteReg(ST7789H2_VDV_SET, parameter, 1); 
9000099a:	f7ff ff49 	bl	90000830 <ST7789H2_WriteReg>
  parameter[0] = 0x0F; 
9000099e:	230f      	movs	r3, #15
  ST7789H2_WriteReg(ST7789H2_FR_CTRL, parameter, 1); 
900009a0:	4669      	mov	r1, sp
900009a2:	2201      	movs	r2, #1
900009a4:	20c6      	movs	r0, #198	; 0xc6
  parameter[0] = 0x0F; 
900009a6:	f88d 3000 	strb.w	r3, [sp]
  ST7789H2_WriteReg(ST7789H2_FR_CTRL, parameter, 1); 
900009aa:	f7ff ff41 	bl	90000830 <ST7789H2_WriteReg>
  parameter[0] = 0xA4;
900009ae:	f24a 13a4 	movw	r3, #41380	; 0xa1a4
  ST7789H2_WriteReg(ST7789H2_POWER_CTRL, parameter, 1); 
900009b2:	4669      	mov	r1, sp
900009b4:	2201      	movs	r2, #1
900009b6:	20d0      	movs	r0, #208	; 0xd0
  parameter[0] = 0xA4;
900009b8:	f8ad 3000 	strh.w	r3, [sp]
  ST7789H2_WriteReg(ST7789H2_POWER_CTRL, parameter, 1); 
900009bc:	f7ff ff38 	bl	90000830 <ST7789H2_WriteReg>
  parameter[0] = 0xD0;
900009c0:	4b1a      	ldr	r3, [pc, #104]	; (90000a2c <ST7789H2_Init+0x170>)
  ST7789H2_WriteReg(ST7789H2_PV_GAMMA_CTRL, parameter, 14); 
900009c2:	4669      	mov	r1, sp
900009c4:	220e      	movs	r2, #14
  parameter[0] = 0xD0;
900009c6:	9300      	str	r3, [sp, #0]
  parameter[4] = 0x0C;
900009c8:	f103 532c 	add.w	r3, r3, #721420288	; 0x2b000000
  ST7789H2_WriteReg(ST7789H2_PV_GAMMA_CTRL, parameter, 14); 
900009cc:	20e0      	movs	r0, #224	; 0xe0
  parameter[4] = 0x0C;
900009ce:	f503 1320 	add.w	r3, r3, #2621440	; 0x280000
900009d2:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
900009d6:	9301      	str	r3, [sp, #4]
  parameter[8] = 0x50;
900009d8:	f1a3 53f9 	sub.w	r3, r3, #522190848	; 0x1f200000
900009dc:	f5a3 23bb 	sub.w	r3, r3, #382976	; 0x5d800
900009e0:	f2a3 63bc 	subw	r3, r3, #1724	; 0x6bc
900009e4:	9302      	str	r3, [sp, #8]
  parameter[12] = 0x29;
900009e6:	f642 5329 	movw	r3, #11561	; 0x2d29
900009ea:	f8ad 300c 	strh.w	r3, [sp, #12]
  ST7789H2_WriteReg(ST7789H2_PV_GAMMA_CTRL, parameter, 14); 
900009ee:	f7ff ff1f 	bl	90000830 <ST7789H2_WriteReg>
  parameter[4] = 0x06;
900009f2:	4a0f      	ldr	r2, [pc, #60]	; (90000a30 <ST7789H2_Init+0x174>)
  ST7789H2_WriteReg(ST7789H2_NV_GAMMA_CTRL, parameter, 14); 
900009f4:	4669      	mov	r1, sp
  parameter[4] = 0x06;
900009f6:	4b0f      	ldr	r3, [pc, #60]	; (90000a34 <ST7789H2_Init+0x178>)
  ST7789H2_WriteReg(ST7789H2_NV_GAMMA_CTRL, parameter, 14); 
900009f8:	20e1      	movs	r0, #225	; 0xe1
  parameter[4] = 0x06;
900009fa:	e9cd 2300 	strd	r2, r3, [sp]
  parameter[8] = 0x51;
900009fe:	4b0e      	ldr	r3, [pc, #56]	; (90000a38 <ST7789H2_Init+0x17c>)
  ST7789H2_WriteReg(ST7789H2_NV_GAMMA_CTRL, parameter, 14); 
90000a00:	220e      	movs	r2, #14
  parameter[8] = 0x51;
90000a02:	9302      	str	r3, [sp, #8]
  parameter[12] = 0x2F;
90000a04:	f243 132f 	movw	r3, #12591	; 0x312f
90000a08:	f8ad 300c 	strh.w	r3, [sp, #12]
  ST7789H2_WriteReg(ST7789H2_NV_GAMMA_CTRL, parameter, 14); 
90000a0c:	f7ff ff10 	bl	90000830 <ST7789H2_WriteReg>
  ST7789H2_DisplayOn();  
90000a10:	f7ff ff46 	bl	900008a0 <ST7789H2_DisplayOn>
  ST7789H2_WriteReg(ST7789H2_TEARING_EFFECT, parameter, 1);
90000a14:	2201      	movs	r2, #1
90000a16:	4669      	mov	r1, sp
90000a18:	4628      	mov	r0, r5
  parameter[0] = 0x00;     
90000a1a:	f88d 4000 	strb.w	r4, [sp]
  ST7789H2_WriteReg(ST7789H2_TEARING_EFFECT, parameter, 1);
90000a1e:	f7ff ff07 	bl	90000830 <ST7789H2_WriteReg>
}
90000a22:	b004      	add	sp, #16
90000a24:	bd70      	pop	{r4, r5, r6, pc}
90000a26:	bf00      	nop
90000a28:	33000c0c 	.word	0x33000c0c
90000a2c:	081108d0 	.word	0x081108d0
90000a30:	081008d0 	.word	0x081008d0
90000a34:	44390606 	.word	0x44390606
90000a38:	14160b51 	.word	0x14160b51

90000a3c <ST7789H2_DisplayOff>:
  parameter[0] = 0xFE;
90000a3c:	23fe      	movs	r3, #254	; 0xfe
{
90000a3e:	b507      	push	{r0, r1, r2, lr}
  ST7789H2_WriteReg(ST7789H2_DISPLAY_OFF, parameter, 1);  
90000a40:	2201      	movs	r2, #1
90000a42:	a901      	add	r1, sp, #4
90000a44:	20bd      	movs	r0, #189	; 0xbd
  parameter[0] = 0xFE;
90000a46:	f88d 3004 	strb.w	r3, [sp, #4]
  ST7789H2_WriteReg(ST7789H2_DISPLAY_OFF, parameter, 1);  
90000a4a:	f7ff fef1 	bl	90000830 <ST7789H2_WriteReg>
  ST7789H2_WriteReg(ST7789H2_SLEEP_IN, (uint8_t*)NULL, 0); 
90000a4e:	2200      	movs	r2, #0
90000a50:	2010      	movs	r0, #16
90000a52:	4611      	mov	r1, r2
90000a54:	f7ff feec 	bl	90000830 <ST7789H2_WriteReg>
  LCD_IO_Delay(10);  
90000a58:	200a      	movs	r0, #10
90000a5a:	f000 fa02 	bl	90000e62 <LCD_IO_Delay>
}
90000a5e:	b003      	add	sp, #12
90000a60:	f85d fb04 	ldr.w	pc, [sp], #4

90000a64 <ST7789H2_SetCursor>:
{
90000a64:	b537      	push	{r0, r1, r2, r4, r5, lr}
  parameter[1] = 0x00 + Xpos;
90000a66:	b2c0      	uxtb	r0, r0
  ST7789H2_WriteReg(ST7789H2_CASET, parameter, 4);
90000a68:	2204      	movs	r2, #4
  parameter[0] = 0x00;     
90000a6a:	2500      	movs	r5, #0
{
90000a6c:	460c      	mov	r4, r1
  parameter[1] = 0x00 + Xpos;
90000a6e:	f88d 0005 	strb.w	r0, [sp, #5]
  parameter[3] = 0xEF + Xpos;
90000a72:	3811      	subs	r0, #17
  ST7789H2_WriteReg(ST7789H2_CASET, parameter, 4);
90000a74:	eb0d 0102 	add.w	r1, sp, r2
  parameter[0] = 0x00;     
90000a78:	f88d 5004 	strb.w	r5, [sp, #4]
  parameter[3] = 0xEF + Xpos;
90000a7c:	f88d 0007 	strb.w	r0, [sp, #7]
  ST7789H2_WriteReg(ST7789H2_CASET, parameter, 4);
90000a80:	202a      	movs	r0, #42	; 0x2a
  parameter[2] = 0x00;
90000a82:	f88d 5006 	strb.w	r5, [sp, #6]
  ST7789H2_WriteReg(ST7789H2_CASET, parameter, 4);
90000a86:	f7ff fed3 	bl	90000830 <ST7789H2_WriteReg>
  parameter[1] = 0x00 + Ypos;
90000a8a:	b2e1      	uxtb	r1, r4
  ST7789H2_WriteReg(ST7789H2_RASET, parameter, 4);
90000a8c:	2204      	movs	r2, #4
90000a8e:	202b      	movs	r0, #43	; 0x2b
  parameter[0] = 0x00;
90000a90:	f88d 5004 	strb.w	r5, [sp, #4]
  parameter[1] = 0x00 + Ypos;
90000a94:	f88d 1005 	strb.w	r1, [sp, #5]
  parameter[3] = 0xEF + Ypos;
90000a98:	3911      	subs	r1, #17
  parameter[2] = 0x00;
90000a9a:	f88d 5006 	strb.w	r5, [sp, #6]
  parameter[3] = 0xEF + Ypos;
90000a9e:	f88d 1007 	strb.w	r1, [sp, #7]
  ST7789H2_WriteReg(ST7789H2_RASET, parameter, 4);
90000aa2:	eb0d 0102 	add.w	r1, sp, r2
90000aa6:	f7ff fec3 	bl	90000830 <ST7789H2_WriteReg>
}
90000aaa:	b003      	add	sp, #12
90000aac:	bd30      	pop	{r4, r5, pc}

90000aae <ST7789H2_WritePixel>:
{
90000aae:	b510      	push	{r4, lr}
90000ab0:	4614      	mov	r4, r2
  ST7789H2_SetCursor(Xpos, Ypos);
90000ab2:	f7ff ffd7 	bl	90000a64 <ST7789H2_SetCursor>
  ST7789H2_WriteReg(ST7789H2_WRITE_RAM, (uint8_t*)NULL, 0);   /* RAM write data command */
90000ab6:	2200      	movs	r2, #0
90000ab8:	202c      	movs	r0, #44	; 0x2c
90000aba:	4611      	mov	r1, r2
90000abc:	f7ff feb8 	bl	90000830 <ST7789H2_WriteReg>
  LCD_IO_WriteData(RGBCode);
90000ac0:	4620      	mov	r0, r4
}
90000ac2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  LCD_IO_WriteData(RGBCode);
90000ac6:	f000 b9b7 	b.w	90000e38 <LCD_IO_WriteData>

90000aca <ST7789H2_ReadPixel>:
{
90000aca:	b538      	push	{r3, r4, r5, lr}
90000acc:	4604      	mov	r4, r0
90000ace:	460d      	mov	r5, r1
  ST7789H2_SetCursor(Xpos, Ypos);
90000ad0:	f7ff ffc8 	bl	90000a64 <ST7789H2_SetCursor>
   * address 1 :    blue pixel 0    X  X  |     red pixel 1   X  X
   * address 2 :   green pixel 1    X  X  |    blue pixel 1   X  X
   */

  /* Set Cursor */
  ST7789H2_SetCursor(Xpos, Ypos);
90000ad4:	4629      	mov	r1, r5
90000ad6:	4620      	mov	r0, r4
90000ad8:	f7ff ffc4 	bl	90000a64 <ST7789H2_SetCursor>
  /* Prepare to read LCD RAM */
  ST7789H2_WriteReg(ST7789H2_READ_RAM, (uint8_t*)NULL, 0);   /* RAM read data command */
90000adc:	2200      	movs	r2, #0
90000ade:	202e      	movs	r0, #46	; 0x2e
90000ae0:	4611      	mov	r1, r2
90000ae2:	f7ff fea5 	bl	90000830 <ST7789H2_WriteReg>
  /* Dummy read */
  LCD_IO_ReadData();
90000ae6:	f000 f9b7 	bl	90000e58 <LCD_IO_ReadData>
  /* Read first part of the RGB888 data */
  rgb888_part1 = LCD_IO_ReadData();
90000aea:	f000 f9b5 	bl	90000e58 <LCD_IO_ReadData>
90000aee:	4604      	mov	r4, r0
  /* Read first part of the RGB888 data */
  rgb888_part2 = LCD_IO_ReadData();
90000af0:	f000 f9b2 	bl	90000e58 <LCD_IO_ReadData>
  rgb565 = ((uint16_t)(r) << 11) + ((uint16_t)(g) << 5) + ((uint16_t)(b) << 0);
90000af4:	f3c0 23c4 	ubfx	r3, r0, #11, #5
90000af8:	f3c4 0285 	ubfx	r2, r4, #2, #6
90000afc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90000b00:	eb03 1342 	add.w	r3, r3, r2, lsl #5
90000b04:	1918      	adds	r0, r3, r4
}
90000b06:	b280      	uxth	r0, r0
90000b08:	bd38      	pop	{r3, r4, r5, pc}

90000b0a <ST7789H2_DrawHLine>:
{
90000b0a:	b570      	push	{r4, r5, r6, lr}
90000b0c:	4606      	mov	r6, r0
90000b0e:	4608      	mov	r0, r1
  ST7789H2_SetCursor(Xpos, Ypos); 
90000b10:	4611      	mov	r1, r2
{
90000b12:	461c      	mov	r4, r3
  ST7789H2_SetCursor(Xpos, Ypos); 
90000b14:	f7ff ffa6 	bl	90000a64 <ST7789H2_SetCursor>
  ST7789H2_WriteReg(ST7789H2_WRITE_RAM, (uint8_t*)NULL, 0);   /* RAM write data command */
90000b18:	2200      	movs	r2, #0
  for(counter = 0; counter < Length; counter++)
90000b1a:	2500      	movs	r5, #0
  ST7789H2_WriteReg(ST7789H2_WRITE_RAM, (uint8_t*)NULL, 0);   /* RAM write data command */
90000b1c:	202c      	movs	r0, #44	; 0x2c
90000b1e:	4611      	mov	r1, r2
90000b20:	f7ff fe86 	bl	90000830 <ST7789H2_WriteReg>
  for(counter = 0; counter < Length; counter++)
90000b24:	42a5      	cmp	r5, r4
90000b26:	d100      	bne.n	90000b2a <ST7789H2_DrawHLine+0x20>
}
90000b28:	bd70      	pop	{r4, r5, r6, pc}
    LCD_IO_WriteData(RGBCode);
90000b2a:	4630      	mov	r0, r6
90000b2c:	3501      	adds	r5, #1
90000b2e:	f000 f983 	bl	90000e38 <LCD_IO_WriteData>
  for(counter = 0; counter < Length; counter++)
90000b32:	e7f7      	b.n	90000b24 <ST7789H2_DrawHLine+0x1a>

90000b34 <ST7789H2_DrawVLine>:
{
90000b34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90000b36:	4614      	mov	r4, r2
90000b38:	461d      	mov	r5, r3
90000b3a:	460e      	mov	r6, r1
90000b3c:	4607      	mov	r7, r0
  ST7789H2_SetCursor(Xpos, Ypos);
90000b3e:	4611      	mov	r1, r2
90000b40:	4425      	add	r5, r4
90000b42:	4630      	mov	r0, r6
90000b44:	f7ff ff8e 	bl	90000a64 <ST7789H2_SetCursor>
  ST7789H2_WriteReg(ST7789H2_WRITE_RAM, (uint8_t*)NULL, 0);   /* RAM write data command */
90000b48:	2200      	movs	r2, #0
90000b4a:	b2ad      	uxth	r5, r5
90000b4c:	202c      	movs	r0, #44	; 0x2c
90000b4e:	4611      	mov	r1, r2
90000b50:	f7ff fe6e 	bl	90000830 <ST7789H2_WriteReg>
  for(counter = 0; counter < Length; counter++)
90000b54:	42ac      	cmp	r4, r5
90000b56:	d100      	bne.n	90000b5a <ST7789H2_DrawVLine+0x26>
}
90000b58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    ST7789H2_WritePixel(Xpos, Ypos + counter, RGBCode);
90000b5a:	4621      	mov	r1, r4
90000b5c:	3401      	adds	r4, #1
90000b5e:	463a      	mov	r2, r7
90000b60:	4630      	mov	r0, r6
90000b62:	b2a4      	uxth	r4, r4
90000b64:	f7ff ffa3 	bl	90000aae <ST7789H2_WritePixel>
  for(counter = 0; counter < Length; counter++)
90000b68:	e7f4      	b.n	90000b54 <ST7789H2_DrawVLine+0x20>
	...

90000b6c <ST7789H2_DrawRGBHLine>:
  * @param  Ypos: Image Y position in the LCD
  * @param  Xsize: Image X size in the LCD
  * @retval None
  */
static void ST7789H2_DrawRGBHLine(uint16_t Xpos, uint16_t Ypos, uint16_t Xsize, uint8_t *pdata)
{
90000b6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90000b70:	4604      	mov	r4, r0
90000b72:	4615      	mov	r5, r2
  uint32_t i = 0;
  uint32_t posX;
  uint16_t *rgb565 = (uint16_t*)pdata;
  
  /* Prepare to write to LCD RAM */
  ST7789H2_WriteReg(ST7789H2_WRITE_RAM, (uint8_t*)NULL, 0);   /* RAM write data command */
90000b74:	2200      	movs	r2, #0
  uint32_t i = 0;
90000b76:	2700      	movs	r7, #0
  
  for (posX = Xpos; posX < (Xsize + Xpos); posX++)
90000b78:	4425      	add	r5, r4
  {
    if ((posX >= WindowsXstart) && (Ypos >= WindowsYstart) &&     /* Check we are in the defined window */
90000b7a:	f8df 9048 	ldr.w	r9, [pc, #72]	; 90000bc4 <ST7789H2_DrawRGBHLine+0x58>
        (posX <= WindowsXend) && (Ypos <= WindowsYend))
90000b7e:	f8df a048 	ldr.w	sl, [pc, #72]	; 90000bc8 <ST7789H2_DrawRGBHLine+0x5c>
{
90000b82:	460e      	mov	r6, r1
  ST7789H2_WriteReg(ST7789H2_WRITE_RAM, (uint8_t*)NULL, 0);   /* RAM write data command */
90000b84:	202c      	movs	r0, #44	; 0x2c
90000b86:	4611      	mov	r1, r2
{
90000b88:	4698      	mov	r8, r3
  ST7789H2_WriteReg(ST7789H2_WRITE_RAM, (uint8_t*)NULL, 0);   /* RAM write data command */
90000b8a:	f7ff fe51 	bl	90000830 <ST7789H2_WriteReg>
  for (posX = Xpos; posX < (Xsize + Xpos); posX++)
90000b8e:	42a5      	cmp	r5, r4
90000b90:	d801      	bhi.n	90000b96 <ST7789H2_DrawRGBHLine+0x2a>
        LCD_IO_WriteData(rgb565[i]);        
      }      
      i++;
    }
  }
}
90000b92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((posX >= WindowsXstart) && (Ypos >= WindowsYstart) &&     /* Check we are in the defined window */
90000b96:	f8b9 3000 	ldrh.w	r3, [r9]
90000b9a:	42a3      	cmp	r3, r4
90000b9c:	d810      	bhi.n	90000bc0 <ST7789H2_DrawRGBHLine+0x54>
90000b9e:	f8b9 3002 	ldrh.w	r3, [r9, #2]
90000ba2:	42b3      	cmp	r3, r6
90000ba4:	d80c      	bhi.n	90000bc0 <ST7789H2_DrawRGBHLine+0x54>
        (posX <= WindowsXend) && (Ypos <= WindowsYend))
90000ba6:	f8ba 3000 	ldrh.w	r3, [sl]
    if ((posX >= WindowsXstart) && (Ypos >= WindowsYstart) &&     /* Check we are in the defined window */
90000baa:	42a3      	cmp	r3, r4
90000bac:	d308      	bcc.n	90000bc0 <ST7789H2_DrawRGBHLine+0x54>
        (posX <= WindowsXend) && (Ypos <= WindowsYend))
90000bae:	f8ba 3002 	ldrh.w	r3, [sl, #2]
90000bb2:	42b3      	cmp	r3, r6
90000bb4:	d304      	bcc.n	90000bc0 <ST7789H2_DrawRGBHLine+0x54>
        LCD_IO_WriteData(rgb565[i]);        
90000bb6:	f838 0017 	ldrh.w	r0, [r8, r7, lsl #1]
      i++;
90000bba:	3701      	adds	r7, #1
        LCD_IO_WriteData(rgb565[i]);        
90000bbc:	f000 f93c 	bl	90000e38 <LCD_IO_WriteData>
  for (posX = Xpos; posX < (Xsize + Xpos); posX++)
90000bc0:	3401      	adds	r4, #1
90000bc2:	e7e4      	b.n	90000b8e <ST7789H2_DrawRGBHLine+0x22>
90000bc4:	20000132 	.word	0x20000132
90000bc8:	20000000 	.word	0x20000000

90000bcc <ST7789H2_DrawBitmap>:
{
90000bcc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90000bd0:	4607      	mov	r7, r0
  uint16_t Xsize = WindowsXend - WindowsXstart + 1;
90000bd2:	4816      	ldr	r0, [pc, #88]	; (90000c2c <ST7789H2_DrawBitmap+0x60>)
{
90000bd4:	460e      	mov	r6, r1
  uint16_t Xsize = WindowsXend - WindowsXstart + 1;
90000bd6:	4916      	ldr	r1, [pc, #88]	; (90000c30 <ST7789H2_DrawBitmap+0x64>)
90000bd8:	8805      	ldrh	r5, [r0, #0]
90000bda:	880b      	ldrh	r3, [r1, #0]
90000bdc:	3501      	adds	r5, #1
  uint16_t Ysize = WindowsYend - WindowsYstart + 1;
90000bde:	8844      	ldrh	r4, [r0, #2]
90000be0:	8849      	ldrh	r1, [r1, #2]
  uint16_t Xsize = WindowsXend - WindowsXstart + 1;
90000be2:	1aed      	subs	r5, r5, r3
  size = *(volatile uint16_t *) (pbmp + 2);
90000be4:	8853      	ldrh	r3, [r2, #2]
  size |= (*(volatile uint16_t *) (pbmp + 4)) << 16;
90000be6:	8893      	ldrh	r3, [r2, #4]
  uint16_t Ysize = WindowsYend - WindowsYstart + 1;
90000be8:	3401      	adds	r4, #1
  index = *(volatile uint16_t *) (pbmp + 10);
90000bea:	8953      	ldrh	r3, [r2, #10]
  uint16_t Xsize = WindowsXend - WindowsXstart + 1;
90000bec:	b2ad      	uxth	r5, r5
  index |= (*(volatile uint16_t *) (pbmp + 12)) << 16;
90000bee:	f8b2 c00c 	ldrh.w	ip, [r2, #12]
  uint16_t Ysize = WindowsYend - WindowsYstart + 1;
90000bf2:	1a64      	subs	r4, r4, r1
  index = *(volatile uint16_t *) (pbmp + 10);
90000bf4:	b29b      	uxth	r3, r3
  for (posY = (Ypos + Ysize); posY > Ypos; posY--)  /* In BMP files the line order is inverted */
90000bf6:	fa16 f484 	uxtah	r4, r6, r4
90000bfa:	ea4f 0945 	mov.w	r9, r5, lsl #1
  index |= (*(volatile uint16_t *) (pbmp + 12)) << 16;
90000bfe:	ea43 430c 	orr.w	r3, r3, ip, lsl #16
90000c02:	eb02 0803 	add.w	r8, r2, r3
  for (posY = (Ypos + Ysize); posY > Ypos; posY--)  /* In BMP files the line order is inverted */
90000c06:	42a6      	cmp	r6, r4
90000c08:	d302      	bcc.n	90000c10 <ST7789H2_DrawBitmap+0x44>
}
90000c0a:	b003      	add	sp, #12
90000c0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    ST7789H2_SetCursor(Xpos, posY - 1);
90000c10:	3c01      	subs	r4, #1
90000c12:	4638      	mov	r0, r7
90000c14:	b2a1      	uxth	r1, r4
90000c16:	9101      	str	r1, [sp, #4]
90000c18:	f7ff ff24 	bl	90000a64 <ST7789H2_SetCursor>
    ST7789H2_DrawRGBHLine(Xpos, posY - 1, Xsize, (pbmp + (nb_line * Xsize * 2)));
90000c1c:	4643      	mov	r3, r8
90000c1e:	462a      	mov	r2, r5
90000c20:	9901      	ldr	r1, [sp, #4]
90000c22:	4638      	mov	r0, r7
90000c24:	44c8      	add	r8, r9
90000c26:	f7ff ffa1 	bl	90000b6c <ST7789H2_DrawRGBHLine>
  for (posY = (Ypos + Ysize); posY > Ypos; posY--)  /* In BMP files the line order is inverted */
90000c2a:	e7ec      	b.n	90000c06 <ST7789H2_DrawBitmap+0x3a>
90000c2c:	20000000 	.word	0x20000000
90000c30:	20000132 	.word	0x20000132

90000c34 <ST7789H2_DrawRGBImage>:
{
90000c34:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90000c38:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90000c3c:	4605      	mov	r5, r0
90000c3e:	4616      	mov	r6, r2
  for (posY = Ypos; posY < (Ypos + Ysize); posY ++)
90000c40:	460c      	mov	r4, r1
90000c42:	ea4f 0942 	mov.w	r9, r2, lsl #1
90000c46:	18cf      	adds	r7, r1, r3
90000c48:	42a7      	cmp	r7, r4
90000c4a:	d802      	bhi.n	90000c52 <ST7789H2_DrawRGBImage+0x1e>
}
90000c4c:	b003      	add	sp, #12
90000c4e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    ST7789H2_SetCursor(Xpos, posY);
90000c52:	b2a1      	uxth	r1, r4
90000c54:	4628      	mov	r0, r5
  for (posY = Ypos; posY < (Ypos + Ysize); posY ++)
90000c56:	3401      	adds	r4, #1
    ST7789H2_SetCursor(Xpos, posY);
90000c58:	9101      	str	r1, [sp, #4]
90000c5a:	f7ff ff03 	bl	90000a64 <ST7789H2_SetCursor>
    ST7789H2_DrawRGBHLine(Xpos, posY, Xsize, (pdata + (nb_line * Xsize * 2)));
90000c5e:	4643      	mov	r3, r8
90000c60:	4632      	mov	r2, r6
90000c62:	9901      	ldr	r1, [sp, #4]
90000c64:	4628      	mov	r0, r5
90000c66:	44c8      	add	r8, r9
90000c68:	f7ff ff80 	bl	90000b6c <ST7789H2_DrawRGBHLine>
  for (posY = Ypos; posY < (Ypos + Ysize); posY ++)
90000c6c:	e7ec      	b.n	90000c48 <ST7789H2_DrawRGBImage+0x14>

90000c6e <ST7789H2_ReadReg>:
{
90000c6e:	b508      	push	{r3, lr}
  LCD_IO_WriteReg(Command);
90000c70:	f000 f8ea 	bl	90000e48 <LCD_IO_WriteReg>
  LCD_IO_ReadData();
90000c74:	f000 f8f0 	bl	90000e58 <LCD_IO_ReadData>
  return (LCD_IO_ReadData());
90000c78:	f000 f8ee 	bl	90000e58 <LCD_IO_ReadData>
}
90000c7c:	b2c0      	uxtb	r0, r0
90000c7e:	bd08      	pop	{r3, pc}

90000c80 <ST7789H2_ReadID>:
{
90000c80:	b508      	push	{r3, lr}
  LCD_IO_Init();
90000c82:	f000 f83f 	bl	90000d04 <LCD_IO_Init>
  return ST7789H2_ReadReg(ST7789H2_LCD_ID);
90000c86:	2004      	movs	r0, #4
90000c88:	f7ff fff1 	bl	90000c6e <ST7789H2_ReadReg>
}
90000c8c:	b280      	uxth	r0, r0
90000c8e:	bd08      	pop	{r3, pc}

90000c90 <BSP_LED_Init>:
  *            @arg  LED5
  *            @arg  LED6
  * @retval None
  */
void BSP_LED_Init(Led_TypeDef Led)
{
90000c90:	b500      	push	{lr}
90000c92:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef  gpio_init_structure;
  
  LEDx_GPIO_CLK_ENABLE(Led);
90000c94:	b9d8      	cbnz	r0, 90000cce <BSP_LED_Init+0x3e>
90000c96:	4b14      	ldr	r3, [pc, #80]	; (90000ce8 <BSP_LED_Init+0x58>)
90000c98:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000c9a:	f042 0201 	orr.w	r2, r2, #1
90000c9e:	631a      	str	r2, [r3, #48]	; 0x30
90000ca0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90000ca2:	f003 0301 	and.w	r3, r3, #1
90000ca6:	9301      	str	r3, [sp, #4]
90000ca8:	9b01      	ldr	r3, [sp, #4]
  /* Configure the GPIO_LED pin */
  gpio_init_structure.Pin   = GPIO_PIN[Led];
90000caa:	4b10      	ldr	r3, [pc, #64]	; (90000cec <BSP_LED_Init+0x5c>)
  gpio_init_structure.Mode  = GPIO_MODE_OUTPUT_PP;
  gpio_init_structure.Pull  = GPIO_PULLUP;
  gpio_init_structure.Speed = GPIO_SPEED_HIGH;
  
  HAL_GPIO_Init(GPIO_PORT[Led], &gpio_init_structure);
90000cac:	a903      	add	r1, sp, #12
  gpio_init_structure.Pin   = GPIO_PIN[Led];
90000cae:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
  HAL_GPIO_Init(GPIO_PORT[Led], &gpio_init_structure);
90000cb2:	eb03 0380 	add.w	r3, r3, r0, lsl #2
  gpio_init_structure.Pin   = GPIO_PIN[Led];
90000cb6:	9203      	str	r2, [sp, #12]
  gpio_init_structure.Mode  = GPIO_MODE_OUTPUT_PP;
90000cb8:	2201      	movs	r2, #1
  HAL_GPIO_Init(GPIO_PORT[Led], &gpio_init_structure);
90000cba:	6898      	ldr	r0, [r3, #8]
  gpio_init_structure.Pull  = GPIO_PULLUP;
90000cbc:	e9cd 2204 	strd	r2, r2, [sp, #16]
  gpio_init_structure.Speed = GPIO_SPEED_HIGH;
90000cc0:	2203      	movs	r2, #3
90000cc2:	9206      	str	r2, [sp, #24]
  HAL_GPIO_Init(GPIO_PORT[Led], &gpio_init_structure);
90000cc4:	f000 fa9c 	bl	90001200 <HAL_GPIO_Init>

}
90000cc8:	b009      	add	sp, #36	; 0x24
90000cca:	f85d fb04 	ldr.w	pc, [sp], #4
  LEDx_GPIO_CLK_ENABLE(Led);
90000cce:	2801      	cmp	r0, #1
90000cd0:	d1eb      	bne.n	90000caa <BSP_LED_Init+0x1a>
90000cd2:	4b05      	ldr	r3, [pc, #20]	; (90000ce8 <BSP_LED_Init+0x58>)
90000cd4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000cd6:	f042 0202 	orr.w	r2, r2, #2
90000cda:	631a      	str	r2, [r3, #48]	; 0x30
90000cdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90000cde:	f003 0302 	and.w	r3, r3, #2
90000ce2:	9302      	str	r3, [sp, #8]
90000ce4:	9b02      	ldr	r3, [sp, #8]
90000ce6:	e7e0      	b.n	90000caa <BSP_LED_Init+0x1a>
90000ce8:	40023800 	.word	0x40023800
90000cec:	2000003c 	.word	0x2000003c

90000cf0 <BSP_LED_Toggle>:
  *            @arg  LED6
  * @retval None
  */
void BSP_LED_Toggle(Led_TypeDef Led)
{
  HAL_GPIO_TogglePin(GPIO_PORT[Led], GPIO_PIN[Led]);
90000cf0:	4b03      	ldr	r3, [pc, #12]	; (90000d00 <BSP_LED_Toggle+0x10>)
90000cf2:	eb03 0280 	add.w	r2, r3, r0, lsl #2
90000cf6:	f833 1020 	ldrh.w	r1, [r3, r0, lsl #2]
90000cfa:	6890      	ldr	r0, [r2, #8]
90000cfc:	f000 bb5b 	b.w	900013b6 <HAL_GPIO_TogglePin>
90000d00:	2000003c 	.word	0x2000003c

90000d04 <LCD_IO_Init>:
static void FMC_BANK2_MspInit(void)
{
  GPIO_InitTypeDef gpio_init_structure;
    
  /* Enable FMC clock */
  __HAL_RCC_FMC_CLK_ENABLE();
90000d04:	4b47      	ldr	r3, [pc, #284]	; (90000e24 <LCD_IO_Init+0x120>)
  /* GPIOD configuration */ 
  /* LCD_PSRAM_D2, LCD_PSRAM_D3, LCD_PSRAM_NOE, LCD_PSRAM_NWE, PSRAM_NE1, LCD_PSRAM_D13, 
     LCD_PSRAM_D14, LCD_PSRAM_D15, PSRAM_A16, PSRAM_A17, LCD_PSRAM_D0, LCD_PSRAM_D1 */
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5  | GPIO_PIN_7 | GPIO_PIN_8 |\
                              GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_14 | GPIO_PIN_15;
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90000d06:	4848      	ldr	r0, [pc, #288]	; (90000e28 <LCD_IO_Init+0x124>)
  __HAL_RCC_FMC_CLK_ENABLE();
90000d08:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90000d0a:	f042 0201 	orr.w	r2, r2, #1
/**
  * @brief  Initializes LCD low level.
  * @retval None
  */
void LCD_IO_Init(void) 
{
90000d0e:	b530      	push	{r4, r5, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90000d10:	639a      	str	r2, [r3, #56]	; 0x38
{
90000d12:	b0a1      	sub	sp, #132	; 0x84
  __HAL_RCC_FMC_CLK_ENABLE();
90000d14:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  gpio_init_structure.Pull      = GPIO_PULLUP;
90000d16:	2402      	movs	r4, #2
90000d18:	2501      	movs	r5, #1
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90000d1a:	a90d      	add	r1, sp, #52	; 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
90000d1c:	f002 0201 	and.w	r2, r2, #1
90000d20:	9200      	str	r2, [sp, #0]
90000d22:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
90000d24:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90000d26:	f042 0201 	orr.w	r2, r2, #1
90000d2a:	639a      	str	r2, [r3, #56]	; 0x38
90000d2c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90000d2e:	f002 0201 	and.w	r2, r2, #1
90000d32:	9201      	str	r2, [sp, #4]
90000d34:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_FMC_FORCE_RESET();
90000d36:	699a      	ldr	r2, [r3, #24]
90000d38:	f042 0201 	orr.w	r2, r2, #1
90000d3c:	619a      	str	r2, [r3, #24]
  __HAL_RCC_FMC_RELEASE_RESET();
90000d3e:	699a      	ldr	r2, [r3, #24]
90000d40:	f022 0201 	bic.w	r2, r2, #1
90000d44:	619a      	str	r2, [r3, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90000d46:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000d48:	f042 0208 	orr.w	r2, r2, #8
90000d4c:	631a      	str	r2, [r3, #48]	; 0x30
90000d4e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000d50:	f002 0208 	and.w	r2, r2, #8
90000d54:	9202      	str	r2, [sp, #8]
90000d56:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90000d58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000d5a:	f042 0210 	orr.w	r2, r2, #16
90000d5e:	631a      	str	r2, [r3, #48]	; 0x30
90000d60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000d62:	f002 0210 	and.w	r2, r2, #16
90000d66:	9203      	str	r2, [sp, #12]
90000d68:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90000d6a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000d6c:	f042 0220 	orr.w	r2, r2, #32
90000d70:	631a      	str	r2, [r3, #48]	; 0x30
90000d72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000d74:	f002 0220 	and.w	r2, r2, #32
90000d78:	9204      	str	r2, [sp, #16]
90000d7a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE(); 
90000d7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000d7e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90000d82:	631a      	str	r2, [r3, #48]	; 0x30
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90000d84:	2203      	movs	r2, #3
  __HAL_RCC_GPIOG_CLK_ENABLE(); 
90000d86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90000d88:	f003 0340 	and.w	r3, r3, #64	; 0x40
90000d8c:	9305      	str	r3, [sp, #20]
90000d8e:	9b05      	ldr	r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90000d90:	230c      	movs	r3, #12
90000d92:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5  | GPIO_PIN_7 | GPIO_PIN_8 |\
90000d96:	f64d 73b3 	movw	r3, #57267	; 0xdfb3
  gpio_init_structure.Pull      = GPIO_PULLUP;
90000d9a:	e9cd 450e 	strd	r4, r5, [sp, #56]	; 0x38
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5  | GPIO_PIN_7 | GPIO_PIN_8 |\
90000d9e:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90000da0:	f000 fa2e 	bl	90001200 <HAL_GPIO_Init>
  gpio_init_structure.Pin  = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |GPIO_PIN_10 |\
90000da4:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90000da8:	a90d      	add	r1, sp, #52	; 0x34
90000daa:	4820      	ldr	r0, [pc, #128]	; (90000e2c <LCD_IO_Init+0x128>)
  gpio_init_structure.Pin  = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 |GPIO_PIN_10 |\
90000dac:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90000dae:	f000 fa27 	bl	90001200 <HAL_GPIO_Init>
  gpio_init_structure.Pin  = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 |\
90000db2:	f24f 033f 	movw	r3, #61503	; 0xf03f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90000db6:	a90d      	add	r1, sp, #52	; 0x34
90000db8:	481d      	ldr	r0, [pc, #116]	; (90000e30 <LCD_IO_Init+0x12c>)
  gpio_init_structure.Pin  = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 |\
90000dba:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90000dbc:	f000 fa20 	bl	90001200 <HAL_GPIO_Init>
  gpio_init_structure.Pin  = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 |\
90000dc0:	f240 233f 	movw	r3, #575	; 0x23f
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90000dc4:	a90d      	add	r1, sp, #52	; 0x34
90000dc6:	481b      	ldr	r0, [pc, #108]	; (90000e34 <LCD_IO_Init+0x130>)
  gpio_init_structure.Pin  = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 |\
90000dc8:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90000dca:	f000 fa19 	bl	90001200 <HAL_GPIO_Init>
  hsram.Instance  = FMC_NORSRAM_DEVICE;
90000dce:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
  hsram.Init.MemoryDataWidth    = FMC_NORSRAM_MEM_BUS_WIDTH_16;
90000dd2:	2210      	movs	r2, #16
  HAL_SRAM_Init(&hsram, &sram_timing, &sram_timing);
90000dd4:	a80d      	add	r0, sp, #52	; 0x34
  hsram.Instance  = FMC_NORSRAM_DEVICE;
90000dd6:	930d      	str	r3, [sp, #52]	; 0x34
  hsram.Extended  = FMC_NORSRAM_EXTENDED_DEVICE;
90000dd8:	f503 7382 	add.w	r3, r3, #260	; 0x104
  hsram.Init.NSBank             = FMC_NORSRAM_BANK2;
90000ddc:	e9cd 340e 	strd	r3, r4, [sp, #56]	; 0x38
  hsram.Init.DataAddressMux     = FMC_DATA_ADDRESS_MUX_DISABLE;
90000de0:	2300      	movs	r3, #0
  hsram.Init.BurstAccessMode    = FMC_BURST_ACCESS_MODE_DISABLE;
90000de2:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  hsram.Init.WriteOperation     = FMC_WRITE_OPERATION_ENABLE;
90000de6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsram.Init.WriteBurst         = FMC_WRITE_BURST_DISABLE;
90000dea:	931a      	str	r3, [sp, #104]	; 0x68
  hsram.Init.ContinuousClock    = FMC_CONTINUOUS_CLOCK_SYNC_ONLY;
90000dec:	931b      	str	r3, [sp, #108]	; 0x6c
  sram_timing.AccessMode            = FMC_ACCESS_MODE_A;
90000dee:	930c      	str	r3, [sp, #48]	; 0x30
  hsram.Init.WaitSignal         = FMC_WAIT_SIGNAL_DISABLE;
90000df0:	e9cd 2316 	strd	r2, r3, [sp, #88]	; 0x58
  hsram.Init.WriteFifo          = FMC_WRITE_FIFO_DISABLE;
90000df4:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  hsram.Init.PageSize           = FMC_PAGE_SIZE_NONE;
90000df8:	e9cd 231c 	strd	r2, r3, [sp, #112]	; 0x70
  sram_timing.AddressSetupTime      = 9;
90000dfc:	2209      	movs	r2, #9
  sram_timing.AddressHoldTime       = 2;
90000dfe:	e9cd 2406 	strd	r2, r4, [sp, #24]
  sram_timing.DataSetupTime         = 6;
90000e02:	2206      	movs	r2, #6
  sram_timing.BusTurnAroundDuration = 1;
90000e04:	e9cd 2508 	strd	r2, r5, [sp, #32]
  HAL_SRAM_Init(&hsram, &sram_timing, &sram_timing);
90000e08:	aa06      	add	r2, sp, #24
90000e0a:	4611      	mov	r1, r2
  hsram.Init.MemoryType         = FMC_MEMORY_TYPE_SRAM;
90000e0c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
  hsram.Init.WaitSignalActive   = FMC_WAIT_TIMING_BEFORE_WS;
90000e10:	e9cd 3314 	strd	r3, r3, [sp, #80]	; 0x50
  hsram.Init.AsynchronousWait   = FMC_ASYNCHRONOUS_WAIT_DISABLE;
90000e14:	e9cd 3318 	strd	r3, r3, [sp, #96]	; 0x60
  sram_timing.DataLatency           = 2;
90000e18:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
  HAL_SRAM_Init(&hsram, &sram_timing, &sram_timing);
90000e1c:	f000 fd93 	bl	90001946 <HAL_SRAM_Init>
  FMC_BANK2_Init();
}
90000e20:	b021      	add	sp, #132	; 0x84
90000e22:	bd30      	pop	{r4, r5, pc}
90000e24:	40023800 	.word	0x40023800
90000e28:	40020c00 	.word	0x40020c00
90000e2c:	40021000 	.word	0x40021000
90000e30:	40021400 	.word	0x40021400
90000e34:	40021800 	.word	0x40021800

90000e38 <LCD_IO_WriteData>:
  FMC_BANK2->RAM = Data;
90000e38:	f04f 43c8 	mov.w	r3, #1677721600	; 0x64000000
90000e3c:	8058      	strh	r0, [r3, #2]
  __ASM volatile ("dsb 0xF":::"memory");
90000e3e:	f3bf 8f4f 	dsb	sy
90000e42:	f3bf 8f4f 	dsb	sy
void LCD_IO_WriteData(uint16_t RegValue) 
{
  /* Write 16-bit Reg */
  FMC_BANK2_WriteData(RegValue);
  __DSB();
}
90000e46:	4770      	bx	lr

90000e48 <LCD_IO_WriteReg>:
  FMC_BANK2->REG = Reg;
90000e48:	f04f 43c8 	mov.w	r3, #1677721600	; 0x64000000
90000e4c:	8018      	strh	r0, [r3, #0]
90000e4e:	f3bf 8f4f 	dsb	sy
90000e52:	f3bf 8f4f 	dsb	sy
void LCD_IO_WriteReg(uint8_t Reg) 
{
  /* Write 16-bit Index, then Write Reg */
  FMC_BANK2_WriteReg(Reg);
  __DSB();
}
90000e56:	4770      	bx	lr

90000e58 <LCD_IO_ReadData>:
  return FMC_BANK2->RAM;
90000e58:	f04f 43c8 	mov.w	r3, #1677721600	; 0x64000000
90000e5c:	8858      	ldrh	r0, [r3, #2]
  * @retval Read data.
  */
uint16_t LCD_IO_ReadData(void) 
{
  return FMC_BANK2_ReadData();
}
90000e5e:	b280      	uxth	r0, r0
90000e60:	4770      	bx	lr

90000e62 <LCD_IO_Delay>:
  * @param  Delay: Delay in ms
  * @retval None
  */
void LCD_IO_Delay(uint32_t Delay)
{
  HAL_Delay(Delay);
90000e62:	f000 b90b 	b.w	9000107c <HAL_Delay>
	...

90000e68 <BSP_LCD_MspInit>:
__weak void BSP_LCD_MspInit(void)
{
  GPIO_InitTypeDef gpio_init_structure;

  /* Enable GPIOs clock */
  LCD_RESET_GPIO_CLK_ENABLE();
90000e68:	4b21      	ldr	r3, [pc, #132]	; (90000ef0 <BSP_LCD_MspInit+0x88>)
90000e6a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000e6c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
{
90000e70:	b5f0      	push	{r4, r5, r6, r7, lr}
  LCD_RESET_GPIO_CLK_ENABLE();
90000e72:	631a      	str	r2, [r3, #48]	; 0x30
{
90000e74:	b089      	sub	sp, #36	; 0x24
  LCD_RESET_GPIO_CLK_ENABLE();
90000e76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  LCD_BL_CTRL_GPIO_CLK_ENABLE();
  
  /* LCD_RESET GPIO configuration */
  gpio_init_structure.Pin       = LCD_RESET_PIN;     /* LCD_RESET pin has to be manually controlled */
  gpio_init_structure.Pull      = GPIO_NOPULL;
  gpio_init_structure.Speed     = GPIO_SPEED_FAST;
90000e78:	2400      	movs	r4, #0
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
  HAL_GPIO_Init(LCD_RESET_GPIO_PORT, &gpio_init_structure);
90000e7a:	4d1e      	ldr	r5, [pc, #120]	; (90000ef4 <BSP_LCD_MspInit+0x8c>)
  gpio_init_structure.Pin       = LCD_RESET_PIN;     /* LCD_RESET pin has to be manually controlled */
90000e7c:	2780      	movs	r7, #128	; 0x80
  LCD_RESET_GPIO_CLK_ENABLE();
90000e7e:	f002 0280 	and.w	r2, r2, #128	; 0x80
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
90000e82:	2601      	movs	r6, #1
  HAL_GPIO_Init(LCD_RESET_GPIO_PORT, &gpio_init_structure);
90000e84:	a903      	add	r1, sp, #12
90000e86:	4628      	mov	r0, r5
  LCD_RESET_GPIO_CLK_ENABLE();
90000e88:	9200      	str	r2, [sp, #0]
90000e8a:	9a00      	ldr	r2, [sp, #0]
  LCD_TE_GPIO_CLK_ENABLE();
90000e8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000e8e:	f042 0204 	orr.w	r2, r2, #4
90000e92:	631a      	str	r2, [r3, #48]	; 0x30
90000e94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000e96:	f002 0204 	and.w	r2, r2, #4
90000e9a:	9201      	str	r2, [sp, #4]
90000e9c:	9a01      	ldr	r2, [sp, #4]
  LCD_BL_CTRL_GPIO_CLK_ENABLE();
90000e9e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90000ea0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90000ea4:	631a      	str	r2, [r3, #48]	; 0x30
90000ea6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  gpio_init_structure.Pin       = LCD_RESET_PIN;     /* LCD_RESET pin has to be manually controlled */
90000ea8:	9703      	str	r7, [sp, #12]
  LCD_BL_CTRL_GPIO_CLK_ENABLE();
90000eaa:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
90000eae:	9604      	str	r6, [sp, #16]
  LCD_BL_CTRL_GPIO_CLK_ENABLE();
90000eb0:	9302      	str	r3, [sp, #8]
90000eb2:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Speed     = GPIO_SPEED_FAST;
90000eb4:	2302      	movs	r3, #2
90000eb6:	e9cd 4305 	strd	r4, r3, [sp, #20]
  HAL_GPIO_Init(LCD_RESET_GPIO_PORT, &gpio_init_structure);
90000eba:	f000 f9a1 	bl	90001200 <HAL_GPIO_Init>
  HAL_GPIO_WritePin( LCD_RESET_GPIO_PORT, LCD_RESET_PIN, GPIO_PIN_RESET);
90000ebe:	4622      	mov	r2, r4
90000ec0:	4639      	mov	r1, r7
90000ec2:	4628      	mov	r0, r5
90000ec4:	f000 fa72 	bl	900013ac <HAL_GPIO_WritePin>
  
  /* LCD_TE GPIO configuration */
  gpio_init_structure.Pin       = LCD_TE_PIN;        /* LCD_TE pin has to be manually managed */
90000ec8:	f44f 7380 	mov.w	r3, #256	; 0x100
  gpio_init_structure.Mode      = GPIO_MODE_INPUT;
  HAL_GPIO_Init(LCD_TE_GPIO_PORT, &gpio_init_structure);
90000ecc:	a903      	add	r1, sp, #12
90000ece:	480a      	ldr	r0, [pc, #40]	; (90000ef8 <BSP_LCD_MspInit+0x90>)
  gpio_init_structure.Mode      = GPIO_MODE_INPUT;
90000ed0:	e9cd 3403 	strd	r3, r4, [sp, #12]
  HAL_GPIO_Init(LCD_TE_GPIO_PORT, &gpio_init_structure);
90000ed4:	f000 f994 	bl	90001200 <HAL_GPIO_Init>

  /* LCD_BL_CTRL GPIO configuration */
  gpio_init_structure.Pin       = LCD_BL_CTRL_PIN;   /* LCD_BL_CTRL pin has to be manually controlled */
90000ed8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_PORT, &gpio_init_structure);
90000edc:	a903      	add	r1, sp, #12
90000ede:	4628      	mov	r0, r5
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_LOW;
90000ee0:	9406      	str	r4, [sp, #24]
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
90000ee2:	e9cd 3603 	strd	r3, r6, [sp, #12]
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_PORT, &gpio_init_structure);
90000ee6:	f000 f98b 	bl	90001200 <HAL_GPIO_Init>
}
90000eea:	b009      	add	sp, #36	; 0x24
90000eec:	bdf0      	pop	{r4, r5, r6, r7, pc}
90000eee:	bf00      	nop
90000ef0:	40023800 	.word	0x40023800
90000ef4:	40021c00 	.word	0x40021c00
90000ef8:	40020800 	.word	0x40020800

90000efc <BSP_LCD_InitEx>:
{ 
90000efc:	b570      	push	{r4, r5, r6, lr}
  DrawProp.BackColor = 0xFFFF;
90000efe:	f64f 73ff 	movw	r3, #65535	; 0xffff
90000f02:	4d22      	ldr	r5, [pc, #136]	; (90000f8c <BSP_LCD_InitEx+0x90>)
  DrawProp.TextColor = 0x0000;
90000f04:	2600      	movs	r6, #0
{ 
90000f06:	4604      	mov	r4, r0
  DrawProp.BackColor = 0xFFFF;
90000f08:	60ab      	str	r3, [r5, #8]
  DrawProp.pFont     = &Font24;
90000f0a:	4b21      	ldr	r3, [pc, #132]	; (90000f90 <BSP_LCD_InitEx+0x94>)
  DrawProp.TextColor = 0x0000;
90000f0c:	606e      	str	r6, [r5, #4]
  DrawProp.pFont     = &Font24;
90000f0e:	60eb      	str	r3, [r5, #12]
  BSP_LCD_MspInit();
90000f10:	f7ff ffaa 	bl	90000e68 <BSP_LCD_MspInit>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_PORT, LCD_BL_CTRL_PIN, GPIO_PIN_SET);
90000f14:	2201      	movs	r2, #1
90000f16:	f44f 6100 	mov.w	r1, #2048	; 0x800
90000f1a:	481e      	ldr	r0, [pc, #120]	; (90000f94 <BSP_LCD_InitEx+0x98>)
90000f1c:	f000 fa46 	bl	900013ac <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_PORT, LCD_RESET_PIN, GPIO_PIN_RESET);
90000f20:	4632      	mov	r2, r6
90000f22:	2180      	movs	r1, #128	; 0x80
90000f24:	481b      	ldr	r0, [pc, #108]	; (90000f94 <BSP_LCD_InitEx+0x98>)
90000f26:	f000 fa41 	bl	900013ac <HAL_GPIO_WritePin>
  HAL_Delay(5);   /* Reset signal asserted during 5ms  */
90000f2a:	2005      	movs	r0, #5
90000f2c:	f000 f8a6 	bl	9000107c <HAL_Delay>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_PORT, LCD_RESET_PIN, GPIO_PIN_SET);
90000f30:	2201      	movs	r2, #1
90000f32:	2180      	movs	r1, #128	; 0x80
90000f34:	4817      	ldr	r0, [pc, #92]	; (90000f94 <BSP_LCD_InitEx+0x98>)
90000f36:	f000 fa39 	bl	900013ac <HAL_GPIO_WritePin>
  HAL_Delay(10);  /* Reset signal released during 10ms */
90000f3a:	200a      	movs	r0, #10
90000f3c:	f000 f89e 	bl	9000107c <HAL_Delay>
  HAL_GPIO_WritePin(LCD_RESET_GPIO_PORT, LCD_RESET_PIN, GPIO_PIN_RESET);
90000f40:	4632      	mov	r2, r6
90000f42:	2180      	movs	r1, #128	; 0x80
90000f44:	4813      	ldr	r0, [pc, #76]	; (90000f94 <BSP_LCD_InitEx+0x98>)
90000f46:	f000 fa31 	bl	900013ac <HAL_GPIO_WritePin>
  HAL_Delay(20);  /* Reset signal asserted during 20ms */
90000f4a:	2014      	movs	r0, #20
90000f4c:	f000 f896 	bl	9000107c <HAL_Delay>
  if(ST7789H2_drv.ReadID() == ST7789H2_ID)
90000f50:	4e11      	ldr	r6, [pc, #68]	; (90000f98 <BSP_LCD_InitEx+0x9c>)
  HAL_GPIO_WritePin(LCD_RESET_GPIO_PORT, LCD_RESET_PIN, GPIO_PIN_SET);
90000f52:	2201      	movs	r2, #1
90000f54:	2180      	movs	r1, #128	; 0x80
90000f56:	480f      	ldr	r0, [pc, #60]	; (90000f94 <BSP_LCD_InitEx+0x98>)
90000f58:	f000 fa28 	bl	900013ac <HAL_GPIO_WritePin>
  HAL_Delay(10);  /* Reset signal released during 10ms */
90000f5c:	200a      	movs	r0, #10
90000f5e:	f000 f88d 	bl	9000107c <HAL_Delay>
  if(ST7789H2_drv.ReadID() == ST7789H2_ID)
90000f62:	6873      	ldr	r3, [r6, #4]
90000f64:	4798      	blx	r3
90000f66:	2885      	cmp	r0, #133	; 0x85
90000f68:	d10d      	bne.n	90000f86 <BSP_LCD_InitEx+0x8a>
    LcdDrv->Init();
90000f6a:	6833      	ldr	r3, [r6, #0]
    LcdDrv = &ST7789H2_drv;
90000f6c:	602e      	str	r6, [r5, #0]
    LcdDrv->Init();
90000f6e:	4798      	blx	r3
    if(orientation == LCD_ORIENTATION_PORTRAIT)
90000f70:	b91c      	cbnz	r4, 90000f7a <BSP_LCD_InitEx+0x7e>
      ST7789H2_SetOrientation(LCD_ORIENTATION_LANDSCAPE_ROT180);
90000f72:	4620      	mov	r0, r4
90000f74:	f7ff fc6a 	bl	9000084c <ST7789H2_SetOrientation>
90000f78:	e001      	b.n	90000f7e <BSP_LCD_InitEx+0x82>
    else if(orientation == LCD_ORIENTATION_LANDSCAPE_ROT180)
90000f7a:	2c02      	cmp	r4, #2
90000f7c:	d0f9      	beq.n	90000f72 <BSP_LCD_InitEx+0x76>
  DrawProp.pFont = fonts;
90000f7e:	4b07      	ldr	r3, [pc, #28]	; (90000f9c <BSP_LCD_InitEx+0xa0>)
    ret = LCD_OK;   
90000f80:	2000      	movs	r0, #0
  DrawProp.pFont = fonts;
90000f82:	60eb      	str	r3, [r5, #12]
}
90000f84:	bd70      	pop	{r4, r5, r6, pc}
  uint8_t ret = LCD_ERROR;
90000f86:	2001      	movs	r0, #1
90000f88:	e7fc      	b.n	90000f84 <BSP_LCD_InitEx+0x88>
90000f8a:	bf00      	nop
90000f8c:	20000138 	.word	0x20000138
90000f90:	20000064 	.word	0x20000064
90000f94:	40021c00 	.word	0x40021c00
90000f98:	20000004 	.word	0x20000004
90000f9c:	2000005c 	.word	0x2000005c

90000fa0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
90000fa0:	490f      	ldr	r1, [pc, #60]	; (90000fe0 <SystemInit+0x40>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90000fa2:	2000      	movs	r0, #0
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
90000fa4:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
90000fa8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
90000fac:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  RCC->CR |= (uint32_t)0x00000001;
90000fb0:	4b0c      	ldr	r3, [pc, #48]	; (90000fe4 <SystemInit+0x44>)
90000fb2:	681a      	ldr	r2, [r3, #0]
90000fb4:	f042 0201 	orr.w	r2, r2, #1
90000fb8:	601a      	str	r2, [r3, #0]
  RCC->CFGR = 0x00000000;
90000fba:	6098      	str	r0, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
90000fbc:	681a      	ldr	r2, [r3, #0]
90000fbe:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
90000fc2:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90000fc6:	601a      	str	r2, [r3, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
90000fc8:	4a07      	ldr	r2, [pc, #28]	; (90000fe8 <SystemInit+0x48>)
90000fca:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
90000fcc:	681a      	ldr	r2, [r3, #0]
90000fce:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
90000fd2:	601a      	str	r2, [r3, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
90000fd4:	60d8      	str	r0, [r3, #12]
  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
#if defined(USE_STM32F7308_DISCO)
  SCB->VTOR = QSPI_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in External QSPI FLASH */
90000fd6:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
90000fda:	608b      	str	r3, [r1, #8]
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#else
#error Can't define SCB->VTOR, specific board name isn't defined!
#endif
#endif
}
90000fdc:	4770      	bx	lr
90000fde:	bf00      	nop
90000fe0:	e000ed00 	.word	0xe000ed00
90000fe4:	40023800 	.word	0x40023800
90000fe8:	24003010 	.word	0x24003010

90000fec <HAL_MspInit>:
__weak void HAL_MspInit(void)
{
  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_MspInit could be implemented in the user file
   */
}
90000fec:	4770      	bx	lr
	...

90000ff0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
90000ff0:	b570      	push	{r4, r5, r6, lr}
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
90000ff2:	4e0e      	ldr	r6, [pc, #56]	; (9000102c <HAL_InitTick+0x3c>)
90000ff4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
{
90000ff8:	4605      	mov	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
90000ffa:	7832      	ldrb	r2, [r6, #0]
90000ffc:	fbb3 f3f2 	udiv	r3, r3, r2
90001000:	4a0b      	ldr	r2, [pc, #44]	; (90001030 <HAL_InitTick+0x40>)
90001002:	6810      	ldr	r0, [r2, #0]
90001004:	fbb0 f0f3 	udiv	r0, r0, r3
90001008:	f000 f89c 	bl	90001144 <HAL_SYSTICK_Config>
9000100c:	4604      	mov	r4, r0
9000100e:	b950      	cbnz	r0, 90001026 <HAL_InitTick+0x36>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90001010:	2d0f      	cmp	r5, #15
90001012:	d808      	bhi.n	90001026 <HAL_InitTick+0x36>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
90001014:	4602      	mov	r2, r0
90001016:	4629      	mov	r1, r5
90001018:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
9000101c:	f000 f852 	bl	900010c4 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
90001020:	4620      	mov	r0, r4
90001022:	6075      	str	r5, [r6, #4]
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
90001024:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
90001026:	2001      	movs	r0, #1
90001028:	e7fc      	b.n	90001024 <HAL_InitTick+0x34>
9000102a:	bf00      	nop
9000102c:	20000088 	.word	0x20000088
90001030:	20000084 	.word	0x20000084

90001034 <HAL_Init>:
  __HAL_FLASH_ART_ENABLE();
90001034:	4a07      	ldr	r2, [pc, #28]	; (90001054 <HAL_Init+0x20>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90001036:	2003      	movs	r0, #3
{
90001038:	b508      	push	{r3, lr}
  __HAL_FLASH_ART_ENABLE();
9000103a:	6813      	ldr	r3, [r2, #0]
9000103c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90001040:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90001042:	f000 f82d 	bl	900010a0 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
90001046:	200f      	movs	r0, #15
90001048:	f7ff ffd2 	bl	90000ff0 <HAL_InitTick>
  HAL_MspInit();
9000104c:	f7ff ffce 	bl	90000fec <HAL_MspInit>
}
90001050:	2000      	movs	r0, #0
90001052:	bd08      	pop	{r3, pc}
90001054:	40023c00 	.word	0x40023c00

90001058 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
90001058:	4a03      	ldr	r2, [pc, #12]	; (90001068 <HAL_IncTick+0x10>)
9000105a:	4b04      	ldr	r3, [pc, #16]	; (9000106c <HAL_IncTick+0x14>)
9000105c:	6811      	ldr	r1, [r2, #0]
9000105e:	781b      	ldrb	r3, [r3, #0]
90001060:	440b      	add	r3, r1
90001062:	6013      	str	r3, [r2, #0]
}
90001064:	4770      	bx	lr
90001066:	bf00      	nop
90001068:	20000148 	.word	0x20000148
9000106c:	20000088 	.word	0x20000088

90001070 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90001070:	4b01      	ldr	r3, [pc, #4]	; (90001078 <HAL_GetTick+0x8>)
90001072:	6818      	ldr	r0, [r3, #0]
}
90001074:	4770      	bx	lr
90001076:	bf00      	nop
90001078:	20000148 	.word	0x20000148

9000107c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
9000107c:	b538      	push	{r3, r4, r5, lr}
9000107e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
90001080:	f7ff fff6 	bl	90001070 <HAL_GetTick>
90001084:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
90001086:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
90001088:	bf1e      	ittt	ne
9000108a:	4b04      	ldrne	r3, [pc, #16]	; (9000109c <HAL_Delay+0x20>)
9000108c:	781b      	ldrbne	r3, [r3, #0]
9000108e:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
90001090:	f7ff ffee 	bl	90001070 <HAL_GetTick>
90001094:	1b43      	subs	r3, r0, r5
90001096:	42a3      	cmp	r3, r4
90001098:	d3fa      	bcc.n	90001090 <HAL_Delay+0x14>
  {
  }
}
9000109a:	bd38      	pop	{r3, r4, r5, pc}
9000109c:	20000088 	.word	0x20000088

900010a0 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900010a0:	4907      	ldr	r1, [pc, #28]	; (900010c0 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900010a2:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900010a4:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900010a6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900010aa:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
900010ae:	0412      	lsls	r2, r2, #16
900010b0:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
900010b2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
900010b4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
900010b8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
900010bc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
900010be:	4770      	bx	lr
900010c0:	e000ed00 	.word	0xe000ed00

900010c4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
900010c4:	4b16      	ldr	r3, [pc, #88]	; (90001120 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
900010c6:	b530      	push	{r4, r5, lr}
900010c8:	68dc      	ldr	r4, [r3, #12]
900010ca:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900010ce:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900010d2:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900010d4:	2b04      	cmp	r3, #4
900010d6:	bf28      	it	cs
900010d8:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900010da:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900010dc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900010e0:	bf8c      	ite	hi
900010e2:	3c03      	subhi	r4, #3
900010e4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900010e6:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
900010ea:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
900010ec:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900010f0:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
900010f4:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900010f8:	fa03 f304 	lsl.w	r3, r3, r4
900010fc:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90001100:	ea4f 1303 	mov.w	r3, r3, lsl #4
90001104:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90001106:	db06      	blt.n	90001116 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90001108:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
9000110c:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
90001110:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90001114:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90001116:	f000 000f 	and.w	r0, r0, #15
9000111a:	4a02      	ldr	r2, [pc, #8]	; (90001124 <HAL_NVIC_SetPriority+0x60>)
9000111c:	5413      	strb	r3, [r2, r0]
9000111e:	e7f9      	b.n	90001114 <HAL_NVIC_SetPriority+0x50>
90001120:	e000ed00 	.word	0xe000ed00
90001124:	e000ed14 	.word	0xe000ed14

90001128 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90001128:	2800      	cmp	r0, #0
9000112a:	db07      	blt.n	9000113c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000112c:	0941      	lsrs	r1, r0, #5
9000112e:	2301      	movs	r3, #1
90001130:	f000 001f 	and.w	r0, r0, #31
90001134:	4a02      	ldr	r2, [pc, #8]	; (90001140 <HAL_NVIC_EnableIRQ+0x18>)
90001136:	4083      	lsls	r3, r0
90001138:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000113c:	4770      	bx	lr
9000113e:	bf00      	nop
90001140:	e000e100 	.word	0xe000e100

90001144 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
90001144:	3801      	subs	r0, #1
90001146:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
9000114a:	d20b      	bcs.n	90001164 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
9000114c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90001150:	4a05      	ldr	r2, [pc, #20]	; (90001168 <HAL_SYSTICK_Config+0x24>)
90001152:	21f0      	movs	r1, #240	; 0xf0
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
90001154:	6158      	str	r0, [r3, #20]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
90001156:	2000      	movs	r0, #0
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90001158:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
9000115c:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
9000115e:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
90001160:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
90001162:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
90001164:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
90001166:	4770      	bx	lr
90001168:	e000ed00 	.word	0xe000ed00

9000116c <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
9000116c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90001170:	4b04      	ldr	r3, [pc, #16]	; (90001184 <HAL_MPU_Disable+0x18>)
90001172:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90001174:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90001178:	625a      	str	r2, [r3, #36]	; 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000117a:	2200      	movs	r2, #0
9000117c:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
}
90001180:	4770      	bx	lr
90001182:	bf00      	nop
90001184:	e000ed00 	.word	0xe000ed00

90001188 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90001188:	4b06      	ldr	r3, [pc, #24]	; (900011a4 <HAL_MPU_Enable+0x1c>)
9000118a:	f040 0001 	orr.w	r0, r0, #1
9000118e:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90001192:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90001194:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
90001198:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
9000119a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000119e:	f3bf 8f6f 	isb	sy
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
900011a2:	4770      	bx	lr
900011a4:	e000ed00 	.word	0xe000ed00

900011a8 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
900011a8:	7843      	ldrb	r3, [r0, #1]
900011aa:	4a14      	ldr	r2, [pc, #80]	; (900011fc <HAL_MPU_ConfigRegion+0x54>)
{
900011ac:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
900011ae:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != RESET)
900011b2:	7801      	ldrb	r1, [r0, #0]
900011b4:	b1e9      	cbz	r1, 900011f2 <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
    
    MPU->RBAR = MPU_Init->BaseAddress;
900011b6:	6843      	ldr	r3, [r0, #4]
900011b8:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900011bc:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900011be:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900011c0:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900011c2:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900011c6:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
900011c8:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900011ca:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
900011ce:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900011d0:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
900011d4:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900011d6:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
900011da:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900011dc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
900011e0:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900011e2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900011e6:	7a01      	ldrb	r1, [r0, #8]
900011e8:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900011ec:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
900011f0:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
900011f2:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
900011f6:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
}
900011fa:	e7f9      	b.n	900011f0 <HAL_MPU_ConfigRegion+0x48>
900011fc:	e000ed00 	.word	0xe000ed00

90001200 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90001200:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
90001204:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90001206:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 900013a8 <HAL_GPIO_Init+0x1a8>
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
        SYSCFG->EXTICR[position >> 2] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
9000120a:	4a65      	ldr	r2, [pc, #404]	; (900013a0 <HAL_GPIO_Init+0x1a0>)
    ioposition = ((uint32_t)0x01) << position;
9000120c:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
9000120e:	680d      	ldr	r5, [r1, #0]
    ioposition = ((uint32_t)0x01) << position;
90001210:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
90001212:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
90001216:	43ac      	bics	r4, r5
90001218:	f040 80ac 	bne.w	90001374 <HAL_GPIO_Init+0x174>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000121c:	684d      	ldr	r5, [r1, #4]
9000121e:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
90001222:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90001224:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
90001228:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000122c:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
9000122e:	43f6      	mvns	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90001230:	2f01      	cmp	r7, #1
90001232:	d834      	bhi.n	9000129e <HAL_GPIO_Init+0x9e>
        temp = GPIOx->OSPEEDR; 
90001234:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
90001236:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2));
9000123a:	68cf      	ldr	r7, [r1, #12]
9000123c:	fa07 f708 	lsl.w	r7, r7, r8
90001240:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
90001244:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
90001246:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
90001248:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000124c:	f3c5 1700 	ubfx	r7, r5, #4, #1
90001250:	409f      	lsls	r7, r3
90001252:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
90001256:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
90001258:	68c7      	ldr	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000125a:	2c02      	cmp	r4, #2
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
9000125c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2));
90001260:	688f      	ldr	r7, [r1, #8]
90001262:	fa07 f708 	lsl.w	r7, r7, r8
90001266:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->PUPDR = temp;
9000126a:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000126c:	d119      	bne.n	900012a2 <HAL_GPIO_Init+0xa2>
        temp = GPIOx->AFR[position >> 3];
9000126e:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
90001272:	f003 0b07 	and.w	fp, r3, #7
90001276:	f04f 0e0f 	mov.w	lr, #15
9000127a:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
9000127e:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3];
90001282:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
90001286:	fa0e fe0b 	lsl.w	lr, lr, fp
9000128a:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
9000128e:	690f      	ldr	r7, [r1, #16]
90001290:	fa07 f70b 	lsl.w	r7, r7, fp
90001294:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3] = temp;
90001298:	f8ca 7020 	str.w	r7, [sl, #32]
9000129c:	e001      	b.n	900012a2 <HAL_GPIO_Init+0xa2>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000129e:	2c03      	cmp	r4, #3
900012a0:	d1da      	bne.n	90001258 <HAL_GPIO_Init+0x58>
      temp = GPIOx->MODER;
900012a2:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
900012a4:	fa04 f408 	lsl.w	r4, r4, r8
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
900012a8:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
900012ac:	ea07 0706 	and.w	r7, r7, r6
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
900012b0:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
900012b4:	6004      	str	r4, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
900012b6:	d05d      	beq.n	90001374 <HAL_GPIO_Init+0x174>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900012b8:	f8d9 4044 	ldr.w	r4, [r9, #68]	; 0x44
900012bc:	f023 0603 	bic.w	r6, r3, #3
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
900012c0:	f003 0703 	and.w	r7, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900012c4:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
900012c8:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
900012cc:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900012ce:	f8c9 4044 	str.w	r4, [r9, #68]	; 0x44
900012d2:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
900012d6:	f8d9 4044 	ldr.w	r4, [r9, #68]	; 0x44
900012da:	f404 4480 	and.w	r4, r4, #16384	; 0x4000
900012de:	9401      	str	r4, [sp, #4]
900012e0:	9c01      	ldr	r4, [sp, #4]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
900012e2:	240f      	movs	r4, #15
        temp = SYSCFG->EXTICR[position >> 2];
900012e4:	f8d6 e008 	ldr.w	lr, [r6, #8]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
900012e8:	40bc      	lsls	r4, r7
900012ea:	ea2e 0e04 	bic.w	lr, lr, r4
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
900012ee:	4c2d      	ldr	r4, [pc, #180]	; (900013a4 <HAL_GPIO_Init+0x1a4>)
900012f0:	42a0      	cmp	r0, r4
900012f2:	d046      	beq.n	90001382 <HAL_GPIO_Init+0x182>
900012f4:	f504 6480 	add.w	r4, r4, #1024	; 0x400
900012f8:	42a0      	cmp	r0, r4
900012fa:	d044      	beq.n	90001386 <HAL_GPIO_Init+0x186>
900012fc:	f504 6480 	add.w	r4, r4, #1024	; 0x400
90001300:	42a0      	cmp	r0, r4
90001302:	d042      	beq.n	9000138a <HAL_GPIO_Init+0x18a>
90001304:	f504 6480 	add.w	r4, r4, #1024	; 0x400
90001308:	42a0      	cmp	r0, r4
9000130a:	d040      	beq.n	9000138e <HAL_GPIO_Init+0x18e>
9000130c:	f504 6480 	add.w	r4, r4, #1024	; 0x400
90001310:	42a0      	cmp	r0, r4
90001312:	d03e      	beq.n	90001392 <HAL_GPIO_Init+0x192>
90001314:	f504 6480 	add.w	r4, r4, #1024	; 0x400
90001318:	42a0      	cmp	r0, r4
9000131a:	d03c      	beq.n	90001396 <HAL_GPIO_Init+0x196>
9000131c:	f504 6480 	add.w	r4, r4, #1024	; 0x400
90001320:	42a0      	cmp	r0, r4
90001322:	d03a      	beq.n	9000139a <HAL_GPIO_Init+0x19a>
90001324:	f504 6480 	add.w	r4, r4, #1024	; 0x400
90001328:	42a0      	cmp	r0, r4
9000132a:	bf0c      	ite	eq
9000132c:	2407      	moveq	r4, #7
9000132e:	2408      	movne	r4, #8
90001330:	40bc      	lsls	r4, r7
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
90001332:	02ef      	lsls	r7, r5, #11
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
90001334:	ea44 040e 	orr.w	r4, r4, lr
        SYSCFG->EXTICR[position >> 2] = temp;
90001338:	60b4      	str	r4, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
9000133a:	ea6f 060c 	mvn.w	r6, ip
        temp = EXTI->RTSR;
9000133e:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
90001340:	bf54      	ite	pl
90001342:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
90001344:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;

        temp = EXTI->FTSR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
90001348:	02af      	lsls	r7, r5, #10
        EXTI->RTSR = temp;
9000134a:	6094      	str	r4, [r2, #8]
        temp = EXTI->FTSR;
9000134c:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
9000134e:	bf54      	ite	pl
90001350:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
90001352:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;

        temp = EXTI->EMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
90001356:	03af      	lsls	r7, r5, #14
        EXTI->FTSR = temp;
90001358:	60d4      	str	r4, [r2, #12]
        temp = EXTI->EMR;
9000135a:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
9000135c:	bf54      	ite	pl
9000135e:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
90001360:	ea4c 0404 	orrmi.w	r4, ip, r4
        EXTI->EMR = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
90001364:	03ed      	lsls	r5, r5, #15
        EXTI->EMR = temp;
90001366:	6054      	str	r4, [r2, #4]
        temp = EXTI->IMR;
90001368:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
9000136a:	bf54      	ite	pl
9000136c:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
9000136e:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
90001372:	6014      	str	r4, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
90001374:	3301      	adds	r3, #1
90001376:	2b10      	cmp	r3, #16
90001378:	f47f af48 	bne.w	9000120c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
9000137c:	b003      	add	sp, #12
9000137e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
90001382:	2400      	movs	r4, #0
90001384:	e7d4      	b.n	90001330 <HAL_GPIO_Init+0x130>
90001386:	2401      	movs	r4, #1
90001388:	e7d2      	b.n	90001330 <HAL_GPIO_Init+0x130>
9000138a:	2402      	movs	r4, #2
9000138c:	e7d0      	b.n	90001330 <HAL_GPIO_Init+0x130>
9000138e:	2403      	movs	r4, #3
90001390:	e7ce      	b.n	90001330 <HAL_GPIO_Init+0x130>
90001392:	2404      	movs	r4, #4
90001394:	e7cc      	b.n	90001330 <HAL_GPIO_Init+0x130>
90001396:	2405      	movs	r4, #5
90001398:	e7ca      	b.n	90001330 <HAL_GPIO_Init+0x130>
9000139a:	2406      	movs	r4, #6
9000139c:	e7c8      	b.n	90001330 <HAL_GPIO_Init+0x130>
9000139e:	bf00      	nop
900013a0:	40013c00 	.word	0x40013c00
900013a4:	40020000 	.word	0x40020000
900013a8:	40023800 	.word	0x40023800

900013ac <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
900013ac:	b10a      	cbz	r2, 900013b2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
900013ae:	6181      	str	r1, [r0, #24]
  }
}
900013b0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
900013b2:	0409      	lsls	r1, r1, #16
900013b4:	e7fb      	b.n	900013ae <HAL_GPIO_WritePin+0x2>

900013b6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900013b6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
900013b8:	ea01 0203 	and.w	r2, r1, r3
900013bc:	ea21 0103 	bic.w	r1, r1, r3
900013c0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
900013c4:	6181      	str	r1, [r0, #24]
}
900013c6:	4770      	bx	lr

900013c8 <HAL_PWREx_EnableOverDrive>:
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
  uint32_t tickstart = 0;

  __HAL_RCC_PWR_CLK_ENABLE();
900013c8:	4b19      	ldr	r3, [pc, #100]	; (90001430 <HAL_PWREx_EnableOverDrive+0x68>)
{
900013ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
  __HAL_RCC_PWR_CLK_ENABLE();
900013cc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
900013ce:	4c19      	ldr	r4, [pc, #100]	; (90001434 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
900013d0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
900013d4:	641a      	str	r2, [r3, #64]	; 0x40
900013d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900013d8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
900013dc:	9301      	str	r3, [sp, #4]
900013de:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
900013e0:	6823      	ldr	r3, [r4, #0]
900013e2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
900013e6:	6023      	str	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
900013e8:	f7ff fe42 	bl	90001070 <HAL_GetTick>
900013ec:	4605      	mov	r5, r0

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
900013ee:	6863      	ldr	r3, [r4, #4]
900013f0:	03da      	lsls	r2, r3, #15
900013f2:	d50c      	bpl.n	9000140e <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
900013f4:	6823      	ldr	r3, [r4, #0]

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
900013f6:	4d0f      	ldr	r5, [pc, #60]	; (90001434 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
900013f8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
900013fc:	6023      	str	r3, [r4, #0]
  tickstart = HAL_GetTick();
900013fe:	f7ff fe37 	bl	90001070 <HAL_GetTick>
90001402:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
90001404:	686b      	ldr	r3, [r5, #4]
90001406:	039b      	lsls	r3, r3, #14
90001408:	d50a      	bpl.n	90001420 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
9000140a:	2000      	movs	r0, #0
9000140c:	e006      	b.n	9000141c <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
9000140e:	f7ff fe2f 	bl	90001070 <HAL_GetTick>
90001412:	1b40      	subs	r0, r0, r5
90001414:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
90001418:	d9e9      	bls.n	900013ee <HAL_PWREx_EnableOverDrive+0x26>
      return HAL_TIMEOUT;
9000141a:	2003      	movs	r0, #3
}
9000141c:	b003      	add	sp, #12
9000141e:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
90001420:	f7ff fe26 	bl	90001070 <HAL_GetTick>
90001424:	1b00      	subs	r0, r0, r4
90001426:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000142a:	d9eb      	bls.n	90001404 <HAL_PWREx_EnableOverDrive+0x3c>
9000142c:	e7f5      	b.n	9000141a <HAL_PWREx_EnableOverDrive+0x52>
9000142e:	bf00      	nop
90001430:	40023800 	.word	0x40023800
90001434:	40007000 	.word	0x40007000

90001438 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
90001438:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
9000143c:	4604      	mov	r4, r0
9000143e:	b340      	cbz	r0, 90001492 <HAL_RCC_OscConfig+0x5a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
90001440:	6803      	ldr	r3, [r0, #0]
90001442:	07db      	lsls	r3, r3, #31
90001444:	d410      	bmi.n	90001468 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
90001446:	6823      	ldr	r3, [r4, #0]
90001448:	079f      	lsls	r7, r3, #30
9000144a:	d461      	bmi.n	90001510 <HAL_RCC_OscConfig+0xd8>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000144c:	6823      	ldr	r3, [r4, #0]
9000144e:	0719      	lsls	r1, r3, #28
90001450:	f100 80a6 	bmi.w	900015a0 <HAL_RCC_OscConfig+0x168>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
90001454:	6823      	ldr	r3, [r4, #0]
90001456:	075a      	lsls	r2, r3, #29
90001458:	f100 80c7 	bmi.w	900015ea <HAL_RCC_OscConfig+0x1b2>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000145c:	69a2      	ldr	r2, [r4, #24]
9000145e:	2a00      	cmp	r2, #0
90001460:	f040 8130 	bne.w	900016c4 <HAL_RCC_OscConfig+0x28c>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
90001464:	2000      	movs	r0, #0
90001466:	e02c      	b.n	900014c2 <HAL_RCC_OscConfig+0x8a>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
90001468:	4b94      	ldr	r3, [pc, #592]	; (900016bc <HAL_RCC_OscConfig+0x284>)
9000146a:	689a      	ldr	r2, [r3, #8]
9000146c:	f002 020c 	and.w	r2, r2, #12
90001470:	2a04      	cmp	r2, #4
90001472:	d007      	beq.n	90001484 <HAL_RCC_OscConfig+0x4c>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
90001474:	689a      	ldr	r2, [r3, #8]
90001476:	f002 020c 	and.w	r2, r2, #12
9000147a:	2a08      	cmp	r2, #8
9000147c:	d10b      	bne.n	90001496 <HAL_RCC_OscConfig+0x5e>
9000147e:	685b      	ldr	r3, [r3, #4]
90001480:	025e      	lsls	r6, r3, #9
90001482:	d508      	bpl.n	90001496 <HAL_RCC_OscConfig+0x5e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
90001484:	4b8d      	ldr	r3, [pc, #564]	; (900016bc <HAL_RCC_OscConfig+0x284>)
90001486:	681b      	ldr	r3, [r3, #0]
90001488:	039d      	lsls	r5, r3, #14
9000148a:	d5dc      	bpl.n	90001446 <HAL_RCC_OscConfig+0xe>
9000148c:	6863      	ldr	r3, [r4, #4]
9000148e:	2b00      	cmp	r3, #0
90001490:	d1d9      	bne.n	90001446 <HAL_RCC_OscConfig+0xe>
        return HAL_ERROR;
90001492:	2001      	movs	r0, #1
90001494:	e015      	b.n	900014c2 <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
90001496:	6863      	ldr	r3, [r4, #4]
90001498:	4d88      	ldr	r5, [pc, #544]	; (900016bc <HAL_RCC_OscConfig+0x284>)
9000149a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000149e:	d113      	bne.n	900014c8 <HAL_RCC_OscConfig+0x90>
900014a0:	682b      	ldr	r3, [r5, #0]
900014a2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
900014a6:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
900014a8:	f7ff fde2 	bl	90001070 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
900014ac:	4e83      	ldr	r6, [pc, #524]	; (900016bc <HAL_RCC_OscConfig+0x284>)
        tickstart = HAL_GetTick();
900014ae:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
900014b0:	6833      	ldr	r3, [r6, #0]
900014b2:	0398      	lsls	r0, r3, #14
900014b4:	d4c7      	bmi.n	90001446 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
900014b6:	f7ff fddb 	bl	90001070 <HAL_GetTick>
900014ba:	1b40      	subs	r0, r0, r5
900014bc:	2864      	cmp	r0, #100	; 0x64
900014be:	d9f7      	bls.n	900014b0 <HAL_RCC_OscConfig+0x78>
            return HAL_TIMEOUT;
900014c0:	2003      	movs	r0, #3
}
900014c2:	b002      	add	sp, #8
900014c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
900014c8:	b99b      	cbnz	r3, 900014f2 <HAL_RCC_OscConfig+0xba>
900014ca:	682b      	ldr	r3, [r5, #0]
900014cc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
900014d0:	602b      	str	r3, [r5, #0]
900014d2:	682b      	ldr	r3, [r5, #0]
900014d4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
900014d8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
900014da:	f7ff fdc9 	bl	90001070 <HAL_GetTick>
900014de:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
900014e0:	682b      	ldr	r3, [r5, #0]
900014e2:	0399      	lsls	r1, r3, #14
900014e4:	d5af      	bpl.n	90001446 <HAL_RCC_OscConfig+0xe>
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
900014e6:	f7ff fdc3 	bl	90001070 <HAL_GetTick>
900014ea:	1b80      	subs	r0, r0, r6
900014ec:	2864      	cmp	r0, #100	; 0x64
900014ee:	d9f7      	bls.n	900014e0 <HAL_RCC_OscConfig+0xa8>
900014f0:	e7e6      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
900014f2:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
900014f6:	682b      	ldr	r3, [r5, #0]
900014f8:	d103      	bne.n	90001502 <HAL_RCC_OscConfig+0xca>
900014fa:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
900014fe:	602b      	str	r3, [r5, #0]
90001500:	e7ce      	b.n	900014a0 <HAL_RCC_OscConfig+0x68>
90001502:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
90001506:	602b      	str	r3, [r5, #0]
90001508:	682b      	ldr	r3, [r5, #0]
9000150a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000150e:	e7ca      	b.n	900014a6 <HAL_RCC_OscConfig+0x6e>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
90001510:	4b6a      	ldr	r3, [pc, #424]	; (900016bc <HAL_RCC_OscConfig+0x284>)
90001512:	689a      	ldr	r2, [r3, #8]
90001514:	f012 0f0c 	tst.w	r2, #12
90001518:	d007      	beq.n	9000152a <HAL_RCC_OscConfig+0xf2>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
9000151a:	689a      	ldr	r2, [r3, #8]
9000151c:	f002 020c 	and.w	r2, r2, #12
90001520:	2a08      	cmp	r2, #8
90001522:	d111      	bne.n	90001548 <HAL_RCC_OscConfig+0x110>
90001524:	685b      	ldr	r3, [r3, #4]
90001526:	025a      	lsls	r2, r3, #9
90001528:	d40e      	bmi.n	90001548 <HAL_RCC_OscConfig+0x110>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
9000152a:	4a64      	ldr	r2, [pc, #400]	; (900016bc <HAL_RCC_OscConfig+0x284>)
9000152c:	6813      	ldr	r3, [r2, #0]
9000152e:	079b      	lsls	r3, r3, #30
90001530:	d502      	bpl.n	90001538 <HAL_RCC_OscConfig+0x100>
90001532:	68e3      	ldr	r3, [r4, #12]
90001534:	2b01      	cmp	r3, #1
90001536:	d1ac      	bne.n	90001492 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
90001538:	6813      	ldr	r3, [r2, #0]
9000153a:	6921      	ldr	r1, [r4, #16]
9000153c:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
90001540:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
90001544:	6013      	str	r3, [r2, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
90001546:	e781      	b.n	9000144c <HAL_RCC_OscConfig+0x14>
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
90001548:	68e3      	ldr	r3, [r4, #12]
9000154a:	4d5c      	ldr	r5, [pc, #368]	; (900016bc <HAL_RCC_OscConfig+0x284>)
9000154c:	b1bb      	cbz	r3, 9000157e <HAL_RCC_OscConfig+0x146>
        __HAL_RCC_HSI_ENABLE();
9000154e:	682b      	ldr	r3, [r5, #0]
90001550:	f043 0301 	orr.w	r3, r3, #1
90001554:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
90001556:	f7ff fd8b 	bl	90001070 <HAL_GetTick>
9000155a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
9000155c:	682b      	ldr	r3, [r5, #0]
9000155e:	079f      	lsls	r7, r3, #30
90001560:	d507      	bpl.n	90001572 <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
90001562:	682b      	ldr	r3, [r5, #0]
90001564:	6922      	ldr	r2, [r4, #16]
90001566:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
9000156a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000156e:	602b      	str	r3, [r5, #0]
90001570:	e76c      	b.n	9000144c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
90001572:	f7ff fd7d 	bl	90001070 <HAL_GetTick>
90001576:	1b80      	subs	r0, r0, r6
90001578:	2802      	cmp	r0, #2
9000157a:	d9ef      	bls.n	9000155c <HAL_RCC_OscConfig+0x124>
9000157c:	e7a0      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
        __HAL_RCC_HSI_DISABLE();
9000157e:	682b      	ldr	r3, [r5, #0]
90001580:	f023 0301 	bic.w	r3, r3, #1
90001584:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
90001586:	f7ff fd73 	bl	90001070 <HAL_GetTick>
9000158a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
9000158c:	682b      	ldr	r3, [r5, #0]
9000158e:	0798      	lsls	r0, r3, #30
90001590:	f57f af5c 	bpl.w	9000144c <HAL_RCC_OscConfig+0x14>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
90001594:	f7ff fd6c 	bl	90001070 <HAL_GetTick>
90001598:	1b80      	subs	r0, r0, r6
9000159a:	2802      	cmp	r0, #2
9000159c:	d9f6      	bls.n	9000158c <HAL_RCC_OscConfig+0x154>
9000159e:	e78f      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
900015a0:	6963      	ldr	r3, [r4, #20]
900015a2:	4d46      	ldr	r5, [pc, #280]	; (900016bc <HAL_RCC_OscConfig+0x284>)
900015a4:	b183      	cbz	r3, 900015c8 <HAL_RCC_OscConfig+0x190>
      __HAL_RCC_LSI_ENABLE();
900015a6:	6f6b      	ldr	r3, [r5, #116]	; 0x74
900015a8:	f043 0301 	orr.w	r3, r3, #1
900015ac:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
900015ae:	f7ff fd5f 	bl	90001070 <HAL_GetTick>
900015b2:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
900015b4:	6f6b      	ldr	r3, [r5, #116]	; 0x74
900015b6:	079b      	lsls	r3, r3, #30
900015b8:	f53f af4c 	bmi.w	90001454 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
900015bc:	f7ff fd58 	bl	90001070 <HAL_GetTick>
900015c0:	1b80      	subs	r0, r0, r6
900015c2:	2802      	cmp	r0, #2
900015c4:	d9f6      	bls.n	900015b4 <HAL_RCC_OscConfig+0x17c>
900015c6:	e77b      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_LSI_DISABLE();
900015c8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
900015ca:	f023 0301 	bic.w	r3, r3, #1
900015ce:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
900015d0:	f7ff fd4e 	bl	90001070 <HAL_GetTick>
900015d4:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
900015d6:	6f6b      	ldr	r3, [r5, #116]	; 0x74
900015d8:	079f      	lsls	r7, r3, #30
900015da:	f57f af3b 	bpl.w	90001454 <HAL_RCC_OscConfig+0x1c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
900015de:	f7ff fd47 	bl	90001070 <HAL_GetTick>
900015e2:	1b80      	subs	r0, r0, r6
900015e4:	2802      	cmp	r0, #2
900015e6:	d9f6      	bls.n	900015d6 <HAL_RCC_OscConfig+0x19e>
900015e8:	e76a      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
900015ea:	4b34      	ldr	r3, [pc, #208]	; (900016bc <HAL_RCC_OscConfig+0x284>)
900015ec:	6c1a      	ldr	r2, [r3, #64]	; 0x40
900015ee:	00d0      	lsls	r0, r2, #3
900015f0:	d427      	bmi.n	90001642 <HAL_RCC_OscConfig+0x20a>
      __HAL_RCC_PWR_CLK_ENABLE();
900015f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
      pwrclkchanged = SET;
900015f4:	2701      	movs	r7, #1
      __HAL_RCC_PWR_CLK_ENABLE();
900015f6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
900015fa:	641a      	str	r2, [r3, #64]	; 0x40
900015fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900015fe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
90001602:	9301      	str	r3, [sp, #4]
90001604:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
90001606:	4d2e      	ldr	r5, [pc, #184]	; (900016c0 <HAL_RCC_OscConfig+0x288>)
90001608:	682b      	ldr	r3, [r5, #0]
9000160a:	05d9      	lsls	r1, r3, #23
9000160c:	d51b      	bpl.n	90001646 <HAL_RCC_OscConfig+0x20e>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000160e:	68a3      	ldr	r3, [r4, #8]
90001610:	4d2a      	ldr	r5, [pc, #168]	; (900016bc <HAL_RCC_OscConfig+0x284>)
90001612:	2b01      	cmp	r3, #1
90001614:	d127      	bne.n	90001666 <HAL_RCC_OscConfig+0x22e>
90001616:	6f2b      	ldr	r3, [r5, #112]	; 0x70
90001618:	f043 0301 	orr.w	r3, r3, #1
9000161c:	672b      	str	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000161e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
90001622:	f7ff fd25 	bl	90001070 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
90001626:	4e25      	ldr	r6, [pc, #148]	; (900016bc <HAL_RCC_OscConfig+0x284>)
      tickstart = HAL_GetTick();
90001628:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
9000162a:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000162c:	079b      	lsls	r3, r3, #30
9000162e:	d53f      	bpl.n	900016b0 <HAL_RCC_OscConfig+0x278>
    if (pwrclkchanged == SET)
90001630:	2f00      	cmp	r7, #0
90001632:	f43f af13 	beq.w	9000145c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
90001636:	4a21      	ldr	r2, [pc, #132]	; (900016bc <HAL_RCC_OscConfig+0x284>)
90001638:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000163a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000163e:	6413      	str	r3, [r2, #64]	; 0x40
90001640:	e70c      	b.n	9000145c <HAL_RCC_OscConfig+0x24>
  FlagStatus pwrclkchanged = RESET;
90001642:	2700      	movs	r7, #0
90001644:	e7df      	b.n	90001606 <HAL_RCC_OscConfig+0x1ce>
      PWR->CR1 |= PWR_CR1_DBP;
90001646:	682b      	ldr	r3, [r5, #0]
90001648:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000164c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000164e:	f7ff fd0f 	bl	90001070 <HAL_GetTick>
90001652:	4606      	mov	r6, r0
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
90001654:	682b      	ldr	r3, [r5, #0]
90001656:	05da      	lsls	r2, r3, #23
90001658:	d4d9      	bmi.n	9000160e <HAL_RCC_OscConfig+0x1d6>
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000165a:	f7ff fd09 	bl	90001070 <HAL_GetTick>
9000165e:	1b80      	subs	r0, r0, r6
90001660:	2864      	cmp	r0, #100	; 0x64
90001662:	d9f7      	bls.n	90001654 <HAL_RCC_OscConfig+0x21c>
90001664:	e72c      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
90001666:	b9ab      	cbnz	r3, 90001694 <HAL_RCC_OscConfig+0x25c>
90001668:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000166a:	f241 3888 	movw	r8, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000166e:	f023 0301 	bic.w	r3, r3, #1
90001672:	672b      	str	r3, [r5, #112]	; 0x70
90001674:	6f2b      	ldr	r3, [r5, #112]	; 0x70
90001676:	f023 0304 	bic.w	r3, r3, #4
9000167a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000167c:	f7ff fcf8 	bl	90001070 <HAL_GetTick>
90001680:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
90001682:	6f2b      	ldr	r3, [r5, #112]	; 0x70
90001684:	0798      	lsls	r0, r3, #30
90001686:	d5d3      	bpl.n	90001630 <HAL_RCC_OscConfig+0x1f8>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
90001688:	f7ff fcf2 	bl	90001070 <HAL_GetTick>
9000168c:	1b80      	subs	r0, r0, r6
9000168e:	4540      	cmp	r0, r8
90001690:	d9f7      	bls.n	90001682 <HAL_RCC_OscConfig+0x24a>
90001692:	e715      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
90001694:	2b05      	cmp	r3, #5
90001696:	6f2b      	ldr	r3, [r5, #112]	; 0x70
90001698:	d103      	bne.n	900016a2 <HAL_RCC_OscConfig+0x26a>
9000169a:	f043 0304 	orr.w	r3, r3, #4
9000169e:	672b      	str	r3, [r5, #112]	; 0x70
900016a0:	e7b9      	b.n	90001616 <HAL_RCC_OscConfig+0x1de>
900016a2:	f023 0301 	bic.w	r3, r3, #1
900016a6:	672b      	str	r3, [r5, #112]	; 0x70
900016a8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
900016aa:	f023 0304 	bic.w	r3, r3, #4
900016ae:	e7b5      	b.n	9000161c <HAL_RCC_OscConfig+0x1e4>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
900016b0:	f7ff fcde 	bl	90001070 <HAL_GetTick>
900016b4:	1b40      	subs	r0, r0, r5
900016b6:	4540      	cmp	r0, r8
900016b8:	d9b7      	bls.n	9000162a <HAL_RCC_OscConfig+0x1f2>
900016ba:	e701      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
900016bc:	40023800 	.word	0x40023800
900016c0:	40007000 	.word	0x40007000
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
900016c4:	4d38      	ldr	r5, [pc, #224]	; (900017a8 <HAL_RCC_OscConfig+0x370>)
900016c6:	68ab      	ldr	r3, [r5, #8]
900016c8:	f003 030c 	and.w	r3, r3, #12
900016cc:	2b08      	cmp	r3, #8
900016ce:	d041      	beq.n	90001754 <HAL_RCC_OscConfig+0x31c>
        __HAL_RCC_PLL_DISABLE();
900016d0:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
900016d2:	2a02      	cmp	r2, #2
        __HAL_RCC_PLL_DISABLE();
900016d4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
900016d8:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
900016da:	d12e      	bne.n	9000173a <HAL_RCC_OscConfig+0x302>
        tickstart = HAL_GetTick();
900016dc:	f7ff fcc8 	bl	90001070 <HAL_GetTick>
900016e0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
900016e2:	682b      	ldr	r3, [r5, #0]
900016e4:	0199      	lsls	r1, r3, #6
900016e6:	d422      	bmi.n	9000172e <HAL_RCC_OscConfig+0x2f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
900016e8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900016ea:	085b      	lsrs	r3, r3, #1
900016ec:	1e5a      	subs	r2, r3, #1
900016ee:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
900016f2:	430b      	orrs	r3, r1
900016f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900016f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
900016fa:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
900016fe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90001700:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90001704:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
90001708:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
9000170a:	682b      	ldr	r3, [r5, #0]
9000170c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
90001710:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
90001712:	f7ff fcad 	bl	90001070 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
90001716:	4d24      	ldr	r5, [pc, #144]	; (900017a8 <HAL_RCC_OscConfig+0x370>)
        tickstart = HAL_GetTick();
90001718:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
9000171a:	682b      	ldr	r3, [r5, #0]
9000171c:	019a      	lsls	r2, r3, #6
9000171e:	f53f aea1 	bmi.w	90001464 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
90001722:	f7ff fca5 	bl	90001070 <HAL_GetTick>
90001726:	1b00      	subs	r0, r0, r4
90001728:	2802      	cmp	r0, #2
9000172a:	d9f6      	bls.n	9000171a <HAL_RCC_OscConfig+0x2e2>
9000172c:	e6c8      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000172e:	f7ff fc9f 	bl	90001070 <HAL_GetTick>
90001732:	1b80      	subs	r0, r0, r6
90001734:	2802      	cmp	r0, #2
90001736:	d9d4      	bls.n	900016e2 <HAL_RCC_OscConfig+0x2aa>
90001738:	e6c2      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
        tickstart = HAL_GetTick();
9000173a:	f7ff fc99 	bl	90001070 <HAL_GetTick>
9000173e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
90001740:	682b      	ldr	r3, [r5, #0]
90001742:	019b      	lsls	r3, r3, #6
90001744:	f57f ae8e 	bpl.w	90001464 <HAL_RCC_OscConfig+0x2c>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
90001748:	f7ff fc92 	bl	90001070 <HAL_GetTick>
9000174c:	1b00      	subs	r0, r0, r4
9000174e:	2802      	cmp	r0, #2
90001750:	d9f6      	bls.n	90001740 <HAL_RCC_OscConfig+0x308>
90001752:	e6b5      	b.n	900014c0 <HAL_RCC_OscConfig+0x88>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
90001754:	2a01      	cmp	r2, #1
      pll_config = RCC->PLLCFGR;
90001756:	686b      	ldr	r3, [r5, #4]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
90001758:	f43f ae9b 	beq.w	90001492 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000175c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
90001760:	69e1      	ldr	r1, [r4, #28]
90001762:	428a      	cmp	r2, r1
90001764:	f47f ae95 	bne.w	90001492 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
90001768:	f003 023f 	and.w	r2, r3, #63	; 0x3f
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000176c:	6a21      	ldr	r1, [r4, #32]
9000176e:	428a      	cmp	r2, r1
90001770:	f47f ae8f 	bne.w	90001492 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
90001774:	f647 72c0 	movw	r2, #32704	; 0x7fc0
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
90001778:	6a61      	ldr	r1, [r4, #36]	; 0x24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
9000177a:	401a      	ands	r2, r3
9000177c:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
90001780:	f47f ae87 	bne.w	90001492 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
90001784:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90001786:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
9000178a:	0852      	lsrs	r2, r2, #1
9000178c:	3a01      	subs	r2, #1
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
9000178e:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
90001792:	f47f ae7e 	bne.w	90001492 <HAL_RCC_OscConfig+0x5a>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
90001796:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
9000179a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
9000179c:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
900017a0:	f43f ae60 	beq.w	90001464 <HAL_RCC_OscConfig+0x2c>
900017a4:	e675      	b.n	90001492 <HAL_RCC_OscConfig+0x5a>
900017a6:	bf00      	nop
900017a8:	40023800 	.word	0x40023800

900017ac <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
  uint32_t sysclockfreq = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
900017ac:	4913      	ldr	r1, [pc, #76]	; (900017fc <HAL_RCC_GetSysClockFreq+0x50>)
{
900017ae:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
900017b0:	688b      	ldr	r3, [r1, #8]
900017b2:	f003 030c 	and.w	r3, r3, #12
900017b6:	2b04      	cmp	r3, #4
900017b8:	d01b      	beq.n	900017f2 <HAL_RCC_GetSysClockFreq+0x46>
900017ba:	2b08      	cmp	r3, #8
900017bc:	d11b      	bne.n	900017f6 <HAL_RCC_GetSysClockFreq+0x4a>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
900017be:	684a      	ldr	r2, [r1, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
900017c0:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
900017c2:	6849      	ldr	r1, [r1, #4]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
900017c4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
900017c8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
900017cc:	f3c1 1188 	ubfx	r1, r1, #6, #9
900017d0:	bf1a      	itte	ne
900017d2:	480b      	ldrne	r0, [pc, #44]	; (90001800 <HAL_RCC_GetSysClockFreq+0x54>)
900017d4:	2300      	movne	r3, #0
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
900017d6:	480b      	ldreq	r0, [pc, #44]	; (90001804 <HAL_RCC_GetSysClockFreq+0x58>)
900017d8:	fba1 0100 	umull	r0, r1, r1, r0
900017dc:	f7fe fd20 	bl	90000220 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
900017e0:	4b06      	ldr	r3, [pc, #24]	; (900017fc <HAL_RCC_GetSysClockFreq+0x50>)
900017e2:	685b      	ldr	r3, [r3, #4]
900017e4:	f3c3 4301 	ubfx	r3, r3, #16, #2
900017e8:	3301      	adds	r3, #1
900017ea:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco / pllp;
900017ec:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
900017f0:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
900017f2:	4803      	ldr	r0, [pc, #12]	; (90001800 <HAL_RCC_GetSysClockFreq+0x54>)
900017f4:	e7fc      	b.n	900017f0 <HAL_RCC_GetSysClockFreq+0x44>
      sysclockfreq = HSI_VALUE;
900017f6:	4803      	ldr	r0, [pc, #12]	; (90001804 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
900017f8:	e7fa      	b.n	900017f0 <HAL_RCC_GetSysClockFreq+0x44>
900017fa:	bf00      	nop
900017fc:	40023800 	.word	0x40023800
90001800:	017d7840 	.word	0x017d7840
90001804:	00f42400 	.word	0x00f42400

90001808 <HAL_RCC_ClockConfig>:
{
90001808:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000180c:	460d      	mov	r5, r1
  if (RCC_ClkInitStruct == NULL)
9000180e:	4604      	mov	r4, r0
90001810:	b910      	cbnz	r0, 90001818 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
90001812:	2001      	movs	r0, #1
}
90001814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (FLatency > __HAL_FLASH_GET_LATENCY())
90001818:	4a45      	ldr	r2, [pc, #276]	; (90001930 <HAL_RCC_ClockConfig+0x128>)
9000181a:	6813      	ldr	r3, [r2, #0]
9000181c:	f003 030f 	and.w	r3, r3, #15
90001820:	428b      	cmp	r3, r1
90001822:	d328      	bcc.n	90001876 <HAL_RCC_ClockConfig+0x6e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
90001824:	6821      	ldr	r1, [r4, #0]
90001826:	078f      	lsls	r7, r1, #30
90001828:	d430      	bmi.n	9000188c <HAL_RCC_ClockConfig+0x84>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000182a:	07c8      	lsls	r0, r1, #31
9000182c:	d443      	bmi.n	900018b6 <HAL_RCC_ClockConfig+0xae>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000182e:	4a40      	ldr	r2, [pc, #256]	; (90001930 <HAL_RCC_ClockConfig+0x128>)
90001830:	6813      	ldr	r3, [r2, #0]
90001832:	f003 030f 	and.w	r3, r3, #15
90001836:	42ab      	cmp	r3, r5
90001838:	d866      	bhi.n	90001908 <HAL_RCC_ClockConfig+0x100>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000183a:	6822      	ldr	r2, [r4, #0]
9000183c:	0751      	lsls	r1, r2, #29
9000183e:	d46f      	bmi.n	90001920 <HAL_RCC_ClockConfig+0x118>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
90001840:	0713      	lsls	r3, r2, #28
90001842:	d507      	bpl.n	90001854 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
90001844:	4a3b      	ldr	r2, [pc, #236]	; (90001934 <HAL_RCC_ClockConfig+0x12c>)
90001846:	6921      	ldr	r1, [r4, #16]
90001848:	6893      	ldr	r3, [r2, #8]
9000184a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
9000184e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
90001852:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
90001854:	f7ff ffaa 	bl	900017ac <HAL_RCC_GetSysClockFreq>
90001858:	4b36      	ldr	r3, [pc, #216]	; (90001934 <HAL_RCC_ClockConfig+0x12c>)
9000185a:	4a37      	ldr	r2, [pc, #220]	; (90001938 <HAL_RCC_ClockConfig+0x130>)
9000185c:	689b      	ldr	r3, [r3, #8]
9000185e:	f3c3 1303 	ubfx	r3, r3, #4, #4
90001862:	5cd3      	ldrb	r3, [r2, r3]
90001864:	40d8      	lsrs	r0, r3
90001866:	4b35      	ldr	r3, [pc, #212]	; (9000193c <HAL_RCC_ClockConfig+0x134>)
90001868:	6018      	str	r0, [r3, #0]
  HAL_InitTick(uwTickPrio);
9000186a:	4b35      	ldr	r3, [pc, #212]	; (90001940 <HAL_RCC_ClockConfig+0x138>)
9000186c:	6818      	ldr	r0, [r3, #0]
9000186e:	f7ff fbbf 	bl	90000ff0 <HAL_InitTick>
  return HAL_OK;
90001872:	2000      	movs	r0, #0
90001874:	e7ce      	b.n	90001814 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
90001876:	6813      	ldr	r3, [r2, #0]
90001878:	f023 030f 	bic.w	r3, r3, #15
9000187c:	430b      	orrs	r3, r1
9000187e:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
90001880:	6813      	ldr	r3, [r2, #0]
90001882:	f003 030f 	and.w	r3, r3, #15
90001886:	428b      	cmp	r3, r1
90001888:	d1c3      	bne.n	90001812 <HAL_RCC_ClockConfig+0xa>
9000188a:	e7cb      	b.n	90001824 <HAL_RCC_ClockConfig+0x1c>
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000188c:	f011 0f04 	tst.w	r1, #4
90001890:	4b28      	ldr	r3, [pc, #160]	; (90001934 <HAL_RCC_ClockConfig+0x12c>)
90001892:	d003      	beq.n	9000189c <HAL_RCC_ClockConfig+0x94>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
90001894:	689a      	ldr	r2, [r3, #8]
90001896:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
9000189a:	609a      	str	r2, [r3, #8]
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000189c:	070e      	lsls	r6, r1, #28
9000189e:	d503      	bpl.n	900018a8 <HAL_RCC_ClockConfig+0xa0>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
900018a0:	689a      	ldr	r2, [r3, #8]
900018a2:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
900018a6:	609a      	str	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
900018a8:	689a      	ldr	r2, [r3, #8]
900018aa:	68a0      	ldr	r0, [r4, #8]
900018ac:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
900018b0:	4302      	orrs	r2, r0
900018b2:	609a      	str	r2, [r3, #8]
900018b4:	e7b9      	b.n	9000182a <HAL_RCC_ClockConfig+0x22>
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
900018b6:	6861      	ldr	r1, [r4, #4]
900018b8:	4b1e      	ldr	r3, [pc, #120]	; (90001934 <HAL_RCC_ClockConfig+0x12c>)
900018ba:	2901      	cmp	r1, #1
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
900018bc:	681a      	ldr	r2, [r3, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
900018be:	d11b      	bne.n	900018f8 <HAL_RCC_ClockConfig+0xf0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
900018c0:	f412 3f00 	tst.w	r2, #131072	; 0x20000
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
900018c4:	d0a5      	beq.n	90001812 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
900018c6:	689a      	ldr	r2, [r3, #8]
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
900018c8:	f241 3888 	movw	r8, #5000	; 0x1388
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
900018cc:	4f19      	ldr	r7, [pc, #100]	; (90001934 <HAL_RCC_ClockConfig+0x12c>)
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
900018ce:	f022 0203 	bic.w	r2, r2, #3
900018d2:	430a      	orrs	r2, r1
900018d4:	609a      	str	r2, [r3, #8]
    tickstart = HAL_GetTick();
900018d6:	f7ff fbcb 	bl	90001070 <HAL_GetTick>
900018da:	4606      	mov	r6, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
900018dc:	68bb      	ldr	r3, [r7, #8]
900018de:	6862      	ldr	r2, [r4, #4]
900018e0:	f003 030c 	and.w	r3, r3, #12
900018e4:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
900018e8:	d0a1      	beq.n	9000182e <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
900018ea:	f7ff fbc1 	bl	90001070 <HAL_GetTick>
900018ee:	1b80      	subs	r0, r0, r6
900018f0:	4540      	cmp	r0, r8
900018f2:	d9f3      	bls.n	900018dc <HAL_RCC_ClockConfig+0xd4>
        return HAL_TIMEOUT;
900018f4:	2003      	movs	r0, #3
900018f6:	e78d      	b.n	90001814 <HAL_RCC_ClockConfig+0xc>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
900018f8:	2902      	cmp	r1, #2
900018fa:	d102      	bne.n	90001902 <HAL_RCC_ClockConfig+0xfa>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
900018fc:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
90001900:	e7e0      	b.n	900018c4 <HAL_RCC_ClockConfig+0xbc>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
90001902:	f012 0f02 	tst.w	r2, #2
90001906:	e7dd      	b.n	900018c4 <HAL_RCC_ClockConfig+0xbc>
    __HAL_FLASH_SET_LATENCY(FLatency);
90001908:	6813      	ldr	r3, [r2, #0]
9000190a:	f023 030f 	bic.w	r3, r3, #15
9000190e:	432b      	orrs	r3, r5
90001910:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
90001912:	6813      	ldr	r3, [r2, #0]
90001914:	f003 030f 	and.w	r3, r3, #15
90001918:	42ab      	cmp	r3, r5
9000191a:	f47f af7a 	bne.w	90001812 <HAL_RCC_ClockConfig+0xa>
9000191e:	e78c      	b.n	9000183a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
90001920:	4904      	ldr	r1, [pc, #16]	; (90001934 <HAL_RCC_ClockConfig+0x12c>)
90001922:	68e0      	ldr	r0, [r4, #12]
90001924:	688b      	ldr	r3, [r1, #8]
90001926:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
9000192a:	4303      	orrs	r3, r0
9000192c:	608b      	str	r3, [r1, #8]
9000192e:	e787      	b.n	90001840 <HAL_RCC_ClockConfig+0x38>
90001930:	40023c00 	.word	0x40023c00
90001934:	40023800 	.word	0x40023800
90001938:	9000b110 	.word	0x9000b110
9000193c:	20000084 	.word	0x20000084
90001940:	2000008c 	.word	0x2000008c

90001944 <HAL_SRAM_MspInit>:
  UNUSED(hsram);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_SRAM_MspInit could be implemented in the user file
   */
}
90001944:	4770      	bx	lr

90001946 <HAL_SRAM_Init>:
{
90001946:	b570      	push	{r4, r5, r6, lr}
90001948:	460e      	mov	r6, r1
9000194a:	4615      	mov	r5, r2
  if (hsram == NULL)
9000194c:	4604      	mov	r4, r0
9000194e:	b328      	cbz	r0, 9000199c <HAL_SRAM_Init+0x56>
  if (hsram->State == HAL_SRAM_STATE_RESET)
90001950:	f890 3045 	ldrb.w	r3, [r0, #69]	; 0x45
90001954:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90001958:	b91b      	cbnz	r3, 90001962 <HAL_SRAM_Init+0x1c>
    hsram->Lock = HAL_UNLOCKED;
9000195a:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
    HAL_SRAM_MspInit(hsram);
9000195e:	f7ff fff1 	bl	90001944 <HAL_SRAM_MspInit>
  (void)FMC_NORSRAM_Init(hsram->Instance, &(hsram->Init));
90001962:	f104 0108 	add.w	r1, r4, #8
90001966:	6820      	ldr	r0, [r4, #0]
90001968:	f000 f9a6 	bl	90001cb8 <FMC_NORSRAM_Init>
  (void)FMC_NORSRAM_Timing_Init(hsram->Instance, Timing, hsram->Init.NSBank);
9000196c:	68a2      	ldr	r2, [r4, #8]
9000196e:	4631      	mov	r1, r6
90001970:	6820      	ldr	r0, [r4, #0]
90001972:	f000 f9e5 	bl	90001d40 <FMC_NORSRAM_Timing_Init>
  (void)FMC_NORSRAM_Extended_Timing_Init(hsram->Extended, ExtTiming, hsram->Init.NSBank,
90001976:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90001978:	68a2      	ldr	r2, [r4, #8]
9000197a:	4629      	mov	r1, r5
9000197c:	6860      	ldr	r0, [r4, #4]
9000197e:	f000 fa0b 	bl	90001d98 <FMC_NORSRAM_Extended_Timing_Init>
  __FMC_NORSRAM_ENABLE(hsram->Instance, hsram->Init.NSBank);
90001982:	6822      	ldr	r2, [r4, #0]
90001984:	68a1      	ldr	r1, [r4, #8]
  return HAL_OK;
90001986:	2000      	movs	r0, #0
  __FMC_NORSRAM_ENABLE(hsram->Instance, hsram->Init.NSBank);
90001988:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9000198c:	f043 0301 	orr.w	r3, r3, #1
90001990:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  hsram->State = HAL_SRAM_STATE_READY;
90001994:	2301      	movs	r3, #1
90001996:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
}
9000199a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
9000199c:	2001      	movs	r0, #1
9000199e:	e7fc      	b.n	9000199a <HAL_SRAM_Init+0x54>

900019a0 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
900019a0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
900019a4:	2b01      	cmp	r3, #1
900019a6:	d133      	bne.n	90001a10 <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
900019a8:	2302      	movs	r3, #2
900019aa:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
900019ae:	6803      	ldr	r3, [r0, #0]
900019b0:	68da      	ldr	r2, [r3, #12]
900019b2:	f042 0201 	orr.w	r2, r2, #1
900019b6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
900019b8:	4a16      	ldr	r2, [pc, #88]	; (90001a14 <HAL_TIM_Base_Start_IT+0x74>)
900019ba:	4293      	cmp	r3, r2
900019bc:	d01a      	beq.n	900019f4 <HAL_TIM_Base_Start_IT+0x54>
900019be:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
900019c2:	d017      	beq.n	900019f4 <HAL_TIM_Base_Start_IT+0x54>
900019c4:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
900019c8:	4293      	cmp	r3, r2
900019ca:	d013      	beq.n	900019f4 <HAL_TIM_Base_Start_IT+0x54>
900019cc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
900019d0:	4293      	cmp	r3, r2
900019d2:	d00f      	beq.n	900019f4 <HAL_TIM_Base_Start_IT+0x54>
900019d4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
900019d8:	4293      	cmp	r3, r2
900019da:	d00b      	beq.n	900019f4 <HAL_TIM_Base_Start_IT+0x54>
900019dc:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
900019e0:	4293      	cmp	r3, r2
900019e2:	d007      	beq.n	900019f4 <HAL_TIM_Base_Start_IT+0x54>
900019e4:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
900019e8:	4293      	cmp	r3, r2
900019ea:	d003      	beq.n	900019f4 <HAL_TIM_Base_Start_IT+0x54>
900019ec:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
900019f0:	4293      	cmp	r3, r2
900019f2:	d107      	bne.n	90001a04 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
900019f4:	6899      	ldr	r1, [r3, #8]
900019f6:	4a08      	ldr	r2, [pc, #32]	; (90001a18 <HAL_TIM_Base_Start_IT+0x78>)
900019f8:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
900019fa:	2a06      	cmp	r2, #6
900019fc:	d006      	beq.n	90001a0c <HAL_TIM_Base_Start_IT+0x6c>
900019fe:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
90001a02:	d003      	beq.n	90001a0c <HAL_TIM_Base_Start_IT+0x6c>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
90001a04:	681a      	ldr	r2, [r3, #0]
90001a06:	f042 0201 	orr.w	r2, r2, #1
90001a0a:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
90001a0c:	2000      	movs	r0, #0
}
90001a0e:	4770      	bx	lr
    return HAL_ERROR;
90001a10:	2001      	movs	r0, #1
90001a12:	4770      	bx	lr
90001a14:	40010000 	.word	0x40010000
90001a18:	00010007 	.word	0x00010007

90001a1c <HAL_TIM_OC_DelayElapsedCallback>:
90001a1c:	4770      	bx	lr

90001a1e <HAL_TIM_IC_CaptureCallback>:
90001a1e:	4770      	bx	lr

90001a20 <HAL_TIM_PWM_PulseFinishedCallback>:
90001a20:	4770      	bx	lr

90001a22 <HAL_TIM_TriggerCallback>:
90001a22:	4770      	bx	lr

90001a24 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
90001a24:	6803      	ldr	r3, [r0, #0]
90001a26:	691a      	ldr	r2, [r3, #16]
90001a28:	0791      	lsls	r1, r2, #30
{
90001a2a:	b510      	push	{r4, lr}
90001a2c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
90001a2e:	d50f      	bpl.n	90001a50 <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
90001a30:	68da      	ldr	r2, [r3, #12]
90001a32:	0792      	lsls	r2, r2, #30
90001a34:	d50c      	bpl.n	90001a50 <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
90001a36:	f06f 0202 	mvn.w	r2, #2
90001a3a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
90001a3c:	2201      	movs	r2, #1
90001a3e:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
90001a40:	699b      	ldr	r3, [r3, #24]
90001a42:	0799      	lsls	r1, r3, #30
90001a44:	f000 8085 	beq.w	90001b52 <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
90001a48:	f7ff ffe9 	bl	90001a1e <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90001a4c:	2300      	movs	r3, #0
90001a4e:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
90001a50:	6823      	ldr	r3, [r4, #0]
90001a52:	691a      	ldr	r2, [r3, #16]
90001a54:	0752      	lsls	r2, r2, #29
90001a56:	d510      	bpl.n	90001a7a <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
90001a58:	68da      	ldr	r2, [r3, #12]
90001a5a:	0750      	lsls	r0, r2, #29
90001a5c:	d50d      	bpl.n	90001a7a <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
90001a5e:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
90001a62:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
90001a64:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
90001a66:	2202      	movs	r2, #2
90001a68:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
90001a6a:	699b      	ldr	r3, [r3, #24]
90001a6c:	f413 7f40 	tst.w	r3, #768	; 0x300
90001a70:	d075      	beq.n	90001b5e <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
90001a72:	f7ff ffd4 	bl	90001a1e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90001a76:	2300      	movs	r3, #0
90001a78:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
90001a7a:	6823      	ldr	r3, [r4, #0]
90001a7c:	691a      	ldr	r2, [r3, #16]
90001a7e:	0711      	lsls	r1, r2, #28
90001a80:	d50f      	bpl.n	90001aa2 <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
90001a82:	68da      	ldr	r2, [r3, #12]
90001a84:	0712      	lsls	r2, r2, #28
90001a86:	d50c      	bpl.n	90001aa2 <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
90001a88:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
90001a8c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
90001a8e:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
90001a90:	2204      	movs	r2, #4
90001a92:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
90001a94:	69db      	ldr	r3, [r3, #28]
90001a96:	079b      	lsls	r3, r3, #30
90001a98:	d067      	beq.n	90001b6a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
90001a9a:	f7ff ffc0 	bl	90001a1e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90001a9e:	2300      	movs	r3, #0
90001aa0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
90001aa2:	6823      	ldr	r3, [r4, #0]
90001aa4:	691a      	ldr	r2, [r3, #16]
90001aa6:	06d0      	lsls	r0, r2, #27
90001aa8:	d510      	bpl.n	90001acc <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
90001aaa:	68da      	ldr	r2, [r3, #12]
90001aac:	06d1      	lsls	r1, r2, #27
90001aae:	d50d      	bpl.n	90001acc <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
90001ab0:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
90001ab4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
90001ab6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
90001ab8:	2208      	movs	r2, #8
90001aba:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
90001abc:	69db      	ldr	r3, [r3, #28]
90001abe:	f413 7f40 	tst.w	r3, #768	; 0x300
90001ac2:	d058      	beq.n	90001b76 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
90001ac4:	f7ff ffab 	bl	90001a1e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
90001ac8:	2300      	movs	r3, #0
90001aca:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
90001acc:	6823      	ldr	r3, [r4, #0]
90001ace:	691a      	ldr	r2, [r3, #16]
90001ad0:	07d2      	lsls	r2, r2, #31
90001ad2:	d508      	bpl.n	90001ae6 <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
90001ad4:	68da      	ldr	r2, [r3, #12]
90001ad6:	07d0      	lsls	r0, r2, #31
90001ad8:	d505      	bpl.n	90001ae6 <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
90001ada:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
90001ade:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
90001ae0:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
90001ae2:	f7fe fe62 	bl	900007aa <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
90001ae6:	6823      	ldr	r3, [r4, #0]
90001ae8:	691a      	ldr	r2, [r3, #16]
90001aea:	0611      	lsls	r1, r2, #24
90001aec:	d508      	bpl.n	90001b00 <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
90001aee:	68da      	ldr	r2, [r3, #12]
90001af0:	0612      	lsls	r2, r2, #24
90001af2:	d505      	bpl.n	90001b00 <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
90001af4:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
90001af8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
90001afa:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
90001afc:	f000 f8d9 	bl	90001cb2 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
90001b00:	6823      	ldr	r3, [r4, #0]
90001b02:	691a      	ldr	r2, [r3, #16]
90001b04:	05d0      	lsls	r0, r2, #23
90001b06:	d508      	bpl.n	90001b1a <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
90001b08:	68da      	ldr	r2, [r3, #12]
90001b0a:	0611      	lsls	r1, r2, #24
90001b0c:	d505      	bpl.n	90001b1a <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
90001b0e:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
90001b12:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
90001b14:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
90001b16:	f000 f8cd 	bl	90001cb4 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
90001b1a:	6823      	ldr	r3, [r4, #0]
90001b1c:	691a      	ldr	r2, [r3, #16]
90001b1e:	0652      	lsls	r2, r2, #25
90001b20:	d508      	bpl.n	90001b34 <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
90001b22:	68da      	ldr	r2, [r3, #12]
90001b24:	0650      	lsls	r0, r2, #25
90001b26:	d505      	bpl.n	90001b34 <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
90001b28:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
90001b2c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
90001b2e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
90001b30:	f7ff ff77 	bl	90001a22 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
90001b34:	6823      	ldr	r3, [r4, #0]
90001b36:	691a      	ldr	r2, [r3, #16]
90001b38:	0691      	lsls	r1, r2, #26
90001b3a:	d522      	bpl.n	90001b82 <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
90001b3c:	68da      	ldr	r2, [r3, #12]
90001b3e:	0692      	lsls	r2, r2, #26
90001b40:	d51f      	bpl.n	90001b82 <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
90001b42:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
90001b46:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
90001b48:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
90001b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
90001b4e:	f000 b8af 	b.w	90001cb0 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
90001b52:	f7ff ff63 	bl	90001a1c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
90001b56:	4620      	mov	r0, r4
90001b58:	f7ff ff62 	bl	90001a20 <HAL_TIM_PWM_PulseFinishedCallback>
90001b5c:	e776      	b.n	90001a4c <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
90001b5e:	f7ff ff5d 	bl	90001a1c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
90001b62:	4620      	mov	r0, r4
90001b64:	f7ff ff5c 	bl	90001a20 <HAL_TIM_PWM_PulseFinishedCallback>
90001b68:	e785      	b.n	90001a76 <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
90001b6a:	f7ff ff57 	bl	90001a1c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
90001b6e:	4620      	mov	r0, r4
90001b70:	f7ff ff56 	bl	90001a20 <HAL_TIM_PWM_PulseFinishedCallback>
90001b74:	e793      	b.n	90001a9e <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
90001b76:	f7ff ff51 	bl	90001a1c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
90001b7a:	4620      	mov	r0, r4
90001b7c:	f7ff ff50 	bl	90001a20 <HAL_TIM_PWM_PulseFinishedCallback>
90001b80:	e7a2      	b.n	90001ac8 <HAL_TIM_IRQHandler+0xa4>
}
90001b82:	bd10      	pop	{r4, pc}

90001b84 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
90001b84:	4a30      	ldr	r2, [pc, #192]	; (90001c48 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
90001b86:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
90001b88:	4290      	cmp	r0, r2
90001b8a:	d012      	beq.n	90001bb2 <TIM_Base_SetConfig+0x2e>
90001b8c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
90001b90:	d00f      	beq.n	90001bb2 <TIM_Base_SetConfig+0x2e>
90001b92:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
90001b96:	4290      	cmp	r0, r2
90001b98:	d00b      	beq.n	90001bb2 <TIM_Base_SetConfig+0x2e>
90001b9a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90001b9e:	4290      	cmp	r0, r2
90001ba0:	d007      	beq.n	90001bb2 <TIM_Base_SetConfig+0x2e>
90001ba2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90001ba6:	4290      	cmp	r0, r2
90001ba8:	d003      	beq.n	90001bb2 <TIM_Base_SetConfig+0x2e>
90001baa:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
90001bae:	4290      	cmp	r0, r2
90001bb0:	d119      	bne.n	90001be6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
90001bb2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
90001bb4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
90001bb8:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
90001bba:	4a23      	ldr	r2, [pc, #140]	; (90001c48 <TIM_Base_SetConfig+0xc4>)
90001bbc:	4290      	cmp	r0, r2
90001bbe:	d029      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001bc0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
90001bc4:	d026      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001bc6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
90001bca:	4290      	cmp	r0, r2
90001bcc:	d022      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001bce:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90001bd2:	4290      	cmp	r0, r2
90001bd4:	d01e      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001bd6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90001bda:	4290      	cmp	r0, r2
90001bdc:	d01a      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001bde:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
90001be2:	4290      	cmp	r0, r2
90001be4:	d016      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001be6:	4a19      	ldr	r2, [pc, #100]	; (90001c4c <TIM_Base_SetConfig+0xc8>)
90001be8:	4290      	cmp	r0, r2
90001bea:	d013      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001bec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90001bf0:	4290      	cmp	r0, r2
90001bf2:	d00f      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001bf4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90001bf8:	4290      	cmp	r0, r2
90001bfa:	d00b      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001bfc:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
90001c00:	4290      	cmp	r0, r2
90001c02:	d007      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001c04:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90001c08:	4290      	cmp	r0, r2
90001c0a:	d003      	beq.n	90001c14 <TIM_Base_SetConfig+0x90>
90001c0c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
90001c10:	4290      	cmp	r0, r2
90001c12:	d103      	bne.n	90001c1c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
90001c14:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
90001c18:	68ca      	ldr	r2, [r1, #12]
90001c1a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
90001c1c:	694a      	ldr	r2, [r1, #20]
90001c1e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90001c22:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
90001c24:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
90001c26:	688b      	ldr	r3, [r1, #8]
90001c28:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
90001c2a:	680b      	ldr	r3, [r1, #0]
90001c2c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
90001c2e:	4b06      	ldr	r3, [pc, #24]	; (90001c48 <TIM_Base_SetConfig+0xc4>)
90001c30:	4298      	cmp	r0, r3
90001c32:	d003      	beq.n	90001c3c <TIM_Base_SetConfig+0xb8>
90001c34:	f503 6380 	add.w	r3, r3, #1024	; 0x400
90001c38:	4298      	cmp	r0, r3
90001c3a:	d101      	bne.n	90001c40 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
90001c3c:	690b      	ldr	r3, [r1, #16]
90001c3e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
90001c40:	2301      	movs	r3, #1
90001c42:	6143      	str	r3, [r0, #20]
}
90001c44:	4770      	bx	lr
90001c46:	bf00      	nop
90001c48:	40010000 	.word	0x40010000
90001c4c:	40014000 	.word	0x40014000

90001c50 <HAL_TIM_Base_Init>:
{
90001c50:	b510      	push	{r4, lr}
  if (htim == NULL)
90001c52:	4604      	mov	r4, r0
90001c54:	b350      	cbz	r0, 90001cac <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
90001c56:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
90001c5a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90001c5e:	b91b      	cbnz	r3, 90001c68 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
90001c60:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
90001c64:	f7fe fd80 	bl	90000768 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
90001c68:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
90001c6a:	6820      	ldr	r0, [r4, #0]
90001c6c:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
90001c6e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
90001c72:	f7ff ff87 	bl	90001b84 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
90001c76:	2301      	movs	r3, #1
  return HAL_OK;
90001c78:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
90001c7a:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
90001c7e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
90001c82:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
90001c86:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90001c8a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
90001c8e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
90001c92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
90001c96:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
90001c9a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
90001c9e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
90001ca2:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
90001ca6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
90001caa:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90001cac:	2001      	movs	r0, #1
90001cae:	e7fc      	b.n	90001caa <HAL_TIM_Base_Init+0x5a>

90001cb0 <HAL_TIMEx_CommutCallback>:
90001cb0:	4770      	bx	lr

90001cb2 <HAL_TIMEx_BreakCallback>:
90001cb2:	4770      	bx	lr

90001cb4 <HAL_TIMEx_Break2Callback>:
90001cb4:	4770      	bx	lr
	...

90001cb8 <FMC_NORSRAM_Init>:
  assert_param(IS_FMC_CONTINOUS_CLOCK(Init->ContinuousClock));
  assert_param(IS_FMC_WRITE_FIFO(Init->WriteFifo));
  assert_param(IS_FMC_PAGESIZE(Init->PageSize));

  /* Disable NORSRAM Device */
  __FMC_NORSRAM_DISABLE(Device, Init->NSBank);
90001cb8:	680a      	ldr	r2, [r1, #0]
90001cba:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
90001cbe:	f023 0301 	bic.w	r3, r3, #1
{
90001cc2:	b5f0      	push	{r4, r5, r6, r7, lr}

  /* Set NORSRAM device control parameters */
  if (Init->MemoryType == FMC_MEMORY_TYPE_NOR)
90001cc4:	688d      	ldr	r5, [r1, #8]
  __FMC_NORSRAM_DISABLE(Device, Init->NSBank);
90001cc6:	f840 3022 	str.w	r3, [r0, r2, lsl #2]

  mask |= FMC_BCR1_CCLKEN;
  mask |= FMC_BCR1_WFDIS;
  mask |= FMC_BCR1_CPSIZE;

  MODIFY_REG(Device->BTCR[Init->NSBank], mask, btcr_reg);
90001cca:	684b      	ldr	r3, [r1, #4]
90001ccc:	68cf      	ldr	r7, [r1, #12]
90001cce:	432b      	orrs	r3, r5
90001cd0:	f850 c022 	ldr.w	ip, [r0, r2, lsl #2]
90001cd4:	433b      	orrs	r3, r7
90001cd6:	690f      	ldr	r7, [r1, #16]
90001cd8:	433b      	orrs	r3, r7
90001cda:	694f      	ldr	r7, [r1, #20]
90001cdc:	433b      	orrs	r3, r7
90001cde:	698f      	ldr	r7, [r1, #24]
90001ce0:	433b      	orrs	r3, r7
90001ce2:	69cf      	ldr	r7, [r1, #28]
90001ce4:	433b      	orrs	r3, r7
90001ce6:	6a0f      	ldr	r7, [r1, #32]
90001ce8:	433b      	orrs	r3, r7
90001cea:	6a4f      	ldr	r7, [r1, #36]	; 0x24
90001cec:	433b      	orrs	r3, r7
90001cee:	6a8f      	ldr	r7, [r1, #40]	; 0x28
90001cf0:	433b      	orrs	r3, r7
90001cf2:	6acf      	ldr	r7, [r1, #44]	; 0x2c
  btcr_reg |= Init->WriteFifo;
90001cf4:	e9d1 640c 	ldrd	r6, r4, [r1, #48]	; 0x30
  MODIFY_REG(Device->BTCR[Init->NSBank], mask, btcr_reg);
90001cf8:	433b      	orrs	r3, r7
90001cfa:	6b89      	ldr	r1, [r1, #56]	; 0x38
90001cfc:	4333      	orrs	r3, r6
90001cfe:	4323      	orrs	r3, r4
90001d00:	430b      	orrs	r3, r1
90001d02:	490e      	ldr	r1, [pc, #56]	; (90001d3c <FMC_NORSRAM_Init+0x84>)
90001d04:	ea01 010c 	and.w	r1, r1, ip
90001d08:	430b      	orrs	r3, r1
  if (Init->MemoryType == FMC_MEMORY_TYPE_NOR)
90001d0a:	f1a5 0108 	sub.w	r1, r5, #8
90001d0e:	424d      	negs	r5, r1
90001d10:	414d      	adcs	r5, r1

  /* Configure synchronous mode when Continuous clock is enabled for bank2..4 */
  if ((Init->ContinuousClock == FMC_CONTINUOUS_CLOCK_SYNC_ASYNC) && (Init->NSBank != FMC_NORSRAM_BANK1))
90001d12:	f5b6 1f80 	cmp.w	r6, #1048576	; 0x100000
  MODIFY_REG(Device->BTCR[Init->NSBank], mask, btcr_reg);
90001d16:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
90001d1a:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
  if ((Init->ContinuousClock == FMC_CONTINUOUS_CLOCK_SYNC_ASYNC) && (Init->NSBank != FMC_NORSRAM_BANK1))
90001d1e:	d108      	bne.n	90001d32 <FMC_NORSRAM_Init+0x7a>
90001d20:	b14a      	cbz	r2, 90001d36 <FMC_NORSRAM_Init+0x7e>
  {
    MODIFY_REG(Device->BTCR[FMC_NORSRAM_BANK1], FMC_BCR1_CCLKEN, Init->ContinuousClock);
90001d22:	6803      	ldr	r3, [r0, #0]
90001d24:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
90001d28:	6003      	str	r3, [r0, #0]
  }

  if (Init->NSBank != FMC_NORSRAM_BANK1)
  {
    /* Configure Write FIFO mode when Write Fifo is enabled for bank2..4 */
    SET_BIT(Device->BTCR[FMC_NORSRAM_BANK1], (uint32_t)(Init->WriteFifo));
90001d2a:	6803      	ldr	r3, [r0, #0]
90001d2c:	431c      	orrs	r4, r3
90001d2e:	6004      	str	r4, [r0, #0]
90001d30:	e001      	b.n	90001d36 <FMC_NORSRAM_Init+0x7e>
  if (Init->NSBank != FMC_NORSRAM_BANK1)
90001d32:	2a00      	cmp	r2, #0
90001d34:	d1f9      	bne.n	90001d2a <FMC_NORSRAM_Init+0x72>
  }

  return HAL_OK;
}
90001d36:	2000      	movs	r0, #0
90001d38:	bdf0      	pop	{r4, r5, r6, r7, pc}
90001d3a:	bf00      	nop
90001d3c:	ffc00480 	.word	0xffc00480

90001d40 <FMC_NORSRAM_Timing_Init>:
  * @param  Bank NORSRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_NORSRAM_Timing_Init(FMC_NORSRAM_TypeDef *Device,
                                          FMC_NORSRAM_TimingTypeDef *Timing, uint32_t Bank)
{
90001d40:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_DATA_LATENCY(Timing->DataLatency));
  assert_param(IS_FMC_ACCESS_MODE(Timing->AccessMode));
  assert_param(IS_FMC_NORSRAM_BANK(Bank));

  /* Set FMC_NORSRAM device timing parameters */
  MODIFY_REG(Device->BTCR[Bank + 1U], BTR_CLEAR_MASK, (Timing->AddressSetupTime                                  |
90001d42:	680b      	ldr	r3, [r1, #0]
90001d44:	eb00 0282 	add.w	r2, r0, r2, lsl #2
90001d48:	698f      	ldr	r7, [r1, #24]
90001d4a:	690d      	ldr	r5, [r1, #16]
90001d4c:	433b      	orrs	r3, r7
90001d4e:	684f      	ldr	r7, [r1, #4]
90001d50:	3d01      	subs	r5, #1
90001d52:	6856      	ldr	r6, [r2, #4]
90001d54:	ea43 1307 	orr.w	r3, r3, r7, lsl #4
90001d58:	688f      	ldr	r7, [r1, #8]
90001d5a:	052c      	lsls	r4, r5, #20
90001d5c:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
90001d60:	68cf      	ldr	r7, [r1, #12]
90001d62:	6949      	ldr	r1, [r1, #20]
90001d64:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
90001d68:	3902      	subs	r1, #2
90001d6a:	ea43 5305 	orr.w	r3, r3, r5, lsl #20
90001d6e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001d72:	f006 4140 	and.w	r1, r6, #3221225472	; 0xc0000000
90001d76:	430b      	orrs	r3, r1
90001d78:	6053      	str	r3, [r2, #4]
                                                       (((Timing->CLKDivision) - 1U)     << FMC_BTR1_CLKDIV_Pos)  |
                                                       (((Timing->DataLatency) - 2U)     << FMC_BTR1_DATLAT_Pos)  |
                                                       (Timing->AccessMode)));

  /* Configure Clock division value (in NORSRAM bank 1) when continuous clock is enabled */
  if (HAL_IS_BIT_SET(Device->BTCR[FMC_NORSRAM_BANK1], FMC_BCR1_CCLKEN))
90001d7a:	6803      	ldr	r3, [r0, #0]
90001d7c:	02db      	lsls	r3, r3, #11
90001d7e:	d508      	bpl.n	90001d92 <FMC_NORSRAM_Timing_Init+0x52>
  {
    tmpr = (uint32_t)(Device->BTCR[FMC_NORSRAM_BANK1 + 1U] & ~((0x0FU) << FMC_BTR1_CLKDIV_Pos));
90001d80:	6842      	ldr	r2, [r0, #4]
    tmpr |= (uint32_t)(((Timing->CLKDivision) - 1U) << FMC_BTR1_CLKDIV_Pos);
    MODIFY_REG(Device->BTCR[FMC_NORSRAM_BANK1 + 1U], FMC_BTR1_CLKDIV, tmpr);
90001d82:	6843      	ldr	r3, [r0, #4]
    tmpr = (uint32_t)(Device->BTCR[FMC_NORSRAM_BANK1 + 1U] & ~((0x0FU) << FMC_BTR1_CLKDIV_Pos));
90001d84:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
    MODIFY_REG(Device->BTCR[FMC_NORSRAM_BANK1 + 1U], FMC_BTR1_CLKDIV, tmpr);
90001d88:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
    tmpr |= (uint32_t)(((Timing->CLKDivision) - 1U) << FMC_BTR1_CLKDIV_Pos);
90001d8c:	4314      	orrs	r4, r2
    MODIFY_REG(Device->BTCR[FMC_NORSRAM_BANK1 + 1U], FMC_BTR1_CLKDIV, tmpr);
90001d8e:	4323      	orrs	r3, r4
90001d90:	6043      	str	r3, [r0, #4]
  }

  return HAL_OK;
}
90001d92:	2000      	movs	r0, #0
90001d94:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90001d98 <FMC_NORSRAM_Extended_Timing_Init>:
{
  /* Check the parameters */
  assert_param(IS_FMC_EXTENDED_MODE(ExtendedMode));

  /* Set NORSRAM device timing register for write configuration, if extended mode is used */
  if (ExtendedMode == FMC_EXTENDED_MODE_ENABLE)
90001d98:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
{
90001d9c:	b530      	push	{r4, r5, lr}
  if (ExtendedMode == FMC_EXTENDED_MODE_ENABLE)
90001d9e:	d114      	bne.n	90001dca <FMC_NORSRAM_Extended_Timing_Init+0x32>
    assert_param(IS_FMC_TURNAROUND_TIME(Timing->BusTurnAroundDuration));
    assert_param(IS_FMC_ACCESS_MODE(Timing->AccessMode));
    assert_param(IS_FMC_NORSRAM_BANK(Bank));

    /* Set NORSRAM device timing register for write configuration, if extended mode is used */
    MODIFY_REG(Device->BWTR[Bank], BWTR_CLEAR_MASK, (Timing->AddressSetupTime                                    |
90001da0:	698d      	ldr	r5, [r1, #24]
90001da2:	680b      	ldr	r3, [r1, #0]
90001da4:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
90001da8:	432b      	orrs	r3, r5
90001daa:	684d      	ldr	r5, [r1, #4]
90001dac:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
90001db0:	688d      	ldr	r5, [r1, #8]
90001db2:	68c9      	ldr	r1, [r1, #12]
90001db4:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
90001db8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90001dbc:	4904      	ldr	r1, [pc, #16]	; (90001dd0 <FMC_NORSRAM_Extended_Timing_Init+0x38>)
90001dbe:	4021      	ands	r1, r4
90001dc0:	430b      	orrs	r3, r1
                                                     Timing->AccessMode                                          |
                                                     ((Timing->BusTurnAroundDuration)  << FMC_BWTR1_BUSTURN_Pos)));
  }
  else
  {
    Device->BWTR[Bank] = 0x0FFFFFFFU;
90001dc2:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
  }

  return HAL_OK;
}
90001dc6:	2000      	movs	r0, #0
90001dc8:	bd30      	pop	{r4, r5, pc}
    Device->BWTR[Bank] = 0x0FFFFFFFU;
90001dca:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
90001dce:	e7f8      	b.n	90001dc2 <FMC_NORSRAM_Extended_Timing_Init+0x2a>
90001dd0:	cff00000 	.word	0xcff00000

90001dd4 <GUI_X_Config>:
void GUI_X_Config(void) 
{
  //
  // Assign memory to STemWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
90001dd4:	f44f 3116 	mov.w	r1, #153600	; 0x25800
90001dd8:	4801      	ldr	r0, [pc, #4]	; (90001de0 <GUI_X_Config+0xc>)
90001dda:	f000 ba15 	b.w	90002208 <GUI_ALLOC_AssignMemory>
90001dde:	bf00      	nop
90001de0:	2000014c 	.word	0x2000014c

90001de4 <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
90001de4:	4770      	bx	lr

90001de6 <LcdWriteReg>:
  * @retval None
  */
static void STM_FSMC_BANK1_WriteReg(uint8_t Reg) 
{ 
  /* Write 16-bit Index, then write register */
  FMC_BANK2->REG = Reg;  
90001de6:	b2c0      	uxtb	r0, r0
90001de8:	f04f 43c8 	mov.w	r3, #1677721600	; 0x64000000
90001dec:	8018      	strh	r0, [r3, #0]
  __ASM volatile ("dsb 0xF":::"memory");
90001dee:	f3bf 8f4f 	dsb	sy
90001df2:	f3bf 8f4f 	dsb	sy
}
90001df6:	4770      	bx	lr

90001df8 <LcdWriteData>:
  FMC_BANK2->RAM = Data;  
90001df8:	f04f 43c8 	mov.w	r3, #1677721600	; 0x64000000
90001dfc:	8058      	strh	r0, [r3, #2]
90001dfe:	f3bf 8f4f 	dsb	sy
90001e02:	f3bf 8f4f 	dsb	sy
}
90001e06:	4770      	bx	lr

90001e08 <LcdWriteDataMultiple>:
  while (NumItems--) 
90001e08:	2300      	movs	r3, #0
  FMC_BANK2->RAM = Data;  
90001e0a:	f04f 42c8 	mov.w	r2, #1677721600	; 0x64000000
{
90001e0e:	b510      	push	{r4, lr}
  while (NumItems--) 
90001e10:	428b      	cmp	r3, r1
90001e12:	d100      	bne.n	90001e16 <LcdWriteDataMultiple+0xe>
}
90001e14:	bd10      	pop	{r4, pc}
    STM_FSMC_BANK1_WriteData(*pData++);
90001e16:	f830 4013 	ldrh.w	r4, [r0, r3, lsl #1]
  FMC_BANK2->RAM = Data;  
90001e1a:	8054      	strh	r4, [r2, #2]
90001e1c:	f3bf 8f4f 	dsb	sy
90001e20:	f3bf 8f4f 	dsb	sy
90001e24:	3301      	adds	r3, #1
}
90001e26:	e7f3      	b.n	90001e10 <LcdWriteDataMultiple+0x8>

90001e28 <LcdReadDataMultiple>:
  while (NumItems--) 
90001e28:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  * @param  None
  * @retval Read value
  */
static uint16_t STM_FSMC_BANK1_ReadData(void) 
{
  return FMC_BANK2->RAM;  
90001e2c:	f04f 43c8 	mov.w	r3, #1677721600	; 0x64000000
  while (NumItems--) 
90001e30:	4288      	cmp	r0, r1
90001e32:	d100      	bne.n	90001e36 <LcdReadDataMultiple+0xe>
}
90001e34:	4770      	bx	lr
  return FMC_BANK2->RAM;  
90001e36:	885a      	ldrh	r2, [r3, #2]
    *pData++ = STM_FSMC_BANK1_ReadData();
90001e38:	f820 2b02 	strh.w	r2, [r0], #2
90001e3c:	e7f8      	b.n	90001e30 <LcdReadDataMultiple+0x8>

90001e3e <LCD_LL_Init>:
  BSP_LCD_InitEx(LCD_ORIENTATION_LANDSCAPE_ROT180);  
90001e3e:	2002      	movs	r0, #2
90001e40:	f7ff b85c 	b.w	90000efc <BSP_LCD_InitEx>

90001e44 <LCD_X_Config>:
{
90001e44:	b510      	push	{r4, lr}
90001e46:	b0a0      	sub	sp, #128	; 0x80
  CONFIG_FLEXCOLOR Config = {0};
90001e48:	2214      	movs	r2, #20
90001e4a:	2100      	movs	r1, #0
90001e4c:	a801      	add	r0, sp, #4
90001e4e:	f005 faab 	bl	900073a8 <memset>
  GUI_PORT_API PortAPI = {0};
90001e52:	2268      	movs	r2, #104	; 0x68
90001e54:	2100      	movs	r1, #0
90001e56:	a806      	add	r0, sp, #24
90001e58:	f005 faa6 	bl	900073a8 <memset>
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
90001e5c:	2300      	movs	r3, #0
90001e5e:	4912      	ldr	r1, [pc, #72]	; (90001ea8 <LCD_X_Config+0x64>)
90001e60:	461a      	mov	r2, r3
90001e62:	4812      	ldr	r0, [pc, #72]	; (90001eac <LCD_X_Config+0x68>)
90001e64:	f000 fe88 	bl	90002b78 <GUI_DEVICE_CreateAndLink>
  Config.Orientation = GUI_MIRROR_Y | GUI_MIRROR_X; 
90001e68:	2303      	movs	r3, #3
  GUIDRV_FlexColor_Config(pDevice, &Config);
90001e6a:	a901      	add	r1, sp, #4
  pDevice = GUI_DEVICE_CreateAndLink(GUIDRV_FLEXCOLOR, GUICC_M565, 0, 0);
90001e6c:	4604      	mov	r4, r0
  Config.Orientation = GUI_MIRROR_Y | GUI_MIRROR_X; 
90001e6e:	9303      	str	r3, [sp, #12]
  GUIDRV_FlexColor_Config(pDevice, &Config);
90001e70:	f002 f837 	bl	90003ee2 <GUIDRV_FlexColor_Config>
  LCD_SetSizeEx (0, XSIZE_PHYS , YSIZE_PHYS);
90001e74:	22f0      	movs	r2, #240	; 0xf0
90001e76:	2000      	movs	r0, #0
90001e78:	4611      	mov	r1, r2
90001e7a:	f001 fd19 	bl	900038b0 <LCD_SetSizeEx>
  LCD_SetVSizeEx(0, VXSIZE_PHYS, VYSIZE_PHYS);
90001e7e:	22f0      	movs	r2, #240	; 0xf0
90001e80:	2000      	movs	r0, #0
90001e82:	4611      	mov	r1, r2
90001e84:	f001 fd2c 	bl	900038e0 <LCD_SetVSizeEx>
  PortAPI.pfWrite16_A0  = LcdWriteReg;
90001e88:	4b09      	ldr	r3, [pc, #36]	; (90001eb0 <LCD_X_Config+0x6c>)
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B16);
90001e8a:	4a0a      	ldr	r2, [pc, #40]	; (90001eb4 <LCD_X_Config+0x70>)
90001e8c:	a906      	add	r1, sp, #24
  PortAPI.pfWrite16_A0  = LcdWriteReg;
90001e8e:	930e      	str	r3, [sp, #56]	; 0x38
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B16);
90001e90:	4620      	mov	r0, r4
  PortAPI.pfWrite16_A1  = LcdWriteData;
90001e92:	4b09      	ldr	r3, [pc, #36]	; (90001eb8 <LCD_X_Config+0x74>)
90001e94:	930f      	str	r3, [sp, #60]	; 0x3c
  PortAPI.pfWriteM16_A1 = LcdWriteDataMultiple;
90001e96:	4b09      	ldr	r3, [pc, #36]	; (90001ebc <LCD_X_Config+0x78>)
90001e98:	9311      	str	r3, [sp, #68]	; 0x44
  PortAPI.pfReadM16_A1  = LcdReadDataMultiple;
90001e9a:	4b09      	ldr	r3, [pc, #36]	; (90001ec0 <LCD_X_Config+0x7c>)
90001e9c:	9315      	str	r3, [sp, #84]	; 0x54
  GUIDRV_FlexColor_SetFunc(pDevice, &PortAPI, GUIDRV_FLEXCOLOR_F66709, GUIDRV_FLEXCOLOR_M16C0B16);
90001e9e:	4b09      	ldr	r3, [pc, #36]	; (90001ec4 <LCD_X_Config+0x80>)
90001ea0:	f002 f83d 	bl	90003f1e <GUIDRV_FlexColor_SetFunc>
}
90001ea4:	b020      	add	sp, #128	; 0x80
90001ea6:	bd10      	pop	{r4, pc}
90001ea8:	9000b128 	.word	0x9000b128
90001eac:	9000b524 	.word	0x9000b524
90001eb0:	90001de7 	.word	0x90001de7
90001eb4:	90004929 	.word	0x90004929
90001eb8:	90001df9 	.word	0x90001df9
90001ebc:	90001e09 	.word	0x90001e09
90001ec0:	90001e29 	.word	0x90001e29
90001ec4:	90004589 	.word	0x90004589

90001ec8 <LCD_X_DisplayDriver>:
  switch (Cmd) {
90001ec8:	2901      	cmp	r1, #1
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) {
90001eca:	b508      	push	{r3, lr}
  switch (Cmd) {
90001ecc:	d103      	bne.n	90001ed6 <LCD_X_DisplayDriver+0xe>
    LCD_LL_Init();
90001ece:	f7ff ffb6 	bl	90001e3e <LCD_LL_Init>
    return 0;
90001ed2:	2000      	movs	r0, #0
}
90001ed4:	bd08      	pop	{r3, pc}
  return r;
90001ed6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
90001eda:	e7fb      	b.n	90001ed4 <LCD_X_DisplayDriver+0xc>

90001edc <LCD_Index2Color_M565>:
90001edc:	f000 011f 	and.w	r1, r0, #31
90001ee0:	4a06      	ldr	r2, [pc, #24]	; (90001efc <LCD_Index2Color_M565+0x20>)
90001ee2:	f3c0 23c4 	ubfx	r3, r0, #11, #5
90001ee6:	f3c0 1045 	ubfx	r0, r0, #5, #6
90001eea:	5cd3      	ldrb	r3, [r2, r3]
90001eec:	5c52      	ldrb	r2, [r2, r1]
90001eee:	eb03 4302 	add.w	r3, r3, r2, lsl #16
90001ef2:	4a03      	ldr	r2, [pc, #12]	; (90001f00 <LCD_Index2Color_M565+0x24>)
90001ef4:	5c10      	ldrb	r0, [r2, r0]
90001ef6:	eb03 2000 	add.w	r0, r3, r0, lsl #8
90001efa:	4770      	bx	lr
90001efc:	9000b4a8 	.word	0x9000b4a8
90001f00:	9000b468 	.word	0x9000b468

90001f04 <_Color2Index_M565>:
90001f04:	b2c1      	uxtb	r1, r0
90001f06:	4a07      	ldr	r2, [pc, #28]	; (90001f24 <_Color2Index_M565+0x20>)
90001f08:	f3c0 4307 	ubfx	r3, r0, #16, #8
90001f0c:	f3c0 2007 	ubfx	r0, r0, #8, #8
90001f10:	5cd3      	ldrb	r3, [r2, r3]
90001f12:	5c52      	ldrb	r2, [r2, r1]
90001f14:	eb03 23c2 	add.w	r3, r3, r2, lsl #11
90001f18:	4a03      	ldr	r2, [pc, #12]	; (90001f28 <_Color2Index_M565+0x24>)
90001f1a:	5c10      	ldrb	r0, [r2, r0]
90001f1c:	eb03 1040 	add.w	r0, r3, r0, lsl #5
90001f20:	4770      	bx	lr
90001f22:	bf00      	nop
90001f24:	9000b268 	.word	0x9000b268
90001f28:	9000b168 	.word	0x9000b168

90001f2c <_GetIndexMask_M565>:
90001f2c:	f64f 70ff 	movw	r0, #65535	; 0xffff
90001f30:	4770      	bx	lr
	...

90001f34 <_Color2IndexBulk>:
90001f34:	b5f0      	push	{r4, r5, r6, r7, lr}
90001f36:	f8df e054 	ldr.w	lr, [pc, #84]	; 90001f8c <_Color2IndexBulk+0x58>
90001f3a:	4606      	mov	r6, r0
90001f3c:	460d      	mov	r5, r1
90001f3e:	4614      	mov	r4, r2
90001f40:	f8de e000 	ldr.w	lr, [lr]
90001f44:	461f      	mov	r7, r3
90001f46:	f1be 0f00 	cmp.w	lr, #0
90001f4a:	d003      	beq.n	90001f54 <_Color2IndexBulk+0x20>
90001f4c:	46f4      	mov	ip, lr
90001f4e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90001f52:	4760      	bx	ip
90001f54:	490b      	ldr	r1, [pc, #44]	; (90001f84 <_Color2IndexBulk+0x50>)
90001f56:	480c      	ldr	r0, [pc, #48]	; (90001f88 <_Color2IndexBulk+0x54>)
90001f58:	f856 2b04 	ldr.w	r2, [r6], #4
90001f5c:	3c01      	subs	r4, #1
90001f5e:	f3c2 4307 	ubfx	r3, r2, #16, #8
90001f62:	fa5f fe82 	uxtb.w	lr, r2
90001f66:	f3c2 2207 	ubfx	r2, r2, #8, #8
90001f6a:	5ccb      	ldrb	r3, [r1, r3]
90001f6c:	f811 e00e 	ldrb.w	lr, [r1, lr]
90001f70:	5c82      	ldrb	r2, [r0, r2]
90001f72:	eb03 23ce 	add.w	r3, r3, lr, lsl #11
90001f76:	eb03 1342 	add.w	r3, r3, r2, lsl #5
90001f7a:	802b      	strh	r3, [r5, #0]
90001f7c:	443d      	add	r5, r7
90001f7e:	d1eb      	bne.n	90001f58 <_Color2IndexBulk+0x24>
90001f80:	bdf0      	pop	{r4, r5, r6, r7, pc}
90001f82:	bf00      	nop
90001f84:	9000b268 	.word	0x9000b268
90001f88:	9000b168 	.word	0x9000b168
90001f8c:	20025950 	.word	0x20025950

90001f90 <_Index2ColorBulk>:
90001f90:	b5f0      	push	{r4, r5, r6, r7, lr}
90001f92:	4e15      	ldr	r6, [pc, #84]	; (90001fe8 <_Index2ColorBulk+0x58>)
90001f94:	4686      	mov	lr, r0
90001f96:	460f      	mov	r7, r1
90001f98:	4614      	mov	r4, r2
90001f9a:	6876      	ldr	r6, [r6, #4]
90001f9c:	461d      	mov	r5, r3
90001f9e:	b11e      	cbz	r6, 90001fa8 <_Index2ColorBulk+0x18>
90001fa0:	46b4      	mov	ip, r6
90001fa2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90001fa6:	4760      	bx	ip
90001fa8:	f102 4180 	add.w	r1, r2, #1073741824	; 0x40000000
90001fac:	1e50      	subs	r0, r2, #1
90001fae:	4e0f      	ldr	r6, [pc, #60]	; (90001fec <_Index2ColorBulk+0x5c>)
90001fb0:	3901      	subs	r1, #1
90001fb2:	fb03 e000 	mla	r0, r3, r0, lr
90001fb6:	eb07 0181 	add.w	r1, r7, r1, lsl #2
90001fba:	4f0d      	ldr	r7, [pc, #52]	; (90001ff0 <_Index2ColorBulk+0x60>)
90001fbc:	8802      	ldrh	r2, [r0, #0]
90001fbe:	3c01      	subs	r4, #1
90001fc0:	eba0 0005 	sub.w	r0, r0, r5
90001fc4:	f002 031f 	and.w	r3, r2, #31
90001fc8:	f816 e003 	ldrb.w	lr, [r6, r3]
90001fcc:	ea4f 23d2 	mov.w	r3, r2, lsr #11
90001fd0:	f3c2 1245 	ubfx	r2, r2, #5, #6
90001fd4:	5cf3      	ldrb	r3, [r6, r3]
90001fd6:	5cba      	ldrb	r2, [r7, r2]
90001fd8:	eb03 430e 	add.w	r3, r3, lr, lsl #16
90001fdc:	eb03 2302 	add.w	r3, r3, r2, lsl #8
90001fe0:	f841 3904 	str.w	r3, [r1], #-4
90001fe4:	d1ea      	bne.n	90001fbc <_Index2ColorBulk+0x2c>
90001fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
90001fe8:	20025950 	.word	0x20025950
90001fec:	9000b4a8 	.word	0x9000b4a8
90001ff0:	9000b468 	.word	0x9000b468

90001ff4 <_PushFreeBlock>:
90001ff4:	4b07      	ldr	r3, [pc, #28]	; (90002014 <_PushFreeBlock+0x20>)
90001ff6:	685a      	ldr	r2, [r3, #4]
90001ff8:	3201      	adds	r2, #1
90001ffa:	b510      	push	{r4, lr}
90001ffc:	605a      	str	r2, [r3, #4]
90001ffe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90002000:	6a5c      	ldr	r4, [r3, #36]	; 0x24
90002002:	eb02 01c0 	add.w	r1, r2, r0, lsl #3
90002006:	604c      	str	r4, [r1, #4]
90002008:	2100      	movs	r1, #0
9000200a:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
9000200e:	6258      	str	r0, [r3, #36]	; 0x24
90002010:	bd10      	pop	{r4, pc}
90002012:	bf00      	nop
90002014:	20025af4 	.word	0x20025af4

90002018 <_RemoveFreeBlock>:
90002018:	b510      	push	{r4, lr}
9000201a:	230f      	movs	r3, #15
9000201c:	6844      	ldr	r4, [r0, #4]
9000201e:	490d      	ldr	r1, [pc, #52]	; (90002054 <_RemoveFreeBlock+0x3c>)
90002020:	eb01 02c3 	add.w	r2, r1, r3, lsl #3
90002024:	6c12      	ldr	r2, [r2, #64]	; 0x40
90002026:	4294      	cmp	r4, r2
90002028:	4a0a      	ldr	r2, [pc, #40]	; (90002054 <_RemoveFreeBlock+0x3c>)
9000202a:	d203      	bcs.n	90002034 <_RemoveFreeBlock+0x1c>
9000202c:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
90002030:	d2f6      	bcs.n	90002020 <_RemoveFreeBlock+0x8>
90002032:	bd10      	pop	{r4, pc}
90002034:	2b0f      	cmp	r3, #15
90002036:	d80c      	bhi.n	90002052 <_RemoveFreeBlock+0x3a>
90002038:	6811      	ldr	r1, [r2, #0]
9000203a:	1b09      	subs	r1, r1, r4
9000203c:	6011      	str	r1, [r2, #0]
9000203e:	6881      	ldr	r1, [r0, #8]
90002040:	68c0      	ldr	r0, [r0, #12]
90002042:	b101      	cbz	r1, 90002046 <_RemoveFreeBlock+0x2e>
90002044:	6048      	str	r0, [r1, #4]
90002046:	b108      	cbz	r0, 9000204c <_RemoveFreeBlock+0x34>
90002048:	6001      	str	r1, [r0, #0]
9000204a:	bd10      	pop	{r4, pc}
9000204c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
90002050:	6459      	str	r1, [r3, #68]	; 0x44
90002052:	bd10      	pop	{r4, pc}
90002054:	20025af4 	.word	0x20025af4

90002058 <_AddFreeMemory>:
90002058:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000205a:	4e27      	ldr	r6, [pc, #156]	; (900020f8 <_AddFreeMemory+0xa0>)
9000205c:	4605      	mov	r5, r0
9000205e:	1808      	adds	r0, r1, r0
90002060:	460c      	mov	r4, r1
90002062:	68f3      	ldr	r3, [r6, #12]
90002064:	6bb2      	ldr	r2, [r6, #56]	; 0x38
90002066:	3b01      	subs	r3, #1
90002068:	4413      	add	r3, r2
9000206a:	4283      	cmp	r3, r0
9000206c:	d305      	bcc.n	9000207a <_AddFreeMemory+0x22>
9000206e:	594b      	ldr	r3, [r1, r5]
90002070:	b91b      	cbnz	r3, 9000207a <_AddFreeMemory+0x22>
90002072:	6843      	ldr	r3, [r0, #4]
90002074:	441d      	add	r5, r3
90002076:	f7ff ffcf 	bl	90002018 <_RemoveFreeBlock>
9000207a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
9000207c:	429c      	cmp	r4, r3
9000207e:	d90a      	bls.n	90002096 <_AddFreeMemory+0x3e>
90002080:	f854 7c04 	ldr.w	r7, [r4, #-4]
90002084:	1be7      	subs	r7, r4, r7
90002086:	683b      	ldr	r3, [r7, #0]
90002088:	b92b      	cbnz	r3, 90002096 <_AddFreeMemory+0x3e>
9000208a:	687b      	ldr	r3, [r7, #4]
9000208c:	463c      	mov	r4, r7
9000208e:	4638      	mov	r0, r7
90002090:	441d      	add	r5, r3
90002092:	f7ff ffc1 	bl	90002018 <_RemoveFreeBlock>
90002096:	230f      	movs	r3, #15
90002098:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
9000209c:	6c12      	ldr	r2, [r2, #64]	; 0x40
9000209e:	4295      	cmp	r5, r2
900020a0:	d203      	bcs.n	900020aa <_AddFreeMemory+0x52>
900020a2:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
900020a6:	d2f7      	bcs.n	90002098 <_AddFreeMemory+0x40>
900020a8:	e023      	b.n	900020f2 <_AddFreeMemory+0x9a>
900020aa:	2b0f      	cmp	r3, #15
900020ac:	d821      	bhi.n	900020f2 <_AddFreeMemory+0x9a>
900020ae:	3308      	adds	r3, #8
900020b0:	1960      	adds	r0, r4, r5
900020b2:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
900020b6:	6851      	ldr	r1, [r2, #4]
900020b8:	2200      	movs	r2, #0
900020ba:	6124      	str	r4, [r4, #16]
900020bc:	60a1      	str	r1, [r4, #8]
900020be:	e884 0024 	stmia.w	r4, {r2, r5}
900020c2:	f840 5c04 	str.w	r5, [r0, #-4]
900020c6:	f104 0008 	add.w	r0, r4, #8
900020ca:	b101      	cbz	r1, 900020ce <_AddFreeMemory+0x76>
900020cc:	6048      	str	r0, [r1, #4]
900020ce:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
900020d2:	60a1      	str	r1, [r4, #8]
900020d4:	60e2      	str	r2, [r4, #12]
900020d6:	6058      	str	r0, [r3, #4]
900020d8:	6833      	ldr	r3, [r6, #0]
900020da:	4907      	ldr	r1, [pc, #28]	; (900020f8 <_AddFreeMemory+0xa0>)
900020dc:	18ea      	adds	r2, r5, r3
900020de:	f896 3029 	ldrb.w	r3, [r6, #41]	; 0x29
900020e2:	6032      	str	r2, [r6, #0]
900020e4:	b92b      	cbnz	r3, 900020f2 <_AddFreeMemory+0x9a>
900020e6:	68cb      	ldr	r3, [r1, #12]
900020e8:	1a9b      	subs	r3, r3, r2
900020ea:	688a      	ldr	r2, [r1, #8]
900020ec:	4293      	cmp	r3, r2
900020ee:	bf88      	it	hi
900020f0:	608b      	strhi	r3, [r1, #8]
900020f2:	4628      	mov	r0, r5
900020f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900020f6:	bf00      	nop
900020f8:	20025af4 	.word	0x20025af4

900020fc <_RemoveHoles>:
900020fc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90002100:	4f23      	ldr	r7, [pc, #140]	; (90002190 <_RemoveHoles+0x94>)
90002102:	4683      	mov	fp, r0
90002104:	68fe      	ldr	r6, [r7, #12]
90002106:	46b8      	mov	r8, r7
90002108:	6bbc      	ldr	r4, [r7, #56]	; 0x38
9000210a:	3e01      	subs	r6, #1
9000210c:	4426      	add	r6, r4
9000210e:	e894 0028 	ldmia.w	r4, {r3, r5}
90002112:	bb9b      	cbnz	r3, 9000217c <_RemoveHoles+0x80>
90002114:	1961      	adds	r1, r4, r5
90002116:	428e      	cmp	r6, r1
90002118:	d930      	bls.n	9000217c <_RemoveHoles+0x80>
9000211a:	f854 a005 	ldr.w	sl, [r4, r5]
9000211e:	f1ba 0f00 	cmp.w	sl, #0
90002122:	d02b      	beq.n	9000217c <_RemoveHoles+0x80>
90002124:	6b7b      	ldr	r3, [r7, #52]	; 0x34
90002126:	f813 303a 	ldrb.w	r3, [r3, sl, lsl #3]
9000212a:	2b01      	cmp	r3, #1
9000212c:	d126      	bne.n	9000217c <_RemoveHoles+0x80>
9000212e:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
90002132:	4620      	mov	r0, r4
90002134:	f8d1 9004 	ldr.w	r9, [r1, #4]
90002138:	9300      	str	r3, [sp, #0]
9000213a:	9101      	str	r1, [sp, #4]
9000213c:	f7ff ff6c 	bl	90002018 <_RemoveFreeBlock>
90002140:	9901      	ldr	r1, [sp, #4]
90002142:	f8d8 2034 	ldr.w	r2, [r8, #52]	; 0x34
90002146:	6808      	ldr	r0, [r1, #0]
90002148:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
9000214c:	4620      	mov	r0, r4
9000214e:	6054      	str	r4, [r2, #4]
90002150:	464a      	mov	r2, r9
90002152:	f005 f90f 	bl	90007374 <memmove>
90002156:	9b00      	ldr	r3, [sp, #0]
90002158:	eb04 0109 	add.w	r1, r4, r9
9000215c:	4628      	mov	r0, r5
9000215e:	459a      	cmp	sl, r3
90002160:	bf02      	ittt	eq
90002162:	f8d8 3034 	ldreq.w	r3, [r8, #52]	; 0x34
90002166:	1b5b      	subeq	r3, r3, r5
90002168:	f8c8 3034 	streq.w	r3, [r8, #52]	; 0x34
9000216c:	f7ff ff74 	bl	90002058 <_AddFreeMemory>
90002170:	f1bb 0f00 	cmp.w	fp, #0
90002174:	d001      	beq.n	9000217a <_RemoveHoles+0x7e>
90002176:	4558      	cmp	r0, fp
90002178:	d205      	bcs.n	90002186 <_RemoveHoles+0x8a>
9000217a:	464d      	mov	r5, r9
9000217c:	442c      	add	r4, r5
9000217e:	42a6      	cmp	r6, r4
90002180:	d8c5      	bhi.n	9000210e <_RemoveHoles+0x12>
90002182:	2001      	movs	r0, #1
90002184:	e000      	b.n	90002188 <_RemoveHoles+0x8c>
90002186:	2000      	movs	r0, #0
90002188:	b003      	add	sp, #12
9000218a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000218e:	bf00      	nop
90002190:	20025af4 	.word	0x20025af4

90002194 <GUI_ALLOC_FreeFixedBlock>:
90002194:	b128      	cbz	r0, 900021a2 <GUI_ALLOC_FreeFixedBlock+0xe>
90002196:	4b03      	ldr	r3, [pc, #12]	; (900021a4 <GUI_ALLOC_FreeFixedBlock+0x10>)
90002198:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000219a:	6002      	str	r2, [r0, #0]
9000219c:	b102      	cbz	r2, 900021a0 <GUI_ALLOC_FreeFixedBlock+0xc>
9000219e:	6050      	str	r0, [r2, #4]
900021a0:	63d8      	str	r0, [r3, #60]	; 0x3c
900021a2:	4770      	bx	lr
900021a4:	20025af4 	.word	0x20025af4

900021a8 <GUI_ALLOC_h2p>:
900021a8:	4b03      	ldr	r3, [pc, #12]	; (900021b8 <GUI_ALLOC_h2p+0x10>)
900021aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900021ac:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
900021b0:	6840      	ldr	r0, [r0, #4]
900021b2:	3008      	adds	r0, #8
900021b4:	4770      	bx	lr
900021b6:	bf00      	nop
900021b8:	20025af4 	.word	0x20025af4

900021bc <GUI_ALLOC_LockH>:
900021bc:	4b05      	ldr	r3, [pc, #20]	; (900021d4 <GUI_ALLOC_LockH+0x18>)
900021be:	69da      	ldr	r2, [r3, #28]
900021c0:	3201      	adds	r2, #1
900021c2:	61da      	str	r2, [r3, #28]
900021c4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900021c6:	f812 3030 	ldrb.w	r3, [r2, r0, lsl #3]
900021ca:	3301      	adds	r3, #1
900021cc:	f802 3030 	strb.w	r3, [r2, r0, lsl #3]
900021d0:	f7ff bfea 	b.w	900021a8 <GUI_ALLOC_h2p>
900021d4:	20025af4 	.word	0x20025af4

900021d8 <GUI_ALLOC_UnlockH>:
900021d8:	6803      	ldr	r3, [r0, #0]
900021da:	490a      	ldr	r1, [pc, #40]	; (90002204 <GUI_ALLOC_UnlockH+0x2c>)
900021dc:	b530      	push	{r4, r5, lr}
900021de:	f853 5c08 	ldr.w	r5, [r3, #-8]
900021e2:	6b4c      	ldr	r4, [r1, #52]	; 0x34
900021e4:	f814 3035 	ldrb.w	r3, [r4, r5, lsl #3]
900021e8:	2b01      	cmp	r3, #1
900021ea:	d903      	bls.n	900021f4 <GUI_ALLOC_UnlockH+0x1c>
900021ec:	69ca      	ldr	r2, [r1, #28]
900021ee:	b10a      	cbz	r2, 900021f4 <GUI_ALLOC_UnlockH+0x1c>
900021f0:	3a01      	subs	r2, #1
900021f2:	61ca      	str	r2, [r1, #28]
900021f4:	3b01      	subs	r3, #1
900021f6:	f804 3035 	strb.w	r3, [r4, r5, lsl #3]
900021fa:	2300      	movs	r3, #0
900021fc:	6003      	str	r3, [r0, #0]
900021fe:	4618      	mov	r0, r3
90002200:	bd30      	pop	{r4, r5, pc}
90002202:	bf00      	nop
90002204:	20025af4 	.word	0x20025af4

90002208 <GUI_ALLOC_AssignMemory>:
90002208:	4b02      	ldr	r3, [pc, #8]	; (90002214 <GUI_ALLOC_AssignMemory+0xc>)
9000220a:	f021 0103 	bic.w	r1, r1, #3
9000220e:	6018      	str	r0, [r3, #0]
90002210:	6059      	str	r1, [r3, #4]
90002212:	4770      	bx	lr
90002214:	20025958 	.word	0x20025958

90002218 <GUI_ALLOC_Free>:
90002218:	b510      	push	{r4, lr}
9000221a:	4604      	mov	r4, r0
9000221c:	b160      	cbz	r0, 90002238 <GUI_ALLOC_Free+0x20>
9000221e:	4b07      	ldr	r3, [pc, #28]	; (9000223c <GUI_ALLOC_Free+0x24>)
90002220:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90002222:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
90002226:	6859      	ldr	r1, [r3, #4]
90002228:	6848      	ldr	r0, [r1, #4]
9000222a:	f7ff ff15 	bl	90002058 <_AddFreeMemory>
9000222e:	4620      	mov	r0, r4
90002230:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002234:	f7ff bede 	b.w	90001ff4 <_PushFreeBlock>
90002238:	bd10      	pop	{r4, pc}
9000223a:	bf00      	nop
9000223c:	20025af4 	.word	0x20025af4

90002240 <_EnlargeBlocks>:
90002240:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002244:	4c22      	ldr	r4, [pc, #136]	; (900022d0 <_EnlargeBlocks+0x90>)
90002246:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90002248:	b93b      	cbnz	r3, 9000225a <_EnlargeBlocks+0x1a>
9000224a:	4b22      	ldr	r3, [pc, #136]	; (900022d4 <_EnlargeBlocks+0x94>)
9000224c:	689d      	ldr	r5, [r3, #8]
9000224e:	685b      	ldr	r3, [r3, #4]
90002250:	3508      	adds	r5, #8
90002252:	fbb3 f5f5 	udiv	r5, r3, r5
90002256:	3502      	adds	r5, #2
90002258:	e003      	b.n	90002262 <_EnlargeBlocks+0x22>
9000225a:	6923      	ldr	r3, [r4, #16]
9000225c:	1d1d      	adds	r5, r3, #4
9000225e:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
90002262:	00e8      	lsls	r0, r5, #3
90002264:	f000 f8c0 	bl	900023e8 <_Alloc>
90002268:	4680      	mov	r8, r0
9000226a:	b360      	cbz	r0, 900022c6 <_EnlargeBlocks+0x86>
9000226c:	6b61      	ldr	r1, [r4, #52]	; 0x34
9000226e:	6922      	ldr	r2, [r4, #16]
90002270:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
90002274:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
90002276:	00d2      	lsls	r2, r2, #3
90002278:	685e      	ldr	r6, [r3, #4]
9000227a:	4b17      	ldr	r3, [pc, #92]	; (900022d8 <_EnlargeBlocks+0x98>)
9000227c:	3608      	adds	r6, #8
9000227e:	681b      	ldr	r3, [r3, #0]
90002280:	4630      	mov	r0, r6
90002282:	4798      	blx	r3
90002284:	6922      	ldr	r2, [r4, #16]
90002286:	1e69      	subs	r1, r5, #1
90002288:	6366      	str	r6, [r4, #52]	; 0x34
9000228a:	4613      	mov	r3, r2
9000228c:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
90002290:	428b      	cmp	r3, r1
90002292:	d205      	bcs.n	900022a0 <_EnlargeBlocks+0x60>
90002294:	3301      	adds	r3, #1
90002296:	eb06 00c3 	add.w	r0, r6, r3, lsl #3
9000229a:	f840 3c04 	str.w	r3, [r0, #-4]
9000229e:	e7f7      	b.n	90002290 <_EnlargeBlocks+0x50>
900022a0:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
900022a4:	f04f 0800 	mov.w	r8, #0
900022a8:	4638      	mov	r0, r7
900022aa:	f8c6 8004 	str.w	r8, [r6, #4]
900022ae:	6863      	ldr	r3, [r4, #4]
900022b0:	6262      	str	r2, [r4, #36]	; 0x24
900022b2:	1a9b      	subs	r3, r3, r2
900022b4:	6125      	str	r5, [r4, #16]
900022b6:	442b      	add	r3, r5
900022b8:	6063      	str	r3, [r4, #4]
900022ba:	b13f      	cbz	r7, 900022cc <_EnlargeBlocks+0x8c>
900022bc:	f7ff ffac 	bl	90002218 <GUI_ALLOC_Free>
900022c0:	4640      	mov	r0, r8
900022c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900022c6:	2001      	movs	r0, #1
900022c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900022cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900022d0:	20025af4 	.word	0x20025af4
900022d4:	20025958 	.word	0x20025958
900022d8:	200000a8 	.word	0x200000a8

900022dc <_InitOnce>:
900022dc:	4a17      	ldr	r2, [pc, #92]	; (9000233c <_InitOnce+0x60>)
900022de:	b570      	push	{r4, r5, r6, lr}
900022e0:	f892 3028 	ldrb.w	r3, [r2, #40]	; 0x28
900022e4:	bb43      	cbnz	r3, 90002338 <_InitOnce+0x5c>
900022e6:	2301      	movs	r3, #1
900022e8:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
900022ec:	4b14      	ldr	r3, [pc, #80]	; (90002340 <_InitOnce+0x64>)
900022ee:	6899      	ldr	r1, [r3, #8]
900022f0:	b911      	cbnz	r1, 900022f8 <_InitOnce+0x1c>
900022f2:	6859      	ldr	r1, [r3, #4]
900022f4:	0889      	lsrs	r1, r1, #2
900022f6:	6099      	str	r1, [r3, #8]
900022f8:	215a      	movs	r1, #90	; 0x5a
900022fa:	2610      	movs	r6, #16
900022fc:	6211      	str	r1, [r2, #32]
900022fe:	2100      	movs	r1, #0
90002300:	eb02 00c1 	add.w	r0, r2, r1, lsl #3
90002304:	fa06 f501 	lsl.w	r5, r6, r1
90002308:	3101      	adds	r1, #1
9000230a:	4c0c      	ldr	r4, [pc, #48]	; (9000233c <_InitOnce+0x60>)
9000230c:	6405      	str	r5, [r0, #64]	; 0x40
9000230e:	2910      	cmp	r1, #16
90002310:	d1f6      	bne.n	90002300 <_InitOnce+0x24>
90002312:	6819      	ldr	r1, [r3, #0]
90002314:	2501      	movs	r5, #1
90002316:	6858      	ldr	r0, [r3, #4]
90002318:	2302      	movs	r3, #2
9000231a:	63a1      	str	r1, [r4, #56]	; 0x38
9000231c:	6123      	str	r3, [r4, #16]
9000231e:	f1a0 0314 	sub.w	r3, r0, #20
90002322:	60e0      	str	r0, [r4, #12]
90002324:	440b      	add	r3, r1
90002326:	6363      	str	r3, [r4, #52]	; 0x34
90002328:	605d      	str	r5, [r3, #4]
9000232a:	6265      	str	r5, [r4, #36]	; 0x24
9000232c:	6065      	str	r5, [r4, #4]
9000232e:	f7ff fe93 	bl	90002058 <_AddFreeMemory>
90002332:	f7ff ff85 	bl	90002240 <_EnlargeBlocks>
90002336:	6325      	str	r5, [r4, #48]	; 0x30
90002338:	bd70      	pop	{r4, r5, r6, pc}
9000233a:	bf00      	nop
9000233c:	20025af4 	.word	0x20025af4
90002340:	20025958 	.word	0x20025958

90002344 <GUI_ALLOC_GetFixedBlock>:
90002344:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002348:	4607      	mov	r7, r0
9000234a:	4e26      	ldr	r6, [pc, #152]	; (900023e4 <GUI_ALLOC_GetFixedBlock+0xa0>)
9000234c:	f7ff ffc6 	bl	900022dc <_InitOnce>
90002350:	3703      	adds	r7, #3
90002352:	6c30      	ldr	r0, [r6, #64]	; 0x40
90002354:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
90002356:	f027 0703 	bic.w	r7, r7, #3
9000235a:	4614      	mov	r4, r2
9000235c:	3704      	adds	r7, #4
9000235e:	4287      	cmp	r7, r0
90002360:	bf38      	it	cc
90002362:	4607      	movcc	r7, r0
90002364:	b134      	cbz	r4, 90002374 <GUI_ALLOC_GetFixedBlock+0x30>
90002366:	f854 3c04 	ldr.w	r3, [r4, #-4]
9000236a:	429f      	cmp	r7, r3
9000236c:	6823      	ldr	r3, [r4, #0]
9000236e:	d02c      	beq.n	900023ca <GUI_ALLOC_GetFixedBlock+0x86>
90002370:	461c      	mov	r4, r3
90002372:	e7f7      	b.n	90002364 <GUI_ALLOC_GetFixedBlock+0x20>
90002374:	68f3      	ldr	r3, [r6, #12]
90002376:	6bb2      	ldr	r2, [r6, #56]	; 0x38
90002378:	eb02 0803 	add.w	r8, r2, r3
9000237c:	f858 5c04 	ldr.w	r5, [r8, #-4]
90002380:	ebc5 0508 	rsb	r5, r5, r8
90002384:	682b      	ldr	r3, [r5, #0]
90002386:	b133      	cbz	r3, 90002396 <GUI_ALLOC_GetFixedBlock+0x52>
90002388:	4620      	mov	r0, r4
9000238a:	f7ff feb7 	bl	900020fc <_RemoveHoles>
9000238e:	f858 5c04 	ldr.w	r5, [r8, #-4]
90002392:	ebc5 0508 	rsb	r5, r5, r8
90002396:	682b      	ldr	r3, [r5, #0]
90002398:	bb0b      	cbnz	r3, 900023de <GUI_ALLOC_GetFixedBlock+0x9a>
9000239a:	686b      	ldr	r3, [r5, #4]
9000239c:	429f      	cmp	r7, r3
9000239e:	dc1e      	bgt.n	900023de <GUI_ALLOC_GetFixedBlock+0x9a>
900023a0:	4628      	mov	r0, r5
900023a2:	1d1c      	adds	r4, r3, #4
900023a4:	f7ff fe38 	bl	90002018 <_RemoveFreeBlock>
900023a8:	68f3      	ldr	r3, [r6, #12]
900023aa:	6868      	ldr	r0, [r5, #4]
900023ac:	1be4      	subs	r4, r4, r7
900023ae:	1bdb      	subs	r3, r3, r7
900023b0:	1bc0      	subs	r0, r0, r7
900023b2:	442c      	add	r4, r5
900023b4:	60f3      	str	r3, [r6, #12]
900023b6:	6973      	ldr	r3, [r6, #20]
900023b8:	443b      	add	r3, r7
900023ba:	6173      	str	r3, [r6, #20]
900023bc:	d002      	beq.n	900023c4 <GUI_ALLOC_GetFixedBlock+0x80>
900023be:	4629      	mov	r1, r5
900023c0:	f7ff fe4a 	bl	90002058 <_AddFreeMemory>
900023c4:	f844 7c04 	str.w	r7, [r4, #-4]
900023c8:	e009      	b.n	900023de <GUI_ALLOC_GetFixedBlock+0x9a>
900023ca:	b10b      	cbz	r3, 900023d0 <GUI_ALLOC_GetFixedBlock+0x8c>
900023cc:	6861      	ldr	r1, [r4, #4]
900023ce:	6059      	str	r1, [r3, #4]
900023d0:	6861      	ldr	r1, [r4, #4]
900023d2:	b101      	cbz	r1, 900023d6 <GUI_ALLOC_GetFixedBlock+0x92>
900023d4:	600b      	str	r3, [r1, #0]
900023d6:	42a2      	cmp	r2, r4
900023d8:	d101      	bne.n	900023de <GUI_ALLOC_GetFixedBlock+0x9a>
900023da:	6823      	ldr	r3, [r4, #0]
900023dc:	63f3      	str	r3, [r6, #60]	; 0x3c
900023de:	4620      	mov	r0, r4
900023e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900023e4:	20025af4 	.word	0x20025af4

900023e8 <_Alloc>:
900023e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900023ec:	4e39      	ldr	r6, [pc, #228]	; (900024d4 <_Alloc+0xec>)
900023ee:	4604      	mov	r4, r0
900023f0:	f7ff ff74 	bl	900022dc <_InitOnce>
900023f4:	6c35      	ldr	r5, [r6, #64]	; 0x40
900023f6:	6833      	ldr	r3, [r6, #0]
900023f8:	42ac      	cmp	r4, r5
900023fa:	bf24      	itt	cs
900023fc:	3403      	addcs	r4, #3
900023fe:	f024 0503 	biccs.w	r5, r4, #3
90002402:	4c34      	ldr	r4, [pc, #208]	; (900024d4 <_Alloc+0xec>)
90002404:	350c      	adds	r5, #12
90002406:	42ab      	cmp	r3, r5
90002408:	d33e      	bcc.n	90002488 <_Alloc+0xa0>
9000240a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000240c:	6862      	ldr	r2, [r4, #4]
9000240e:	429a      	cmp	r2, r3
90002410:	d90f      	bls.n	90002432 <_Alloc+0x4a>
90002412:	6873      	ldr	r3, [r6, #4]
90002414:	6a77      	ldr	r7, [r6, #36]	; 0x24
90002416:	3b01      	subs	r3, #1
90002418:	ea4f 08c7 	mov.w	r8, r7, lsl #3
9000241c:	6073      	str	r3, [r6, #4]
9000241e:	6b73      	ldr	r3, [r6, #52]	; 0x34
90002420:	eb03 0208 	add.w	r2, r3, r8
90002424:	6852      	ldr	r2, [r2, #4]
90002426:	6272      	str	r2, [r6, #36]	; 0x24
90002428:	2201      	movs	r2, #1
9000242a:	f803 2037 	strb.w	r2, [r3, r7, lsl #3]
9000242e:	b957      	cbnz	r7, 90002446 <_Alloc+0x5e>
90002430:	e02a      	b.n	90002488 <_Alloc+0xa0>
90002432:	3b01      	subs	r3, #1
90002434:	6323      	str	r3, [r4, #48]	; 0x30
90002436:	f7ff ff03 	bl	90002240 <_EnlargeBlocks>
9000243a:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000243c:	3301      	adds	r3, #1
9000243e:	6323      	str	r3, [r4, #48]	; 0x30
90002440:	2800      	cmp	r0, #0
90002442:	d0e6      	beq.n	90002412 <_Alloc+0x2a>
90002444:	e020      	b.n	90002488 <_Alloc+0xa0>
90002446:	230f      	movs	r3, #15
90002448:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
9000244c:	6c12      	ldr	r2, [r2, #64]	; 0x40
9000244e:	4295      	cmp	r5, r2
90002450:	d20c      	bcs.n	9000246c <_Alloc+0x84>
90002452:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
90002456:	d2f7      	bcs.n	90002448 <_Alloc+0x60>
90002458:	e008      	b.n	9000246c <_Alloc+0x84>
9000245a:	6894      	ldr	r4, [r2, #8]
9000245c:	b12c      	cbz	r4, 9000246a <_Alloc+0x82>
9000245e:	6862      	ldr	r2, [r4, #4]
90002460:	4295      	cmp	r5, r2
90002462:	d914      	bls.n	9000248e <_Alloc+0xa6>
90002464:	68a2      	ldr	r2, [r4, #8]
90002466:	2a00      	cmp	r2, #0
90002468:	d1f7      	bne.n	9000245a <_Alloc+0x72>
9000246a:	3301      	adds	r3, #1
9000246c:	2b0f      	cmp	r3, #15
9000246e:	d803      	bhi.n	90002478 <_Alloc+0x90>
90002470:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
90002474:	6c52      	ldr	r2, [r2, #68]	; 0x44
90002476:	e7f6      	b.n	90002466 <_Alloc+0x7e>
90002478:	4628      	mov	r0, r5
9000247a:	f7ff fe3f 	bl	900020fc <_RemoveHoles>
9000247e:	2800      	cmp	r0, #0
90002480:	d0e1      	beq.n	90002446 <_Alloc+0x5e>
90002482:	4638      	mov	r0, r7
90002484:	f7ff fdb6 	bl	90001ff4 <_PushFreeBlock>
90002488:	2000      	movs	r0, #0
9000248a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000248e:	f8d4 9004 	ldr.w	r9, [r4, #4]
90002492:	4620      	mov	r0, r4
90002494:	6c33      	ldr	r3, [r6, #64]	; 0x40
90002496:	ebc5 0209 	rsb	r2, r5, r9
9000249a:	330c      	adds	r3, #12
9000249c:	429a      	cmp	r2, r3
9000249e:	bf38      	it	cc
900024a0:	464d      	movcc	r5, r9
900024a2:	f7ff fdb9 	bl	90002018 <_RemoveFreeBlock>
900024a6:	6b73      	ldr	r3, [r6, #52]	; 0x34
900024a8:	1961      	adds	r1, r4, r5
900024aa:	454d      	cmp	r5, r9
900024ac:	4498      	add	r8, r3
900024ae:	f04f 0300 	mov.w	r3, #0
900024b2:	f8c8 4004 	str.w	r4, [r8, #4]
900024b6:	6027      	str	r7, [r4, #0]
900024b8:	6065      	str	r5, [r4, #4]
900024ba:	60a3      	str	r3, [r4, #8]
900024bc:	6124      	str	r4, [r4, #16]
900024be:	f841 5c04 	str.w	r5, [r1, #-4]
900024c2:	da03      	bge.n	900024cc <_Alloc+0xe4>
900024c4:	ebc5 0009 	rsb	r0, r5, r9
900024c8:	f7ff fdc6 	bl	90002058 <_AddFreeMemory>
900024cc:	4638      	mov	r0, r7
900024ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900024d2:	bf00      	nop
900024d4:	20025af4 	.word	0x20025af4

900024d8 <GUI_ALLOC_AllocNoInit>:
900024d8:	b108      	cbz	r0, 900024de <GUI_ALLOC_AllocNoInit+0x6>
900024da:	f7ff bf85 	b.w	900023e8 <_Alloc>
900024de:	4770      	bx	lr

900024e0 <GUI_ALLOC_AllocZero>:
900024e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
900024e2:	4606      	mov	r6, r0
900024e4:	f7ff fff8 	bl	900024d8 <GUI_ALLOC_AllocNoInit>
900024e8:	4605      	mov	r5, r0
900024ea:	b160      	cbz	r0, 90002506 <GUI_ALLOC_AllocZero+0x26>
900024ec:	f7ff fe66 	bl	900021bc <GUI_ALLOC_LockH>
900024f0:	ac02      	add	r4, sp, #8
900024f2:	4b06      	ldr	r3, [pc, #24]	; (9000250c <GUI_ALLOC_AllocZero+0x2c>)
900024f4:	4632      	mov	r2, r6
900024f6:	f844 0d04 	str.w	r0, [r4, #-4]!
900024fa:	2100      	movs	r1, #0
900024fc:	681b      	ldr	r3, [r3, #0]
900024fe:	4798      	blx	r3
90002500:	4620      	mov	r0, r4
90002502:	f7ff fe69 	bl	900021d8 <GUI_ALLOC_UnlockH>
90002506:	4628      	mov	r0, r5
90002508:	b002      	add	sp, #8
9000250a:	bd70      	pop	{r4, r5, r6, pc}
9000250c:	200000ac 	.word	0x200000ac

90002510 <GUI_CalcColorDist>:
90002510:	b2c3      	uxtb	r3, r0
90002512:	b2ca      	uxtb	r2, r1
90002514:	1a9a      	subs	r2, r3, r2
90002516:	f3c0 2307 	ubfx	r3, r0, #8, #8
9000251a:	b292      	uxth	r2, r2
9000251c:	b510      	push	{r4, lr}
9000251e:	b214      	sxth	r4, r2
90002520:	2c00      	cmp	r4, #0
90002522:	bfbc      	itt	lt
90002524:	4252      	neglt	r2, r2
90002526:	b214      	sxthlt	r4, r2
90002528:	f3c1 2207 	ubfx	r2, r1, #8, #8
9000252c:	0c09      	lsrs	r1, r1, #16
9000252e:	1a9b      	subs	r3, r3, r2
90002530:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
90002534:	b29b      	uxth	r3, r3
90002536:	b289      	uxth	r1, r1
90002538:	b21a      	sxth	r2, r3
9000253a:	b208      	sxth	r0, r1
9000253c:	2a00      	cmp	r2, #0
9000253e:	bfbc      	itt	lt
90002540:	425b      	neglt	r3, r3
90002542:	b21a      	sxthlt	r2, r3
90002544:	2800      	cmp	r0, #0
90002546:	bfb8      	it	lt
90002548:	4249      	neglt	r1, r1
9000254a:	fb02 f202 	mul.w	r2, r2, r2
9000254e:	bfb8      	it	lt
90002550:	b208      	sxthlt	r0, r1
90002552:	fb04 2204 	mla	r2, r4, r4, r2
90002556:	b280      	uxth	r0, r0
90002558:	fb00 2000 	mla	r0, r0, r0, r2
9000255c:	bd10      	pop	{r4, pc}

9000255e <GUI_GetBkColor>:
9000255e:	b508      	push	{r3, lr}
90002560:	f001 f870 	bl	90003644 <LCD_GetBkColorIndex>
90002564:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90002568:	f000 bf72 	b.w	90003450 <LCD_Index2Color>

9000256c <GUI_GetColor>:
9000256c:	b508      	push	{r3, lr}
9000256e:	f001 f871 	bl	90003654 <LCD_GetColorIndex>
90002572:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90002576:	f000 bf6b 	b.w	90003450 <LCD_Index2Color>
	...

9000257c <GUI_GetVersionString>:
9000257c:	4804      	ldr	r0, [pc, #16]	; (90002590 <GUI_GetVersionString+0x14>)
9000257e:	2335      	movs	r3, #53	; 0x35
90002580:	7003      	strb	r3, [r0, #0]
90002582:	2334      	movs	r3, #52	; 0x34
90002584:	7083      	strb	r3, [r0, #2]
90002586:	70c3      	strb	r3, [r0, #3]
90002588:	2361      	movs	r3, #97	; 0x61
9000258a:	7103      	strb	r3, [r0, #4]
9000258c:	4770      	bx	lr
9000258e:	bf00      	nop
90002590:	20000090 	.word	0x20000090

90002594 <GUI_MergeRect>:
90002594:	b510      	push	{r4, lr}
90002596:	b338      	cbz	r0, 900025e8 <GUI_MergeRect+0x54>
90002598:	b309      	cbz	r1, 900025de <GUI_MergeRect+0x4a>
9000259a:	b30a      	cbz	r2, 900025e0 <GUI_MergeRect+0x4c>
9000259c:	f9b2 4000 	ldrsh.w	r4, [r2]
900025a0:	f9b1 3000 	ldrsh.w	r3, [r1]
900025a4:	42a3      	cmp	r3, r4
900025a6:	bfa8      	it	ge
900025a8:	4623      	movge	r3, r4
900025aa:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
900025ae:	8003      	strh	r3, [r0, #0]
900025b0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900025b4:	42a3      	cmp	r3, r4
900025b6:	bfa8      	it	ge
900025b8:	4623      	movge	r3, r4
900025ba:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
900025be:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
900025c2:	8043      	strh	r3, [r0, #2]
900025c4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900025c8:	42a3      	cmp	r3, r4
900025ca:	bfb8      	it	lt
900025cc:	4623      	movlt	r3, r4
900025ce:	8083      	strh	r3, [r0, #4]
900025d0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900025d4:	4293      	cmp	r3, r2
900025d6:	bfb8      	it	lt
900025d8:	4613      	movlt	r3, r2
900025da:	80c3      	strh	r3, [r0, #6]
900025dc:	bd10      	pop	{r4, pc}
900025de:	4611      	mov	r1, r2
900025e0:	680b      	ldr	r3, [r1, #0]
900025e2:	6003      	str	r3, [r0, #0]
900025e4:	684b      	ldr	r3, [r1, #4]
900025e6:	6043      	str	r3, [r0, #4]
900025e8:	bd10      	pop	{r4, pc}

900025ea <GUI_MoveRect>:
900025ea:	b168      	cbz	r0, 90002608 <GUI_MoveRect+0x1e>
900025ec:	b289      	uxth	r1, r1
900025ee:	8803      	ldrh	r3, [r0, #0]
900025f0:	b292      	uxth	r2, r2
900025f2:	440b      	add	r3, r1
900025f4:	8003      	strh	r3, [r0, #0]
900025f6:	8883      	ldrh	r3, [r0, #4]
900025f8:	4419      	add	r1, r3
900025fa:	8843      	ldrh	r3, [r0, #2]
900025fc:	4413      	add	r3, r2
900025fe:	8081      	strh	r1, [r0, #4]
90002600:	8043      	strh	r3, [r0, #2]
90002602:	88c3      	ldrh	r3, [r0, #6]
90002604:	441a      	add	r2, r3
90002606:	80c2      	strh	r2, [r0, #6]
90002608:	4770      	bx	lr
	...

9000260c <GUI_GotoXY>:
9000260c:	4b02      	ldr	r3, [pc, #8]	; (90002618 <GUI_GotoXY+0xc>)
9000260e:	681b      	ldr	r3, [r3, #0]
90002610:	8458      	strh	r0, [r3, #34]	; 0x22
90002612:	2000      	movs	r0, #0
90002614:	8499      	strh	r1, [r3, #36]	; 0x24
90002616:	4770      	bx	lr
90002618:	200000a4 	.word	0x200000a4

9000261c <GUI_RectsIntersect>:
9000261c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90002620:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90002624:	429a      	cmp	r2, r3
90002626:	dc14      	bgt.n	90002652 <GUI_RectsIntersect+0x36>
90002628:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
9000262c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90002630:	429a      	cmp	r2, r3
90002632:	dc0e      	bgt.n	90002652 <GUI_RectsIntersect+0x36>
90002634:	f9b0 2000 	ldrsh.w	r2, [r0]
90002638:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9000263c:	429a      	cmp	r2, r3
9000263e:	dc08      	bgt.n	90002652 <GUI_RectsIntersect+0x36>
90002640:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
90002644:	f9b1 3000 	ldrsh.w	r3, [r1]
90002648:	4283      	cmp	r3, r0
9000264a:	bfcc      	ite	gt
9000264c:	2000      	movgt	r0, #0
9000264e:	2001      	movle	r0, #1
90002650:	4770      	bx	lr
90002652:	2000      	movs	r0, #0
90002654:	4770      	bx	lr

90002656 <GUI_SelectLCD>:
90002656:	b508      	push	{r3, lr}
90002658:	f001 f8f2 	bl	90003840 <LCD_SelectLCD>
9000265c:	f001 f958 	bl	90003910 <LCD_UpdateColorIndices>
90002660:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90002664:	f004 b840 	b.w	900066e8 <WM_Activate>

90002668 <GUI_SetBkColor>:
90002668:	f000 bf38 	b.w	900034dc <LCD_SetBkColor>

9000266c <GUI_SetColor>:
9000266c:	f000 bf3c 	b.w	900034e8 <LCD_SetColor>

90002670 <GUI_SetFont>:
90002670:	4b03      	ldr	r3, [pc, #12]	; (90002680 <GUI_SetFont+0x10>)
90002672:	681b      	ldr	r3, [r3, #0]
90002674:	69da      	ldr	r2, [r3, #28]
90002676:	b100      	cbz	r0, 9000267a <GUI_SetFont+0xa>
90002678:	61d8      	str	r0, [r3, #28]
9000267a:	4610      	mov	r0, r2
9000267c:	4770      	bx	lr
9000267e:	bf00      	nop
90002680:	200000a4 	.word	0x200000a4

90002684 <GUI_SetOrg>:
90002684:	4b09      	ldr	r3, [pc, #36]	; (900026ac <GUI_SetOrg+0x28>)
90002686:	460a      	mov	r2, r1
90002688:	b410      	push	{r4}
9000268a:	8018      	strh	r0, [r3, #0]
9000268c:	4b08      	ldr	r3, [pc, #32]	; (900026b0 <GUI_SetOrg+0x2c>)
9000268e:	8019      	strh	r1, [r3, #0]
90002690:	4b08      	ldr	r3, [pc, #32]	; (900026b4 <GUI_SetOrg+0x30>)
90002692:	681b      	ldr	r3, [r3, #0]
90002694:	7c59      	ldrb	r1, [r3, #17]
90002696:	4b08      	ldr	r3, [pc, #32]	; (900026b8 <GUI_SetOrg+0x34>)
90002698:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000269c:	68d9      	ldr	r1, [r3, #12]
9000269e:	6a0c      	ldr	r4, [r1, #32]
900026a0:	4601      	mov	r1, r0
900026a2:	4618      	mov	r0, r3
900026a4:	4623      	mov	r3, r4
900026a6:	f85d 4b04 	ldr.w	r4, [sp], #4
900026aa:	4718      	bx	r3
900026ac:	20025bdc 	.word	0x20025bdc
900026b0:	20025bcc 	.word	0x20025bcc
900026b4:	200000a4 	.word	0x200000a4
900026b8:	20025c04 	.word	0x20025c04

900026bc <_InitContext>:
900026bc:	b570      	push	{r4, r5, r6, lr}
900026be:	4e1a      	ldr	r6, [pc, #104]	; (90002728 <_InitContext+0x6c>)
900026c0:	4604      	mov	r4, r0
900026c2:	4d1a      	ldr	r5, [pc, #104]	; (9000272c <_InitContext+0x70>)
900026c4:	f106 0384 	add.w	r3, r6, #132	; 0x84
900026c8:	f104 0108 	add.w	r1, r4, #8
900026cc:	6703      	str	r3, [r0, #112]	; 0x70
900026ce:	68eb      	ldr	r3, [r5, #12]
900026d0:	1d1a      	adds	r2, r3, #4
900026d2:	639b      	str	r3, [r3, #56]	; 0x38
900026d4:	641b      	str	r3, [r3, #64]	; 0x40
900026d6:	63da      	str	r2, [r3, #60]	; 0x3c
900026d8:	f103 0208 	add.w	r2, r3, #8
900026dc:	6142      	str	r2, [r0, #20]
900026de:	7c5a      	ldrb	r2, [r3, #17]
900026e0:	4b13      	ldr	r3, [pc, #76]	; (90002730 <_InitContext+0x74>)
900026e2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900026e6:	68c3      	ldr	r3, [r0, #12]
900026e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900026ea:	4798      	blx	r3
900026ec:	4b11      	ldr	r3, [pc, #68]	; (90002734 <_InitContext+0x78>)
900026ee:	6663      	str	r3, [r4, #100]	; 0x64
900026f0:	686b      	ldr	r3, [r5, #4]
900026f2:	61e3      	str	r3, [r4, #28]
900026f4:	68eb      	ldr	r3, [r5, #12]
900026f6:	3308      	adds	r3, #8
900026f8:	6163      	str	r3, [r4, #20]
900026fa:	2301      	movs	r3, #1
900026fc:	7623      	strb	r3, [r4, #24]
900026fe:	76e3      	strb	r3, [r4, #27]
90002700:	f004 f8ca 	bl	90006898 <WM_GetDesktopWindow>
90002704:	2303      	movs	r3, #3
90002706:	64a0      	str	r0, [r4, #72]	; 0x48
90002708:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
9000270c:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
90002710:	6830      	ldr	r0, [r6, #0]
90002712:	6323      	str	r3, [r4, #48]	; 0x30
90002714:	6363      	str	r3, [r4, #52]	; 0x34
90002716:	f000 fee1 	bl	900034dc <LCD_SetBkColor>
9000271a:	68a8      	ldr	r0, [r5, #8]
9000271c:	f000 fee4 	bl	900034e8 <LCD_SetColor>
90002720:	4a05      	ldr	r2, [pc, #20]	; (90002738 <_InitContext+0x7c>)
90002722:	4b06      	ldr	r3, [pc, #24]	; (9000273c <_InitContext+0x80>)
90002724:	601a      	str	r2, [r3, #0]
90002726:	bd70      	pop	{r4, r5, r6, pc}
90002728:	2002596c 	.word	0x2002596c
9000272c:	20000098 	.word	0x20000098
90002730:	20025c04 	.word	0x20025c04
90002734:	9000b140 	.word	0x9000b140
90002738:	9000b158 	.word	0x9000b158
9000273c:	20025bfc 	.word	0x20025bfc

90002740 <_OnExit>:
90002740:	b570      	push	{r4, r5, r6, lr}
90002742:	2400      	movs	r4, #0
90002744:	4d0a      	ldr	r5, [pc, #40]	; (90002770 <_OnExit+0x30>)
90002746:	4e0b      	ldr	r6, [pc, #44]	; (90002774 <_OnExit+0x34>)
90002748:	2274      	movs	r2, #116	; 0x74
9000274a:	f8c5 4080 	str.w	r4, [r5, #128]	; 0x80
9000274e:	3504      	adds	r5, #4
90002750:	6833      	ldr	r3, [r6, #0]
90002752:	4621      	mov	r1, r4
90002754:	4628      	mov	r0, r5
90002756:	4798      	blx	r3
90002758:	6833      	ldr	r3, [r6, #0]
9000275a:	2208      	movs	r2, #8
9000275c:	4621      	mov	r1, r4
9000275e:	4806      	ldr	r0, [pc, #24]	; (90002778 <_OnExit+0x38>)
90002760:	4798      	blx	r3
90002762:	4b06      	ldr	r3, [pc, #24]	; (9000277c <_OnExit+0x3c>)
90002764:	60dd      	str	r5, [r3, #12]
90002766:	4b06      	ldr	r3, [pc, #24]	; (90002780 <_OnExit+0x40>)
90002768:	701c      	strb	r4, [r3, #0]
9000276a:	4b06      	ldr	r3, [pc, #24]	; (90002784 <_OnExit+0x44>)
9000276c:	601c      	str	r4, [r3, #0]
9000276e:	bd70      	pop	{r4, r5, r6, pc}
90002770:	2002596c 	.word	0x2002596c
90002774:	200000ac 	.word	0x200000ac
90002778:	20025c04 	.word	0x20025c04
9000277c:	20000098 	.word	0x20000098
90002780:	20025bec 	.word	0x20025bec
90002784:	20025bc8 	.word	0x20025bc8

90002788 <GUI_ClearRect>:
90002788:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9000278c:	4604      	mov	r4, r0
9000278e:	2004      	movs	r0, #4
90002790:	4616      	mov	r6, r2
90002792:	461f      	mov	r7, r3
90002794:	460d      	mov	r5, r1
90002796:	f000 fb65 	bl	90002e64 <LCD_SetDrawMode>
9000279a:	4b13      	ldr	r3, [pc, #76]	; (900027e8 <GUI_ClearRect+0x60>)
9000279c:	4680      	mov	r8, r0
9000279e:	4668      	mov	r0, sp
900027a0:	68db      	ldr	r3, [r3, #12]
900027a2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
900027a4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
900027a6:	4414      	add	r4, r2
900027a8:	4416      	add	r6, r2
900027aa:	441d      	add	r5, r3
900027ac:	441f      	add	r7, r3
900027ae:	f8ad 4000 	strh.w	r4, [sp]
900027b2:	f8ad 6004 	strh.w	r6, [sp, #4]
900027b6:	f8ad 5002 	strh.w	r5, [sp, #2]
900027ba:	f8ad 7006 	strh.w	r7, [sp, #6]
900027be:	f003 ff13 	bl	900065e8 <WM__InitIVRSearch>
900027c2:	b928      	cbnz	r0, 900027d0 <GUI_ClearRect+0x48>
900027c4:	4640      	mov	r0, r8
900027c6:	f000 fb4d 	bl	90002e64 <LCD_SetDrawMode>
900027ca:	b002      	add	sp, #8
900027cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900027d0:	463b      	mov	r3, r7
900027d2:	4632      	mov	r2, r6
900027d4:	4629      	mov	r1, r5
900027d6:	4620      	mov	r0, r4
900027d8:	f000 fba2 	bl	90002f20 <LCD_FillRect>
900027dc:	f003 fe42 	bl	90006464 <WM__GetNextIVR>
900027e0:	2800      	cmp	r0, #0
900027e2:	d1f5      	bne.n	900027d0 <GUI_ClearRect+0x48>
900027e4:	e7ee      	b.n	900027c4 <GUI_ClearRect+0x3c>
900027e6:	bf00      	nop
900027e8:	20000098 	.word	0x20000098

900027ec <GUI_Clear>:
900027ec:	2100      	movs	r1, #0
900027ee:	b510      	push	{r4, lr}
900027f0:	4608      	mov	r0, r1
900027f2:	f7ff ff0b 	bl	9000260c <GUI_GotoXY>
900027f6:	f643 73ff 	movw	r3, #16383	; 0x3fff
900027fa:	4903      	ldr	r1, [pc, #12]	; (90002808 <GUI_Clear+0x1c>)
900027fc:	461a      	mov	r2, r3
900027fe:	4608      	mov	r0, r1
90002800:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002804:	f7ff bfc0 	b.w	90002788 <GUI_ClearRect>
90002808:	ffffc001 	.word	0xffffc001

9000280c <GUI__Config>:
9000280c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000280e:	4d20      	ldr	r5, [pc, #128]	; (90002890 <GUI__Config+0x84>)
90002810:	b085      	sub	sp, #20
90002812:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
90002816:	2b00      	cmp	r3, #0
90002818:	d137      	bne.n	9000288a <GUI__Config+0x7e>
9000281a:	2301      	movs	r3, #1
9000281c:	466a      	mov	r2, sp
9000281e:	466e      	mov	r6, sp
90002820:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
90002824:	4b1b      	ldr	r3, [pc, #108]	; (90002894 <GUI__Config+0x88>)
90002826:	f103 0708 	add.w	r7, r3, #8
9000282a:	6818      	ldr	r0, [r3, #0]
9000282c:	3308      	adds	r3, #8
9000282e:	f853 1c04 	ldr.w	r1, [r3, #-4]
90002832:	4614      	mov	r4, r2
90002834:	42bb      	cmp	r3, r7
90002836:	c403      	stmia	r4!, {r0, r1}
90002838:	4622      	mov	r2, r4
9000283a:	d1f6      	bne.n	9000282a <GUI__Config+0x1e>
9000283c:	6818      	ldr	r0, [r3, #0]
9000283e:	8899      	ldrh	r1, [r3, #4]
90002840:	799b      	ldrb	r3, [r3, #6]
90002842:	6020      	str	r0, [r4, #0]
90002844:	71a3      	strb	r3, [r4, #6]
90002846:	4633      	mov	r3, r6
90002848:	80a1      	strh	r1, [r4, #4]
9000284a:	4c13      	ldr	r4, [pc, #76]	; (90002898 <GUI__Config+0x8c>)
9000284c:	f813 2b01 	ldrb.w	r2, [r3], #1
90002850:	f804 2b01 	strb.w	r2, [r4], #1
90002854:	781a      	ldrb	r2, [r3, #0]
90002856:	2a00      	cmp	r2, #0
90002858:	d1f8      	bne.n	9000284c <GUI__Config+0x40>
9000285a:	f7ff fe8f 	bl	9000257c <GUI_GetVersionString>
9000285e:	f810 3b01 	ldrb.w	r3, [r0], #1
90002862:	4622      	mov	r2, r4
90002864:	f804 3b01 	strb.w	r3, [r4], #1
90002868:	7803      	ldrb	r3, [r0, #0]
9000286a:	2b00      	cmp	r3, #0
9000286c:	d1f7      	bne.n	9000285e <GUI__Config+0x52>
9000286e:	7053      	strb	r3, [r2, #1]
90002870:	f7ff fab0 	bl	90001dd4 <GUI_X_Config>
90002874:	f7ff fae6 	bl	90001e44 <LCD_X_Config>
90002878:	4b08      	ldr	r3, [pc, #32]	; (9000289c <GUI__Config+0x90>)
9000287a:	4809      	ldr	r0, [pc, #36]	; (900028a0 <GUI__Config+0x94>)
9000287c:	f8c5 3098 	str.w	r3, [r5, #152]	; 0x98
90002880:	b005      	add	sp, #20
90002882:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90002886:	f000 b8d1 	b.w	90002a2c <GUI__RegisterExit>
9000288a:	b005      	add	sp, #20
9000288c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000288e:	bf00      	nop
90002890:	2002596c 	.word	0x2002596c
90002894:	9000b148 	.word	0x9000b148
90002898:	200259f0 	.word	0x200259f0
9000289c:	90002741 	.word	0x90002741
900028a0:	20025a04 	.word	0x20025a04

900028a4 <GUI_Init>:
900028a4:	b590      	push	{r4, r7, lr}
900028a6:	b083      	sub	sp, #12
900028a8:	af00      	add	r7, sp, #0
900028aa:	4a53      	ldr	r2, [pc, #332]	; (900029f8 <GUI_Init+0x154>)
900028ac:	4b52      	ldr	r3, [pc, #328]	; (900029f8 <GUI_Init+0x154>)
900028ae:	681b      	ldr	r3, [r3, #0]
900028b0:	f023 0301 	bic.w	r3, r3, #1
900028b4:	6013      	str	r3, [r2, #0]
900028b6:	4b51      	ldr	r3, [pc, #324]	; (900029fc <GUI_Init+0x158>)
900028b8:	681b      	ldr	r3, [r3, #0]
900028ba:	f3c3 030a 	ubfx	r3, r3, #0, #11
900028be:	f240 4249 	movw	r2, #1097	; 0x449
900028c2:	4293      	cmp	r3, r2
900028c4:	bf0c      	ite	eq
900028c6:	2301      	moveq	r3, #1
900028c8:	2300      	movne	r3, #0
900028ca:	b2da      	uxtb	r2, r3
900028cc:	4b4b      	ldr	r3, [pc, #300]	; (900029fc <GUI_Init+0x158>)
900028ce:	681b      	ldr	r3, [r3, #0]
900028d0:	f3c3 030a 	ubfx	r3, r3, #0, #11
900028d4:	f240 4151 	movw	r1, #1105	; 0x451
900028d8:	428b      	cmp	r3, r1
900028da:	bf0c      	ite	eq
900028dc:	2301      	moveq	r3, #1
900028de:	2300      	movne	r3, #0
900028e0:	b2db      	uxtb	r3, r3
900028e2:	4313      	orrs	r3, r2
900028e4:	b2db      	uxtb	r3, r3
900028e6:	4619      	mov	r1, r3
900028e8:	4b44      	ldr	r3, [pc, #272]	; (900029fc <GUI_Init+0x158>)
900028ea:	681b      	ldr	r3, [r3, #0]
900028ec:	f3c3 030a 	ubfx	r3, r3, #0, #11
900028f0:	f240 4252 	movw	r2, #1106	; 0x452
900028f4:	4293      	cmp	r3, r2
900028f6:	bf0c      	ite	eq
900028f8:	2301      	moveq	r3, #1
900028fa:	2300      	movne	r3, #0
900028fc:	b2db      	uxtb	r3, r3
900028fe:	430b      	orrs	r3, r1
90002900:	2b00      	cmp	r3, #0
90002902:	d010      	beq.n	90002926 <GUI_Init+0x82>
90002904:	4b3e      	ldr	r3, [pc, #248]	; (90002a00 <GUI_Init+0x15c>)
90002906:	2201      	movs	r2, #1
90002908:	601a      	str	r2, [r3, #0]
9000290a:	bf00      	nop
9000290c:	4b3c      	ldr	r3, [pc, #240]	; (90002a00 <GUI_Init+0x15c>)
9000290e:	681b      	ldr	r3, [r3, #0]
90002910:	2b00      	cmp	r3, #0
90002912:	d1fb      	bne.n	9000290c <GUI_Init+0x68>
90002914:	4b3b      	ldr	r3, [pc, #236]	; (90002a04 <GUI_Init+0x160>)
90002916:	4a3c      	ldr	r2, [pc, #240]	; (90002a08 <GUI_Init+0x164>)
90002918:	601a      	str	r2, [r3, #0]
9000291a:	4b3a      	ldr	r3, [pc, #232]	; (90002a04 <GUI_Init+0x160>)
9000291c:	681b      	ldr	r3, [r3, #0]
9000291e:	4a3b      	ldr	r2, [pc, #236]	; (90002a0c <GUI_Init+0x168>)
90002920:	4293      	cmp	r3, r2
90002922:	d018      	beq.n	90002956 <GUI_Init+0xb2>
90002924:	e7fe      	b.n	90002924 <GUI_Init+0x80>
90002926:	4b3a      	ldr	r3, [pc, #232]	; (90002a10 <GUI_Init+0x16c>)
90002928:	681b      	ldr	r3, [r3, #0]
9000292a:	f3c3 030a 	ubfx	r3, r3, #0, #11
9000292e:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
90002932:	d110      	bne.n	90002956 <GUI_Init+0xb2>
90002934:	4b37      	ldr	r3, [pc, #220]	; (90002a14 <GUI_Init+0x170>)
90002936:	2201      	movs	r2, #1
90002938:	601a      	str	r2, [r3, #0]
9000293a:	bf00      	nop
9000293c:	4b35      	ldr	r3, [pc, #212]	; (90002a14 <GUI_Init+0x170>)
9000293e:	681b      	ldr	r3, [r3, #0]
90002940:	2b00      	cmp	r3, #0
90002942:	d1fb      	bne.n	9000293c <GUI_Init+0x98>
90002944:	4b34      	ldr	r3, [pc, #208]	; (90002a18 <GUI_Init+0x174>)
90002946:	4a30      	ldr	r2, [pc, #192]	; (90002a08 <GUI_Init+0x164>)
90002948:	601a      	str	r2, [r3, #0]
9000294a:	4b33      	ldr	r3, [pc, #204]	; (90002a18 <GUI_Init+0x174>)
9000294c:	681b      	ldr	r3, [r3, #0]
9000294e:	4a2f      	ldr	r2, [pc, #188]	; (90002a0c <GUI_Init+0x168>)
90002950:	4293      	cmp	r3, r2
90002952:	d000      	beq.n	90002956 <GUI_Init+0xb2>
90002954:	e7fe      	b.n	90002954 <GUI_Init+0xb0>
90002956:	f7ff ff59 	bl	9000280c <GUI__Config>
9000295a:	4b30      	ldr	r3, [pc, #192]	; (90002a1c <GUI_Init+0x178>)
9000295c:	222e      	movs	r2, #46	; 0x2e
9000295e:	701a      	strb	r2, [r3, #0]
90002960:	f7ff fa40 	bl	90001de4 <GUI_X_Init>
90002964:	482e      	ldr	r0, [pc, #184]	; (90002a20 <GUI_Init+0x17c>)
90002966:	f7ff fea9 	bl	900026bc <_InitContext>
9000296a:	f000 fd11 	bl	90003390 <emWin_LCD_Init>
9000296e:	6078      	str	r0, [r7, #4]
90002970:	f000 fef6 	bl	90003760 <LCD_GetXSizeDisplay>
90002974:	4603      	mov	r3, r0
90002976:	2b00      	cmp	r3, #0
90002978:	bf0c      	ite	eq
9000297a:	2301      	moveq	r3, #1
9000297c:	2300      	movne	r3, #0
9000297e:	b2dc      	uxtb	r4, r3
90002980:	f000 fef4 	bl	9000376c <LCD_GetYSizeDisplay>
90002984:	4603      	mov	r3, r0
90002986:	2b00      	cmp	r3, #0
90002988:	bf0c      	ite	eq
9000298a:	2301      	moveq	r3, #1
9000298c:	2300      	movne	r3, #0
9000298e:	b2db      	uxtb	r3, r3
90002990:	4323      	orrs	r3, r4
90002992:	b2db      	uxtb	r3, r3
90002994:	2b00      	cmp	r3, #0
90002996:	d009      	beq.n	900029ac <GUI_Init+0x108>
90002998:	f000 fed6 	bl	90003748 <LCD_GetXSizeMax>
9000299c:	4604      	mov	r4, r0
9000299e:	f000 fed6 	bl	9000374e <LCD_GetYSizeMax>
900029a2:	4603      	mov	r3, r0
900029a4:	4619      	mov	r1, r3
900029a6:	4620      	mov	r0, r4
900029a8:	f000 fed4 	bl	90003754 <LCD_SetDisplaySize>
900029ac:	2100      	movs	r1, #0
900029ae:	2000      	movs	r0, #0
900029b0:	f7ff fe68 	bl	90002684 <GUI_SetOrg>
900029b4:	f003 fef8 	bl	900067a8 <WM_Init>
900029b8:	4b1a      	ldr	r3, [pc, #104]	; (90002a24 <GUI_Init+0x180>)
900029ba:	681b      	ldr	r3, [r3, #0]
900029bc:	2b00      	cmp	r3, #0
900029be:	d012      	beq.n	900029e6 <GUI_Init+0x142>
900029c0:	e00d      	b.n	900029de <GUI_Init+0x13a>
900029c2:	4b18      	ldr	r3, [pc, #96]	; (90002a24 <GUI_Init+0x180>)
900029c4:	681b      	ldr	r3, [r3, #0]
900029c6:	681b      	ldr	r3, [r3, #0]
900029c8:	2b00      	cmp	r3, #0
900029ca:	d003      	beq.n	900029d4 <GUI_Init+0x130>
900029cc:	4b15      	ldr	r3, [pc, #84]	; (90002a24 <GUI_Init+0x180>)
900029ce:	681b      	ldr	r3, [r3, #0]
900029d0:	681b      	ldr	r3, [r3, #0]
900029d2:	4798      	blx	r3
900029d4:	4b13      	ldr	r3, [pc, #76]	; (90002a24 <GUI_Init+0x180>)
900029d6:	681b      	ldr	r3, [r3, #0]
900029d8:	685b      	ldr	r3, [r3, #4]
900029da:	4a12      	ldr	r2, [pc, #72]	; (90002a24 <GUI_Init+0x180>)
900029dc:	6013      	str	r3, [r2, #0]
900029de:	4b11      	ldr	r3, [pc, #68]	; (90002a24 <GUI_Init+0x180>)
900029e0:	681b      	ldr	r3, [r3, #0]
900029e2:	2b00      	cmp	r3, #0
900029e4:	d1ed      	bne.n	900029c2 <GUI_Init+0x11e>
900029e6:	4b10      	ldr	r3, [pc, #64]	; (90002a28 <GUI_Init+0x184>)
900029e8:	2201      	movs	r2, #1
900029ea:	701a      	strb	r2, [r3, #0]
900029ec:	687b      	ldr	r3, [r7, #4]
900029ee:	4618      	mov	r0, r3
900029f0:	370c      	adds	r7, #12
900029f2:	46bd      	mov	sp, r7
900029f4:	bd90      	pop	{r4, r7, pc}
900029f6:	bf00      	nop
900029f8:	e0002000 	.word	0xe0002000
900029fc:	e0042000 	.word	0xe0042000
90002a00:	40023008 	.word	0x40023008
90002a04:	40023000 	.word	0x40023000
90002a08:	f407a5c2 	.word	0xf407a5c2
90002a0c:	b5e8b5cd 	.word	0xb5e8b5cd
90002a10:	5c001000 	.word	0x5c001000
90002a14:	58024c08 	.word	0x58024c08
90002a18:	58024c00 	.word	0x58024c00
90002a1c:	20025bbc 	.word	0x20025bbc
90002a20:	20025970 	.word	0x20025970
90002a24:	200259e8 	.word	0x200259e8
90002a28:	20025be4 	.word	0x20025be4

90002a2c <GUI__RegisterExit>:
90002a2c:	b480      	push	{r7}
90002a2e:	b083      	sub	sp, #12
90002a30:	af00      	add	r7, sp, #0
90002a32:	6078      	str	r0, [r7, #4]
90002a34:	4b06      	ldr	r3, [pc, #24]	; (90002a50 <GUI__RegisterExit+0x24>)
90002a36:	681a      	ldr	r2, [r3, #0]
90002a38:	687b      	ldr	r3, [r7, #4]
90002a3a:	605a      	str	r2, [r3, #4]
90002a3c:	4a04      	ldr	r2, [pc, #16]	; (90002a50 <GUI__RegisterExit+0x24>)
90002a3e:	687b      	ldr	r3, [r7, #4]
90002a40:	6013      	str	r3, [r2, #0]
90002a42:	bf00      	nop
90002a44:	370c      	adds	r7, #12
90002a46:	46bd      	mov	sp, r7
90002a48:	f85d 7b04 	ldr.w	r7, [sp], #4
90002a4c:	4770      	bx	lr
90002a4e:	bf00      	nop
90002a50:	200259e4 	.word	0x200259e4

90002a54 <GUI_DEVICE__GetpDriver>:
90002a54:	2801      	cmp	r0, #1
90002a56:	dc09      	bgt.n	90002a6c <GUI_DEVICE__GetpDriver+0x18>
90002a58:	4b05      	ldr	r3, [pc, #20]	; (90002a70 <GUI_DEVICE__GetpDriver+0x1c>)
90002a5a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
90002a5e:	b120      	cbz	r0, 90002a6a <GUI_DEVICE__GetpDriver+0x16>
90002a60:	68c3      	ldr	r3, [r0, #12]
90002a62:	681b      	ldr	r3, [r3, #0]
90002a64:	b11b      	cbz	r3, 90002a6e <GUI_DEVICE__GetpDriver+0x1a>
90002a66:	6800      	ldr	r0, [r0, #0]
90002a68:	e7f9      	b.n	90002a5e <GUI_DEVICE__GetpDriver+0xa>
90002a6a:	4770      	bx	lr
90002a6c:	2000      	movs	r0, #0
90002a6e:	4770      	bx	lr
90002a70:	20025c04 	.word	0x20025c04

90002a74 <GUI_DEVICE_Delete>:
90002a74:	f7ff bb8e 	b.w	90002194 <GUI_ALLOC_FreeFixedBlock>

90002a78 <GUI_DEVICE_Create>:
90002a78:	2b01      	cmp	r3, #1
90002a7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90002a7c:	4606      	mov	r6, r0
90002a7e:	460d      	mov	r5, r1
90002a80:	4617      	mov	r7, r2
90002a82:	461c      	mov	r4, r3
90002a84:	dd01      	ble.n	90002a8a <GUI_DEVICE_Create+0x12>
90002a86:	2000      	movs	r0, #0
90002a88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90002a8a:	201c      	movs	r0, #28
90002a8c:	f7ff fc5a 	bl	90002344 <GUI_ALLOC_GetFixedBlock>
90002a90:	2800      	cmp	r0, #0
90002a92:	d0f8      	beq.n	90002a86 <GUI_DEVICE_Create+0xe>
90002a94:	b10d      	cbz	r5, 90002a9a <GUI_DEVICE_Create+0x22>
90002a96:	6105      	str	r5, [r0, #16]
90002a98:	e009      	b.n	90002aae <GUI_DEVICE_Create+0x36>
90002a9a:	4b09      	ldr	r3, [pc, #36]	; (90002ac0 <GUI_DEVICE_Create+0x48>)
90002a9c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
90002aa0:	b129      	cbz	r1, 90002aae <GUI_DEVICE_Create+0x36>
90002aa2:	680b      	ldr	r3, [r1, #0]
90002aa4:	b10b      	cbz	r3, 90002aaa <GUI_DEVICE_Create+0x32>
90002aa6:	4619      	mov	r1, r3
90002aa8:	e7fb      	b.n	90002aa2 <GUI_DEVICE_Create+0x2a>
90002aaa:	690b      	ldr	r3, [r1, #16]
90002aac:	6103      	str	r3, [r0, #16]
90002aae:	2300      	movs	r3, #0
90002ab0:	6184      	str	r4, [r0, #24]
90002ab2:	8287      	strh	r7, [r0, #20]
90002ab4:	60c6      	str	r6, [r0, #12]
90002ab6:	6003      	str	r3, [r0, #0]
90002ab8:	6043      	str	r3, [r0, #4]
90002aba:	6083      	str	r3, [r0, #8]
90002abc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90002abe:	bf00      	nop
90002ac0:	20025c04 	.word	0x20025c04

90002ac4 <GUI_DEVICE_Unlink>:
90002ac4:	6981      	ldr	r1, [r0, #24]
90002ac6:	4a0a      	ldr	r2, [pc, #40]	; (90002af0 <GUI_DEVICE_Unlink+0x2c>)
90002ac8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90002acc:	4298      	cmp	r0, r3
90002ace:	6803      	ldr	r3, [r0, #0]
90002ad0:	d104      	bne.n	90002adc <GUI_DEVICE_Unlink+0x18>
90002ad2:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
90002ad6:	b10b      	cbz	r3, 90002adc <GUI_DEVICE_Unlink+0x18>
90002ad8:	2200      	movs	r2, #0
90002ada:	605a      	str	r2, [r3, #4]
90002adc:	6842      	ldr	r2, [r0, #4]
90002ade:	b102      	cbz	r2, 90002ae2 <GUI_DEVICE_Unlink+0x1e>
90002ae0:	6013      	str	r3, [r2, #0]
90002ae2:	6803      	ldr	r3, [r0, #0]
90002ae4:	b103      	cbz	r3, 90002ae8 <GUI_DEVICE_Unlink+0x24>
90002ae6:	605a      	str	r2, [r3, #4]
90002ae8:	2300      	movs	r3, #0
90002aea:	6003      	str	r3, [r0, #0]
90002aec:	6043      	str	r3, [r0, #4]
90002aee:	4770      	bx	lr
90002af0:	20025c04 	.word	0x20025c04

90002af4 <GUI_DEVICE_Link>:
90002af4:	b530      	push	{r4, r5, lr}
90002af6:	b908      	cbnz	r0, 90002afc <GUI_DEVICE_Link+0x8>
90002af8:	2001      	movs	r0, #1
90002afa:	bd30      	pop	{r4, r5, pc}
90002afc:	6984      	ldr	r4, [r0, #24]
90002afe:	2c01      	cmp	r4, #1
90002b00:	dcfa      	bgt.n	90002af8 <GUI_DEVICE_Link+0x4>
90002b02:	4b1b      	ldr	r3, [pc, #108]	; (90002b70 <GUI_DEVICE_Link+0x7c>)
90002b04:	781a      	ldrb	r2, [r3, #0]
90002b06:	4294      	cmp	r4, r2
90002b08:	bfa4      	itt	ge
90002b0a:	1c62      	addge	r2, r4, #1
90002b0c:	701a      	strbge	r2, [r3, #0]
90002b0e:	4a19      	ldr	r2, [pc, #100]	; (90002b74 <GUI_DEVICE_Link+0x80>)
90002b10:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
90002b14:	4615      	mov	r5, r2
90002b16:	b91b      	cbnz	r3, 90002b20 <GUI_DEVICE_Link+0x2c>
90002b18:	f842 0024 	str.w	r0, [r2, r4, lsl #2]
90002b1c:	4618      	mov	r0, r3
90002b1e:	bd30      	pop	{r4, r5, pc}
90002b20:	685a      	ldr	r2, [r3, #4]
90002b22:	b10a      	cbz	r2, 90002b28 <GUI_DEVICE_Link+0x34>
90002b24:	4613      	mov	r3, r2
90002b26:	e7fb      	b.n	90002b20 <GUI_DEVICE_Link+0x2c>
90002b28:	68c2      	ldr	r2, [r0, #12]
90002b2a:	6812      	ldr	r2, [r2, #0]
90002b2c:	68d9      	ldr	r1, [r3, #12]
90002b2e:	6809      	ldr	r1, [r1, #0]
90002b30:	4291      	cmp	r1, r2
90002b32:	dd03      	ble.n	90002b3c <GUI_DEVICE_Link+0x48>
90002b34:	681b      	ldr	r3, [r3, #0]
90002b36:	2b00      	cmp	r3, #0
90002b38:	d1f8      	bne.n	90002b2c <GUI_DEVICE_Link+0x38>
90002b3a:	e7dd      	b.n	90002af8 <GUI_DEVICE_Link+0x4>
90002b3c:	d109      	bne.n	90002b52 <GUI_DEVICE_Link+0x5e>
90002b3e:	8a81      	ldrh	r1, [r0, #20]
90002b40:	2901      	cmp	r1, #1
90002b42:	d106      	bne.n	90002b52 <GUI_DEVICE_Link+0x5e>
90002b44:	6819      	ldr	r1, [r3, #0]
90002b46:	b121      	cbz	r1, 90002b52 <GUI_DEVICE_Link+0x5e>
90002b48:	460b      	mov	r3, r1
90002b4a:	68c9      	ldr	r1, [r1, #12]
90002b4c:	6809      	ldr	r1, [r1, #0]
90002b4e:	428a      	cmp	r2, r1
90002b50:	ddf8      	ble.n	90002b44 <GUI_DEVICE_Link+0x50>
90002b52:	685a      	ldr	r2, [r3, #4]
90002b54:	b112      	cbz	r2, 90002b5c <GUI_DEVICE_Link+0x68>
90002b56:	6010      	str	r0, [r2, #0]
90002b58:	6042      	str	r2, [r0, #4]
90002b5a:	e001      	b.n	90002b60 <GUI_DEVICE_Link+0x6c>
90002b5c:	f845 0024 	str.w	r0, [r5, r4, lsl #2]
90002b60:	6058      	str	r0, [r3, #4]
90002b62:	4298      	cmp	r0, r3
90002b64:	bf08      	it	eq
90002b66:	2300      	moveq	r3, #0
90002b68:	6003      	str	r3, [r0, #0]
90002b6a:	2000      	movs	r0, #0
90002b6c:	bd30      	pop	{r4, r5, pc}
90002b6e:	bf00      	nop
90002b70:	20025bb6 	.word	0x20025bb6
90002b74:	20025c04 	.word	0x20025c04

90002b78 <GUI_DEVICE_CreateAndLink>:
90002b78:	b538      	push	{r3, r4, r5, lr}
90002b7a:	461d      	mov	r5, r3
90002b7c:	f7ff ff7c 	bl	90002a78 <GUI_DEVICE_Create>
90002b80:	4604      	mov	r4, r0
90002b82:	b148      	cbz	r0, 90002b98 <GUI_DEVICE_CreateAndLink+0x20>
90002b84:	f7ff ffb6 	bl	90002af4 <GUI_DEVICE_Link>
90002b88:	68e3      	ldr	r3, [r4, #12]
90002b8a:	681b      	ldr	r3, [r3, #0]
90002b8c:	b923      	cbnz	r3, 90002b98 <GUI_DEVICE_CreateAndLink+0x20>
90002b8e:	4b03      	ldr	r3, [pc, #12]	; (90002b9c <GUI_DEVICE_CreateAndLink+0x24>)
90002b90:	3516      	adds	r5, #22
90002b92:	681b      	ldr	r3, [r3, #0]
90002b94:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
90002b98:	4620      	mov	r0, r4
90002b9a:	bd38      	pop	{r3, r4, r5, pc}
90002b9c:	200000a4 	.word	0x200000a4

90002ba0 <GUI_DispString>:
90002ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90002ba4:	4605      	mov	r5, r0
90002ba6:	b085      	sub	sp, #20
90002ba8:	2800      	cmp	r0, #0
90002baa:	d07f      	beq.n	90002cac <GUI_DispString+0x10c>
90002bac:	4c41      	ldr	r4, [pc, #260]	; (90002cb4 <GUI_DispString+0x114>)
90002bae:	f003 ffb5 	bl	90006b1c <GUI_GetFontDistY>
90002bb2:	4607      	mov	r7, r0
90002bb4:	6823      	ldr	r3, [r4, #0]
90002bb6:	46a1      	mov	r9, r4
90002bb8:	f9b3 8022 	ldrsh.w	r8, [r3, #34]	; 0x22
90002bbc:	f003 ff96 	bl	90006aec <GUI_GetYAdjust>
90002bc0:	6822      	ldr	r2, [r4, #0]
90002bc2:	b286      	uxth	r6, r0
90002bc4:	8c93      	ldrh	r3, [r2, #36]	; 0x24
90002bc6:	1b9b      	subs	r3, r3, r6
90002bc8:	8493      	strh	r3, [r2, #36]	; 0x24
90002bca:	782b      	ldrb	r3, [r5, #0]
90002bcc:	2b00      	cmp	r3, #0
90002bce:	d061      	beq.n	90002c94 <GUI_DispString+0xf4>
90002bd0:	f647 71ff 	movw	r1, #32767	; 0x7fff
90002bd4:	4628      	mov	r0, r5
90002bd6:	f004 f809 	bl	90006bec <GUI__GetLineNumChars>
90002bda:	4601      	mov	r1, r0
90002bdc:	4682      	mov	sl, r0
90002bde:	4628      	mov	r0, r5
90002be0:	f004 f82e 	bl	90006c40 <GUI__GetLineDistX>
90002be4:	6822      	ldr	r2, [r4, #0]
90002be6:	8d93      	ldrh	r3, [r2, #44]	; 0x2c
90002be8:	f003 0303 	and.w	r3, r3, #3
90002bec:	2b01      	cmp	r3, #1
90002bee:	d004      	beq.n	90002bfa <GUI_DispString+0x5a>
90002bf0:	2b02      	cmp	r3, #2
90002bf2:	d104      	bne.n	90002bfe <GUI_DispString+0x5e>
90002bf4:	fb90 f3f3 	sdiv	r3, r0, r3
90002bf8:	e002      	b.n	90002c00 <GUI_DispString+0x60>
90002bfa:	4603      	mov	r3, r0
90002bfc:	e000      	b.n	90002c00 <GUI_DispString+0x60>
90002bfe:	2300      	movs	r3, #0
90002c00:	8c51      	ldrh	r1, [r2, #34]	; 0x22
90002c02:	fa1f fb80 	uxth.w	fp, r0
90002c06:	4628      	mov	r0, r5
90002c08:	1acb      	subs	r3, r1, r3
90002c0a:	b29b      	uxth	r3, r3
90002c0c:	b219      	sxth	r1, r3
90002c0e:	8451      	strh	r1, [r2, #34]	; 0x22
90002c10:	f8ad 1008 	strh.w	r1, [sp, #8]
90002c14:	f10b 31ff 	add.w	r1, fp, #4294967295	; 0xffffffff
90002c18:	f9b2 2024 	ldrsh.w	r2, [r2, #36]	; 0x24
90002c1c:	440b      	add	r3, r1
90002c1e:	4651      	mov	r1, sl
90002c20:	f8ad 200a 	strh.w	r2, [sp, #10]
90002c24:	3a01      	subs	r2, #1
90002c26:	f8ad 300c 	strh.w	r3, [sp, #12]
90002c2a:	b2bb      	uxth	r3, r7
90002c2c:	441a      	add	r2, r3
90002c2e:	9301      	str	r3, [sp, #4]
90002c30:	f8ad 200e 	strh.w	r2, [sp, #14]
90002c34:	aa02      	add	r2, sp, #8
90002c36:	f004 f833 	bl	90006ca0 <GUI__DispLine>
90002c3a:	6822      	ldr	r2, [r4, #0]
90002c3c:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90002c40:	4628      	mov	r0, r5
90002c42:	8491      	strh	r1, [r2, #36]	; 0x24
90002c44:	4651      	mov	r1, sl
90002c46:	f000 f85b 	bl	90002d00 <GUI_UC__NumChars2NumBytes>
90002c4a:	5c2a      	ldrb	r2, [r5, r0]
90002c4c:	eb05 0e00 	add.w	lr, r5, r0
90002c50:	9b01      	ldr	r3, [sp, #4]
90002c52:	2a0a      	cmp	r2, #10
90002c54:	d001      	beq.n	90002c5a <GUI_DispString+0xba>
90002c56:	2a0d      	cmp	r2, #13
90002c58:	d112      	bne.n	90002c80 <GUI_DispString+0xe0>
90002c5a:	6822      	ldr	r2, [r4, #0]
90002c5c:	8d91      	ldrh	r1, [r2, #44]	; 0x2c
90002c5e:	f001 0103 	and.w	r1, r1, #3
90002c62:	3901      	subs	r1, #1
90002c64:	2901      	cmp	r1, #1
90002c66:	bf8a      	itet	hi
90002c68:	8c11      	ldrhhi	r1, [r2, #32]
90002c6a:	f8a2 8022 	strhls.w	r8, [r2, #34]	; 0x22
90002c6e:	8451      	strhhi	r1, [r2, #34]	; 0x22
90002c70:	f89e 1000 	ldrb.w	r1, [lr]
90002c74:	290a      	cmp	r1, #10
90002c76:	d10a      	bne.n	90002c8e <GUI_DispString+0xee>
90002c78:	8c91      	ldrh	r1, [r2, #36]	; 0x24
90002c7a:	440b      	add	r3, r1
90002c7c:	8493      	strh	r3, [r2, #36]	; 0x24
90002c7e:	e006      	b.n	90002c8e <GUI_DispString+0xee>
90002c80:	f8bd 0008 	ldrh.w	r0, [sp, #8]
90002c84:	f8d9 3000 	ldr.w	r3, [r9]
90002c88:	4483      	add	fp, r0
90002c8a:	f8a3 b022 	strh.w	fp, [r3, #34]	; 0x22
90002c8e:	f89e 3000 	ldrb.w	r3, [lr]
90002c92:	b943      	cbnz	r3, 90002ca6 <GUI_DispString+0x106>
90002c94:	6823      	ldr	r3, [r4, #0]
90002c96:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
90002c98:	4416      	add	r6, r2
90002c9a:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
90002c9c:	f022 0203 	bic.w	r2, r2, #3
90002ca0:	849e      	strh	r6, [r3, #36]	; 0x24
90002ca2:	859a      	strh	r2, [r3, #44]	; 0x2c
90002ca4:	e002      	b.n	90002cac <GUI_DispString+0x10c>
90002ca6:	f10e 0501 	add.w	r5, lr, #1
90002caa:	e78e      	b.n	90002bca <GUI_DispString+0x2a>
90002cac:	b005      	add	sp, #20
90002cae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90002cb2:	bf00      	nop
90002cb4:	200000a4 	.word	0x200000a4

90002cb8 <GUI_DispStringAt>:
90002cb8:	4b02      	ldr	r3, [pc, #8]	; (90002cc4 <GUI_DispStringAt+0xc>)
90002cba:	681b      	ldr	r3, [r3, #0]
90002cbc:	8459      	strh	r1, [r3, #34]	; 0x22
90002cbe:	849a      	strh	r2, [r3, #36]	; 0x24
90002cc0:	f7ff bf6e 	b.w	90002ba0 <GUI_DispString>
90002cc4:	200000a4 	.word	0x200000a4

90002cc8 <GUI_StoreKey>:
90002cc8:	4b02      	ldr	r3, [pc, #8]	; (90002cd4 <GUI_StoreKey+0xc>)
90002cca:	681a      	ldr	r2, [r3, #0]
90002ccc:	b902      	cbnz	r2, 90002cd0 <GUI_StoreKey+0x8>
90002cce:	6018      	str	r0, [r3, #0]
90002cd0:	f000 b832 	b.w	90002d38 <GUI_SignalEvent>
90002cd4:	20025a0c 	.word	0x20025a0c

90002cd8 <GUI_UC__GetCharCodeInc>:
90002cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90002cda:	4e08      	ldr	r6, [pc, #32]	; (90002cfc <GUI_UC__GetCharCodeInc+0x24>)
90002cdc:	4605      	mov	r5, r0
90002cde:	6804      	ldr	r4, [r0, #0]
90002ce0:	6833      	ldr	r3, [r6, #0]
90002ce2:	4620      	mov	r0, r4
90002ce4:	681b      	ldr	r3, [r3, #0]
90002ce6:	4798      	blx	r3
90002ce8:	6833      	ldr	r3, [r6, #0]
90002cea:	4607      	mov	r7, r0
90002cec:	4620      	mov	r0, r4
90002cee:	685b      	ldr	r3, [r3, #4]
90002cf0:	4798      	blx	r3
90002cf2:	4420      	add	r0, r4
90002cf4:	6028      	str	r0, [r5, #0]
90002cf6:	4638      	mov	r0, r7
90002cf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90002cfa:	bf00      	nop
90002cfc:	20025bfc 	.word	0x20025bfc

90002d00 <GUI_UC__NumChars2NumBytes>:
90002d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90002d02:	4606      	mov	r6, r0
90002d04:	460d      	mov	r5, r1
90002d06:	2400      	movs	r4, #0
90002d08:	4f05      	ldr	r7, [pc, #20]	; (90002d20 <GUI_UC__NumChars2NumBytes+0x20>)
90002d0a:	b13d      	cbz	r5, 90002d1c <GUI_UC__NumChars2NumBytes+0x1c>
90002d0c:	683b      	ldr	r3, [r7, #0]
90002d0e:	4630      	mov	r0, r6
90002d10:	3d01      	subs	r5, #1
90002d12:	685b      	ldr	r3, [r3, #4]
90002d14:	4798      	blx	r3
90002d16:	4406      	add	r6, r0
90002d18:	4404      	add	r4, r0
90002d1a:	e7f6      	b.n	90002d0a <GUI_UC__NumChars2NumBytes+0xa>
90002d1c:	4620      	mov	r0, r4
90002d1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90002d20:	20025bfc 	.word	0x20025bfc

90002d24 <_GetCharCode>:
90002d24:	7800      	ldrb	r0, [r0, #0]
90002d26:	4770      	bx	lr

90002d28 <_GetCharSize>:
90002d28:	2001      	movs	r0, #1
90002d2a:	4770      	bx	lr

90002d2c <_CalcSizeOfChar>:
90002d2c:	2001      	movs	r0, #1
90002d2e:	4770      	bx	lr

90002d30 <_Encode>:
90002d30:	7001      	strb	r1, [r0, #0]
90002d32:	2001      	movs	r0, #1
90002d34:	4770      	bx	lr
	...

90002d38 <GUI_SignalEvent>:
90002d38:	4b02      	ldr	r3, [pc, #8]	; (90002d44 <GUI_SignalEvent+0xc>)
90002d3a:	681b      	ldr	r3, [r3, #0]
90002d3c:	b103      	cbz	r3, 90002d40 <GUI_SignalEvent+0x8>
90002d3e:	4718      	bx	r3
90002d40:	4770      	bx	lr
90002d42:	bf00      	nop
90002d44:	20025a6c 	.word	0x20025a6c

90002d48 <GUI__IntersectRect>:
90002d48:	f9b1 3000 	ldrsh.w	r3, [r1]
90002d4c:	f9b0 2000 	ldrsh.w	r2, [r0]
90002d50:	429a      	cmp	r2, r3
90002d52:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90002d56:	bfb8      	it	lt
90002d58:	8003      	strhlt	r3, [r0, #0]
90002d5a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90002d5e:	429a      	cmp	r2, r3
90002d60:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90002d64:	bfb8      	it	lt
90002d66:	8043      	strhlt	r3, [r0, #2]
90002d68:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
90002d6c:	429a      	cmp	r2, r3
90002d6e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90002d72:	bfc8      	it	gt
90002d74:	8083      	strhgt	r3, [r0, #4]
90002d76:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90002d7a:	429a      	cmp	r2, r3
90002d7c:	bfc8      	it	gt
90002d7e:	80c3      	strhgt	r3, [r0, #6]
90002d80:	4770      	bx	lr

90002d82 <GUI__IntersectRects>:
90002d82:	b570      	push	{r4, r5, r6, lr}
90002d84:	f9b1 3000 	ldrsh.w	r3, [r1]
90002d88:	4606      	mov	r6, r0
90002d8a:	f9b2 5000 	ldrsh.w	r5, [r2]
90002d8e:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
90002d92:	429d      	cmp	r5, r3
90002d94:	bfb8      	it	lt
90002d96:	461d      	movlt	r5, r3
90002d98:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90002d9c:	8005      	strh	r5, [r0, #0]
90002d9e:	f9b2 0002 	ldrsh.w	r0, [r2, #2]
90002da2:	4283      	cmp	r3, r0
90002da4:	bfb8      	it	lt
90002da6:	4603      	movlt	r3, r0
90002da8:	f9b2 0004 	ldrsh.w	r0, [r2, #4]
90002dac:	4284      	cmp	r4, r0
90002dae:	8073      	strh	r3, [r6, #2]
90002db0:	bfa8      	it	ge
90002db2:	4604      	movge	r4, r0
90002db4:	f9b2 0006 	ldrsh.w	r0, [r2, #6]
90002db8:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
90002dbc:	80b4      	strh	r4, [r6, #4]
90002dbe:	4282      	cmp	r2, r0
90002dc0:	bfa8      	it	ge
90002dc2:	4602      	movge	r2, r0
90002dc4:	42a5      	cmp	r5, r4
90002dc6:	80f2      	strh	r2, [r6, #6]
90002dc8:	dc04      	bgt.n	90002dd4 <GUI__IntersectRects+0x52>
90002dca:	4293      	cmp	r3, r2
90002dcc:	bfcc      	ite	gt
90002dce:	2000      	movgt	r0, #0
90002dd0:	2001      	movle	r0, #1
90002dd2:	bd70      	pop	{r4, r5, r6, pc}
90002dd4:	2000      	movs	r0, #0
90002dd6:	bd70      	pop	{r4, r5, r6, pc}

90002dd8 <GUI__memset16>:
90002dd8:	b570      	push	{r4, r5, r6, lr}
90002dda:	0784      	lsls	r4, r0, #30
90002ddc:	bf42      	ittt	mi
90002dde:	f102 32ff 	addmi.w	r2, r2, #4294967295	; 0xffffffff
90002de2:	8001      	strhmi	r1, [r0, #0]
90002de4:	3002      	addmi	r0, #2
90002de6:	0854      	lsrs	r4, r2, #1
90002de8:	d023      	beq.n	90002e32 <GUI__memset16+0x5a>
90002dea:	2c03      	cmp	r4, #3
90002dec:	4623      	mov	r3, r4
90002dee:	eb01 4501 	add.w	r5, r1, r1, lsl #16
90002df2:	d802      	bhi.n	90002dfa <GUI__memset16+0x22>
90002df4:	eb00 0383 	add.w	r3, r0, r3, lsl #2
90002df8:	e016      	b.n	90002e28 <GUI__memset16+0x50>
90002dfa:	f100 0310 	add.w	r3, r0, #16
90002dfe:	4626      	mov	r6, r4
90002e00:	3e04      	subs	r6, #4
90002e02:	f843 5c10 	str.w	r5, [r3, #-16]
90002e06:	f843 5c0c 	str.w	r5, [r3, #-12]
90002e0a:	3310      	adds	r3, #16
90002e0c:	2e03      	cmp	r6, #3
90002e0e:	f843 5c18 	str.w	r5, [r3, #-24]
90002e12:	f843 5c14 	str.w	r5, [r3, #-20]
90002e16:	dcf3      	bgt.n	90002e00 <GUI__memset16+0x28>
90002e18:	3c04      	subs	r4, #4
90002e1a:	08a3      	lsrs	r3, r4, #2
90002e1c:	1c5e      	adds	r6, r3, #1
90002e1e:	eba4 0383 	sub.w	r3, r4, r3, lsl #2
90002e22:	eb00 1006 	add.w	r0, r0, r6, lsl #4
90002e26:	e7e5      	b.n	90002df4 <GUI__memset16+0x1c>
90002e28:	4298      	cmp	r0, r3
90002e2a:	d002      	beq.n	90002e32 <GUI__memset16+0x5a>
90002e2c:	f840 5b04 	str.w	r5, [r0], #4
90002e30:	e7fa      	b.n	90002e28 <GUI__memset16+0x50>
90002e32:	07d3      	lsls	r3, r2, #31
90002e34:	bf48      	it	mi
90002e36:	8001      	strhmi	r1, [r0, #0]
90002e38:	bd70      	pop	{r4, r5, r6, pc}
	...

90002e3c <_SetDrawMode>:
90002e3c:	4b08      	ldr	r3, [pc, #32]	; (90002e60 <_SetDrawMode+0x24>)
90002e3e:	681b      	ldr	r3, [r3, #0]
90002e40:	b570      	push	{r4, r5, r6, lr}
90002e42:	7c1a      	ldrb	r2, [r3, #16]
90002e44:	ea82 0100 	eor.w	r1, r2, r0
90002e48:	0749      	lsls	r1, r1, #29
90002e4a:	d505      	bpl.n	90002e58 <_SetDrawMode+0x1c>
90002e4c:	6b9c      	ldr	r4, [r3, #56]	; 0x38
90002e4e:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
90002e50:	6825      	ldr	r5, [r4, #0]
90002e52:	680e      	ldr	r6, [r1, #0]
90002e54:	6026      	str	r6, [r4, #0]
90002e56:	600d      	str	r5, [r1, #0]
90002e58:	7418      	strb	r0, [r3, #16]
90002e5a:	4610      	mov	r0, r2
90002e5c:	bd70      	pop	{r4, r5, r6, pc}
90002e5e:	bf00      	nop
90002e60:	200000a4 	.word	0x200000a4

90002e64 <LCD_SetDrawMode>:
90002e64:	4b01      	ldr	r3, [pc, #4]	; (90002e6c <LCD_SetDrawMode+0x8>)
90002e66:	681b      	ldr	r3, [r3, #0]
90002e68:	689b      	ldr	r3, [r3, #8]
90002e6a:	4718      	bx	r3
90002e6c:	200000b0 	.word	0x200000b0

90002e70 <LCD_DrawPixel>:
90002e70:	4b15      	ldr	r3, [pc, #84]	; (90002ec8 <LCD_DrawPixel+0x58>)
90002e72:	460a      	mov	r2, r1
90002e74:	681b      	ldr	r3, [r3, #0]
90002e76:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
90002e7a:	4291      	cmp	r1, r2
90002e7c:	b430      	push	{r4, r5}
90002e7e:	4604      	mov	r4, r0
90002e80:	dc20      	bgt.n	90002ec4 <LCD_DrawPixel+0x54>
90002e82:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90002e86:	428a      	cmp	r2, r1
90002e88:	dc1c      	bgt.n	90002ec4 <LCD_DrawPixel+0x54>
90002e8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90002e8e:	4281      	cmp	r1, r0
90002e90:	dc18      	bgt.n	90002ec4 <LCD_DrawPixel+0x54>
90002e92:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
90002e96:	4288      	cmp	r0, r1
90002e98:	dc14      	bgt.n	90002ec4 <LCD_DrawPixel+0x54>
90002e9a:	7c19      	ldrb	r1, [r3, #16]
90002e9c:	7c58      	ldrb	r0, [r3, #17]
90002e9e:	f011 0f01 	tst.w	r1, #1
90002ea2:	490a      	ldr	r1, [pc, #40]	; (90002ecc <LCD_DrawPixel+0x5c>)
90002ea4:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
90002ea8:	d004      	beq.n	90002eb4 <LCD_DrawPixel+0x44>
90002eaa:	68c3      	ldr	r3, [r0, #12]
90002eac:	4621      	mov	r1, r4
90002eae:	69db      	ldr	r3, [r3, #28]
90002eb0:	bc30      	pop	{r4, r5}
90002eb2:	4718      	bx	r3
90002eb4:	68c1      	ldr	r1, [r0, #12]
90002eb6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90002eb8:	698d      	ldr	r5, [r1, #24]
90002eba:	4621      	mov	r1, r4
90002ebc:	681b      	ldr	r3, [r3, #0]
90002ebe:	46ac      	mov	ip, r5
90002ec0:	bc30      	pop	{r4, r5}
90002ec2:	4760      	bx	ip
90002ec4:	bc30      	pop	{r4, r5}
90002ec6:	4770      	bx	lr
90002ec8:	200000a4 	.word	0x200000a4
90002ecc:	20025c04 	.word	0x20025c04

90002ed0 <LCD_DrawHLine>:
90002ed0:	4b11      	ldr	r3, [pc, #68]	; (90002f18 <LCD_DrawHLine+0x48>)
90002ed2:	b430      	push	{r4, r5}
90002ed4:	681c      	ldr	r4, [r3, #0]
90002ed6:	460d      	mov	r5, r1
90002ed8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90002edc:	428b      	cmp	r3, r1
90002ede:	dc19      	bgt.n	90002f14 <LCD_DrawHLine+0x44>
90002ee0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90002ee4:	4299      	cmp	r1, r3
90002ee6:	dc15      	bgt.n	90002f14 <LCD_DrawHLine+0x44>
90002ee8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90002eec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90002ef0:	4281      	cmp	r1, r0
90002ef2:	bfb8      	it	lt
90002ef4:	4601      	movlt	r1, r0
90002ef6:	4293      	cmp	r3, r2
90002ef8:	bfa8      	it	ge
90002efa:	4613      	movge	r3, r2
90002efc:	4299      	cmp	r1, r3
90002efe:	dc09      	bgt.n	90002f14 <LCD_DrawHLine+0x44>
90002f00:	7c60      	ldrb	r0, [r4, #17]
90002f02:	4a06      	ldr	r2, [pc, #24]	; (90002f1c <LCD_DrawHLine+0x4c>)
90002f04:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
90002f08:	68c2      	ldr	r2, [r0, #12]
90002f0a:	6894      	ldr	r4, [r2, #8]
90002f0c:	462a      	mov	r2, r5
90002f0e:	46a4      	mov	ip, r4
90002f10:	bc30      	pop	{r4, r5}
90002f12:	4760      	bx	ip
90002f14:	bc30      	pop	{r4, r5}
90002f16:	4770      	bx	lr
90002f18:	200000a4 	.word	0x200000a4
90002f1c:	20025c04 	.word	0x20025c04

90002f20 <LCD_FillRect>:
90002f20:	b573      	push	{r0, r1, r4, r5, r6, lr}
90002f22:	4c13      	ldr	r4, [pc, #76]	; (90002f70 <LCD_FillRect+0x50>)
90002f24:	6824      	ldr	r4, [r4, #0]
90002f26:	f9b4 5008 	ldrsh.w	r5, [r4, #8]
90002f2a:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90002f2e:	4285      	cmp	r5, r0
90002f30:	bfb8      	it	lt
90002f32:	4605      	movlt	r5, r0
90002f34:	4296      	cmp	r6, r2
90002f36:	bfa8      	it	ge
90002f38:	4616      	movge	r6, r2
90002f3a:	42ae      	cmp	r6, r5
90002f3c:	db15      	blt.n	90002f6a <LCD_FillRect+0x4a>
90002f3e:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90002f42:	428a      	cmp	r2, r1
90002f44:	bfb8      	it	lt
90002f46:	460a      	movlt	r2, r1
90002f48:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90002f4c:	428b      	cmp	r3, r1
90002f4e:	bfa8      	it	ge
90002f50:	460b      	movge	r3, r1
90002f52:	429a      	cmp	r2, r3
90002f54:	dc09      	bgt.n	90002f6a <LCD_FillRect+0x4a>
90002f56:	7c60      	ldrb	r0, [r4, #17]
90002f58:	4906      	ldr	r1, [pc, #24]	; (90002f74 <LCD_FillRect+0x54>)
90002f5a:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
90002f5e:	68c1      	ldr	r1, [r0, #12]
90002f60:	9300      	str	r3, [sp, #0]
90002f62:	4633      	mov	r3, r6
90002f64:	690c      	ldr	r4, [r1, #16]
90002f66:	4629      	mov	r1, r5
90002f68:	47a0      	blx	r4
90002f6a:	b002      	add	sp, #8
90002f6c:	bd70      	pop	{r4, r5, r6, pc}
90002f6e:	bf00      	nop
90002f70:	200000a4 	.word	0x200000a4
90002f74:	20025c04 	.word	0x20025c04

90002f78 <LCD__DrawBitmap_1bpp>:
90002f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90002f7c:	b08f      	sub	sp, #60	; 0x3c
90002f7e:	f8df e1cc 	ldr.w	lr, [pc, #460]	; 9000314c <LCD__DrawBitmap_1bpp+0x1d4>
90002f82:	460c      	mov	r4, r1
90002f84:	4617      	mov	r7, r2
90002f86:	9d18      	ldr	r5, [sp, #96]	; 0x60
90002f88:	f8de e000 	ldr.w	lr, [lr]
90002f8c:	9502      	str	r5, [sp, #8]
90002f8e:	9d19      	ldr	r5, [sp, #100]	; 0x64
90002f90:	9007      	str	r0, [sp, #28]
90002f92:	9508      	str	r5, [sp, #32]
90002f94:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
90002f96:	9301      	str	r3, [sp, #4]
90002f98:	9503      	str	r5, [sp, #12]
90002f9a:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
90002f9e:	9e1c      	ldr	r6, [sp, #112]	; 0x70
90002fa0:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
90002fa4:	9d1e      	ldr	r5, [sp, #120]	; 0x78
90002fa6:	f1be 0f00 	cmp.w	lr, #0
90002faa:	d002      	beq.n	90002fb2 <LCD__DrawBitmap_1bpp+0x3a>
90002fac:	f8de 4000 	ldr.w	r4, [lr]
90002fb0:	e054      	b.n	9000305c <LCD__DrawBitmap_1bpp+0xe4>
90002fb2:	9b02      	ldr	r3, [sp, #8]
90002fb4:	9a08      	ldr	r2, [sp, #32]
90002fb6:	4313      	orrs	r3, r2
90002fb8:	2b01      	cmp	r3, #1
90002fba:	d154      	bne.n	90003066 <LCD__DrawBitmap_1bpp+0xee>
90002fbc:	4b61      	ldr	r3, [pc, #388]	; (90003144 <LCD__DrawBitmap_1bpp+0x1cc>)
90002fbe:	6818      	ldr	r0, [r3, #0]
90002fc0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90002fc4:	1a53      	subs	r3, r2, r1
90002fc6:	2b00      	cmp	r3, #0
90002fc8:	dd0a      	ble.n	90002fe0 <LCD__DrawBitmap_1bpp+0x68>
90002fca:	9901      	ldr	r1, [sp, #4]
90002fcc:	ebc3 0e01 	rsb	lr, r3, r1
90002fd0:	f1be 0f00 	cmp.w	lr, #0
90002fd4:	f340 80b2 	ble.w	9000313c <LCD__DrawBitmap_1bpp+0x1c4>
90002fd8:	9903      	ldr	r1, [sp, #12]
90002fda:	fb01 6603 	mla	r6, r1, r3, r6
90002fde:	e002      	b.n	90002fe6 <LCD__DrawBitmap_1bpp+0x6e>
90002fe0:	f8dd e004 	ldr.w	lr, [sp, #4]
90002fe4:	460a      	mov	r2, r1
90002fe6:	9b01      	ldr	r3, [sp, #4]
90002fe8:	441c      	add	r4, r3
90002fea:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
90002fee:	3c01      	subs	r4, #1
90002ff0:	1ae4      	subs	r4, r4, r3
90002ff2:	2c00      	cmp	r4, #0
90002ff4:	dd05      	ble.n	90003002 <LCD__DrawBitmap_1bpp+0x8a>
90002ff6:	ebc4 0e0e 	rsb	lr, r4, lr
90002ffa:	f1be 0f00 	cmp.w	lr, #0
90002ffe:	f340 809d 	ble.w	9000313c <LCD__DrawBitmap_1bpp+0x1c4>
90003002:	9b07      	ldr	r3, [sp, #28]
90003004:	f9b0 100c 	ldrsh.w	r1, [r0, #12]
90003008:	443b      	add	r3, r7
9000300a:	3b01      	subs	r3, #1
9000300c:	1a5b      	subs	r3, r3, r1
9000300e:	2b00      	cmp	r3, #0
90003010:	bfc8      	it	gt
90003012:	1aff      	subgt	r7, r7, r3
90003014:	9b07      	ldr	r3, [sp, #28]
90003016:	1b59      	subs	r1, r3, r5
90003018:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9000301c:	4299      	cmp	r1, r3
9000301e:	da09      	bge.n	90003034 <LCD__DrawBitmap_1bpp+0xbc>
90003020:	1a5b      	subs	r3, r3, r1
90003022:	441d      	add	r5, r3
90003024:	1aff      	subs	r7, r7, r3
90003026:	f023 0307 	bic.w	r3, r3, #7
9000302a:	eb06 06e5 	add.w	r6, r6, r5, asr #3
9000302e:	f005 0507 	and.w	r5, r5, #7
90003032:	4419      	add	r1, r3
90003034:	2f00      	cmp	r7, #0
90003036:	f340 8081 	ble.w	9000313c <LCD__DrawBitmap_1bpp+0x1c4>
9000303a:	7c40      	ldrb	r0, [r0, #17]
9000303c:	4b42      	ldr	r3, [pc, #264]	; (90003148 <LCD__DrawBitmap_1bpp+0x1d0>)
9000303e:	9c03      	ldr	r4, [sp, #12]
90003040:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
90003044:	68c3      	ldr	r3, [r0, #12]
90003046:	f8cd b074 	str.w	fp, [sp, #116]	; 0x74
9000304a:	951c      	str	r5, [sp, #112]	; 0x70
9000304c:	961b      	str	r6, [sp, #108]	; 0x6c
9000304e:	941a      	str	r4, [sp, #104]	; 0x68
90003050:	f8cd a064 	str.w	sl, [sp, #100]	; 0x64
90003054:	f8cd e060 	str.w	lr, [sp, #96]	; 0x60
90003058:	685c      	ldr	r4, [r3, #4]
9000305a:	463b      	mov	r3, r7
9000305c:	46a4      	mov	ip, r4
9000305e:	b00f      	add	sp, #60	; 0x3c
90003060:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003064:	4760      	bx	ip
90003066:	f1ca 0308 	rsb	r3, sl, #8
9000306a:	4675      	mov	r5, lr
9000306c:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 90003144 <LCD__DrawBitmap_1bpp+0x1cc>
90003070:	930b      	str	r3, [sp, #44]	; 0x2c
90003072:	9b02      	ldr	r3, [sp, #8]
90003074:	f8cd e014 	str.w	lr, [sp, #20]
90003078:	3b01      	subs	r3, #1
9000307a:	930d      	str	r3, [sp, #52]	; 0x34
9000307c:	9b05      	ldr	r3, [sp, #20]
9000307e:	9a01      	ldr	r2, [sp, #4]
90003080:	4293      	cmp	r3, r2
90003082:	da5b      	bge.n	9000313c <LCD__DrawBitmap_1bpp+0x1c4>
90003084:	9b08      	ldr	r3, [sp, #32]
90003086:	18e3      	adds	r3, r4, r3
90003088:	9309      	str	r3, [sp, #36]	; 0x24
9000308a:	3b01      	subs	r3, #1
9000308c:	930a      	str	r3, [sp, #40]	; 0x28
9000308e:	f8d9 3000 	ldr.w	r3, [r9]
90003092:	990a      	ldr	r1, [sp, #40]	; 0x28
90003094:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
90003098:	428a      	cmp	r2, r1
9000309a:	dc48      	bgt.n	9000312e <LCD__DrawBitmap_1bpp+0x1b6>
9000309c:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
900030a0:	429c      	cmp	r4, r3
900030a2:	dc44      	bgt.n	9000312e <LCD__DrawBitmap_1bpp+0x1b6>
900030a4:	9b07      	ldr	r3, [sp, #28]
900030a6:	f04f 0800 	mov.w	r8, #0
900030aa:	9606      	str	r6, [sp, #24]
900030ac:	9300      	str	r3, [sp, #0]
900030ae:	f8cd 8010 	str.w	r8, [sp, #16]
900030b2:	9b04      	ldr	r3, [sp, #16]
900030b4:	42bb      	cmp	r3, r7
900030b6:	da3a      	bge.n	9000312e <LCD__DrawBitmap_1bpp+0x1b6>
900030b8:	f1b8 0f00 	cmp.w	r8, #0
900030bc:	d105      	bne.n	900030ca <LCD__DrawBitmap_1bpp+0x152>
900030be:	9b06      	ldr	r3, [sp, #24]
900030c0:	f04f 0808 	mov.w	r8, #8
900030c4:	781d      	ldrb	r5, [r3, #0]
900030c6:	3301      	adds	r3, #1
900030c8:	9306      	str	r3, [sp, #24]
900030ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900030cc:	ebca 0808 	rsb	r8, sl, r8
900030d0:	fa45 f303 	asr.w	r3, r5, r3
900030d4:	fa05 f50a 	lsl.w	r5, r5, sl
900030d8:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
900030dc:	b2ed      	uxtb	r5, r5
900030de:	d104      	bne.n	900030ea <LCD__DrawBitmap_1bpp+0x172>
900030e0:	f8d9 2000 	ldr.w	r2, [r9]
900030e4:	7c12      	ldrb	r2, [r2, #16]
900030e6:	0792      	lsls	r2, r2, #30
900030e8:	d419      	bmi.n	9000311e <LCD__DrawBitmap_1bpp+0x1a6>
900030ea:	f8d9 2000 	ldr.w	r2, [r9]
900030ee:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
900030f0:	6810      	ldr	r0, [r2, #0]
900030f2:	900c      	str	r0, [sp, #48]	; 0x30
900030f4:	f1bb 0f00 	cmp.w	fp, #0
900030f8:	d002      	beq.n	90003100 <LCD__DrawBitmap_1bpp+0x188>
900030fa:	f85b 3021 	ldr.w	r3, [fp, r1, lsl #2]
900030fe:	e000      	b.n	90003102 <LCD__DrawBitmap_1bpp+0x18a>
90003100:	b2db      	uxtb	r3, r3
90003102:	6013      	str	r3, [r2, #0]
90003104:	9900      	ldr	r1, [sp, #0]
90003106:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90003108:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000310a:	440a      	add	r2, r1
9000310c:	9800      	ldr	r0, [sp, #0]
9000310e:	4621      	mov	r1, r4
90003110:	f7ff ff06 	bl	90002f20 <LCD_FillRect>
90003114:	f8d9 3000 	ldr.w	r3, [r9]
90003118:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9000311a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000311c:	601a      	str	r2, [r3, #0]
9000311e:	9b04      	ldr	r3, [sp, #16]
90003120:	9a02      	ldr	r2, [sp, #8]
90003122:	3301      	adds	r3, #1
90003124:	9304      	str	r3, [sp, #16]
90003126:	9b00      	ldr	r3, [sp, #0]
90003128:	4413      	add	r3, r2
9000312a:	9300      	str	r3, [sp, #0]
9000312c:	e7c1      	b.n	900030b2 <LCD__DrawBitmap_1bpp+0x13a>
9000312e:	9b05      	ldr	r3, [sp, #20]
90003130:	9c09      	ldr	r4, [sp, #36]	; 0x24
90003132:	3301      	adds	r3, #1
90003134:	9305      	str	r3, [sp, #20]
90003136:	9b03      	ldr	r3, [sp, #12]
90003138:	441e      	add	r6, r3
9000313a:	e79f      	b.n	9000307c <LCD__DrawBitmap_1bpp+0x104>
9000313c:	b00f      	add	sp, #60	; 0x3c
9000313e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90003142:	bf00      	nop
90003144:	200000a4 	.word	0x200000a4
90003148:	20025c04 	.word	0x20025c04
9000314c:	20025bc0 	.word	0x20025bc0

90003150 <LCD_DrawBitmap>:
90003150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003154:	b08f      	sub	sp, #60	; 0x3c
90003156:	f8df e218 	ldr.w	lr, [pc, #536]	; 90003370 <LCD_DrawBitmap+0x220>
9000315a:	4605      	mov	r5, r0
9000315c:	4690      	mov	r8, r2
9000315e:	9c18      	ldr	r4, [sp, #96]	; 0x60
90003160:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90003162:	9402      	str	r4, [sp, #8]
90003164:	9c19      	ldr	r4, [sp, #100]	; 0x64
90003166:	f8de e000 	ldr.w	lr, [lr]
9000316a:	9408      	str	r4, [sp, #32]
9000316c:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
9000316e:	9100      	str	r1, [sp, #0]
90003170:	9403      	str	r4, [sp, #12]
90003172:	9301      	str	r3, [sp, #4]
90003174:	9f1a      	ldr	r7, [sp, #104]	; 0x68
90003176:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90003178:	9604      	str	r6, [sp, #16]
9000317a:	f1be 0f00 	cmp.w	lr, #0
9000317e:	d002      	beq.n	90003186 <LCD_DrawBitmap+0x36>
90003180:	f8de 4000 	ldr.w	r4, [lr]
90003184:	e07a      	b.n	9000327c <LCD_DrawBitmap+0x12c>
90003186:	9b02      	ldr	r3, [sp, #8]
90003188:	9a08      	ldr	r2, [sp, #32]
9000318a:	4313      	orrs	r3, r2
9000318c:	2b01      	cmp	r3, #1
9000318e:	d17a      	bne.n	90003286 <LCD_DrawBitmap+0x136>
90003190:	4b75      	ldr	r3, [pc, #468]	; (90003368 <LCD_DrawBitmap+0x218>)
90003192:	9901      	ldr	r1, [sp, #4]
90003194:	6818      	ldr	r0, [r3, #0]
90003196:	9b00      	ldr	r3, [sp, #0]
90003198:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9000319c:	1ad3      	subs	r3, r2, r3
9000319e:	2b00      	cmp	r3, #0
900031a0:	dd07      	ble.n	900031b2 <LCD_DrawBitmap+0x62>
900031a2:	1ac9      	subs	r1, r1, r3
900031a4:	2900      	cmp	r1, #0
900031a6:	f340 80db 	ble.w	90003360 <LCD_DrawBitmap+0x210>
900031aa:	9e03      	ldr	r6, [sp, #12]
900031ac:	fb06 4403 	mla	r4, r6, r3, r4
900031b0:	e000      	b.n	900031b4 <LCD_DrawBitmap+0x64>
900031b2:	9a00      	ldr	r2, [sp, #0]
900031b4:	e89d 0048 	ldmia.w	sp, {r3, r6}
900031b8:	441e      	add	r6, r3
900031ba:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
900031be:	3e01      	subs	r6, #1
900031c0:	1af6      	subs	r6, r6, r3
900031c2:	2e00      	cmp	r6, #0
900031c4:	dd03      	ble.n	900031ce <LCD_DrawBitmap+0x7e>
900031c6:	1b89      	subs	r1, r1, r6
900031c8:	2900      	cmp	r1, #0
900031ca:	f340 80c9 	ble.w	90003360 <LCD_DrawBitmap+0x210>
900031ce:	eb05 0308 	add.w	r3, r5, r8
900031d2:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
900031d6:	3b01      	subs	r3, #1
900031d8:	1b9b      	subs	r3, r3, r6
900031da:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
900031de:	2b00      	cmp	r3, #0
900031e0:	bfc8      	it	gt
900031e2:	ebc3 0808 	rsbgt	r8, r3, r8
900031e6:	42b5      	cmp	r5, r6
900031e8:	da31      	bge.n	9000324e <LCD_DrawBitmap+0xfe>
900031ea:	1b73      	subs	r3, r6, r5
900031ec:	2f08      	cmp	r7, #8
900031ee:	ebc3 0808 	rsb	r8, r3, r8
900031f2:	d027      	beq.n	90003244 <LCD_DrawBitmap+0xf4>
900031f4:	dc0d      	bgt.n	90003212 <LCD_DrawBitmap+0xc2>
900031f6:	2f02      	cmp	r7, #2
900031f8:	d014      	beq.n	90003224 <LCD_DrawBitmap+0xd4>
900031fa:	2f04      	cmp	r7, #4
900031fc:	d01a      	beq.n	90003234 <LCD_DrawBitmap+0xe4>
900031fe:	2f01      	cmp	r7, #1
90003200:	d126      	bne.n	90003250 <LCD_DrawBitmap+0x100>
90003202:	f023 0607 	bic.w	r6, r3, #7
90003206:	eb04 04e3 	add.w	r4, r4, r3, asr #3
9000320a:	f003 0307 	and.w	r3, r3, #7
9000320e:	4435      	add	r5, r6
90003210:	e01e      	b.n	90003250 <LCD_DrawBitmap+0x100>
90003212:	2f18      	cmp	r7, #24
90003214:	d018      	beq.n	90003248 <LCD_DrawBitmap+0xf8>
90003216:	2f20      	cmp	r7, #32
90003218:	d016      	beq.n	90003248 <LCD_DrawBitmap+0xf8>
9000321a:	2f10      	cmp	r7, #16
9000321c:	d118      	bne.n	90003250 <LCD_DrawBitmap+0x100>
9000321e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90003222:	e013      	b.n	9000324c <LCD_DrawBitmap+0xfc>
90003224:	f023 0603 	bic.w	r6, r3, #3
90003228:	eb04 04a3 	add.w	r4, r4, r3, asr #2
9000322c:	f003 0303 	and.w	r3, r3, #3
90003230:	4435      	add	r5, r6
90003232:	e00d      	b.n	90003250 <LCD_DrawBitmap+0x100>
90003234:	f023 0601 	bic.w	r6, r3, #1
90003238:	eb04 0463 	add.w	r4, r4, r3, asr #1
9000323c:	f003 0301 	and.w	r3, r3, #1
90003240:	4435      	add	r5, r6
90003242:	e005      	b.n	90003250 <LCD_DrawBitmap+0x100>
90003244:	441c      	add	r4, r3
90003246:	e001      	b.n	9000324c <LCD_DrawBitmap+0xfc>
90003248:	eb04 0483 	add.w	r4, r4, r3, lsl #2
9000324c:	4635      	mov	r5, r6
9000324e:	2300      	movs	r3, #0
90003250:	f1b8 0f00 	cmp.w	r8, #0
90003254:	f340 8084 	ble.w	90003360 <LCD_DrawBitmap+0x210>
90003258:	7c46      	ldrb	r6, [r0, #17]
9000325a:	4844      	ldr	r0, [pc, #272]	; (9000336c <LCD_DrawBitmap+0x21c>)
9000325c:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
90003260:	9e04      	ldr	r6, [sp, #16]
90003262:	f8d0 e00c 	ldr.w	lr, [r0, #12]
90003266:	931c      	str	r3, [sp, #112]	; 0x70
90003268:	9b03      	ldr	r3, [sp, #12]
9000326a:	9118      	str	r1, [sp, #96]	; 0x60
9000326c:	4629      	mov	r1, r5
9000326e:	931a      	str	r3, [sp, #104]	; 0x68
90003270:	4643      	mov	r3, r8
90003272:	961d      	str	r6, [sp, #116]	; 0x74
90003274:	941b      	str	r4, [sp, #108]	; 0x6c
90003276:	9719      	str	r7, [sp, #100]	; 0x64
90003278:	f8de 4004 	ldr.w	r4, [lr, #4]
9000327c:	46a4      	mov	ip, r4
9000327e:	b00f      	add	sp, #60	; 0x3c
90003280:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003284:	4760      	bx	ip
90003286:	f1c7 0308 	rsb	r3, r7, #8
9000328a:	46f3      	mov	fp, lr
9000328c:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 90003368 <LCD_DrawBitmap+0x218>
90003290:	930b      	str	r3, [sp, #44]	; 0x2c
90003292:	9b02      	ldr	r3, [sp, #8]
90003294:	f8cd e018 	str.w	lr, [sp, #24]
90003298:	3b01      	subs	r3, #1
9000329a:	930d      	str	r3, [sp, #52]	; 0x34
9000329c:	9b06      	ldr	r3, [sp, #24]
9000329e:	9a01      	ldr	r2, [sp, #4]
900032a0:	4293      	cmp	r3, r2
900032a2:	da5d      	bge.n	90003360 <LCD_DrawBitmap+0x210>
900032a4:	9a00      	ldr	r2, [sp, #0]
900032a6:	9b08      	ldr	r3, [sp, #32]
900032a8:	4413      	add	r3, r2
900032aa:	9309      	str	r3, [sp, #36]	; 0x24
900032ac:	3b01      	subs	r3, #1
900032ae:	930a      	str	r3, [sp, #40]	; 0x28
900032b0:	f8da 3000 	ldr.w	r3, [sl]
900032b4:	990a      	ldr	r1, [sp, #40]	; 0x28
900032b6:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
900032ba:	428a      	cmp	r2, r1
900032bc:	dc48      	bgt.n	90003350 <LCD_DrawBitmap+0x200>
900032be:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
900032c2:	9a00      	ldr	r2, [sp, #0]
900032c4:	429a      	cmp	r2, r3
900032c6:	dc43      	bgt.n	90003350 <LCD_DrawBitmap+0x200>
900032c8:	f04f 0900 	mov.w	r9, #0
900032cc:	462e      	mov	r6, r5
900032ce:	9407      	str	r4, [sp, #28]
900032d0:	f8cd 9014 	str.w	r9, [sp, #20]
900032d4:	9b05      	ldr	r3, [sp, #20]
900032d6:	4543      	cmp	r3, r8
900032d8:	da3a      	bge.n	90003350 <LCD_DrawBitmap+0x200>
900032da:	f1b9 0f00 	cmp.w	r9, #0
900032de:	d106      	bne.n	900032ee <LCD_DrawBitmap+0x19e>
900032e0:	9b07      	ldr	r3, [sp, #28]
900032e2:	f04f 0908 	mov.w	r9, #8
900032e6:	f893 b000 	ldrb.w	fp, [r3]
900032ea:	3301      	adds	r3, #1
900032ec:	9307      	str	r3, [sp, #28]
900032ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900032f0:	fa0b f207 	lsl.w	r2, fp, r7
900032f4:	ebc7 0909 	rsb	r9, r7, r9
900032f8:	fa4b f303 	asr.w	r3, fp, r3
900032fc:	fa5f fb82 	uxtb.w	fp, r2
90003300:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
90003304:	d104      	bne.n	90003310 <LCD_DrawBitmap+0x1c0>
90003306:	f8da 2000 	ldr.w	r2, [sl]
9000330a:	7c12      	ldrb	r2, [r2, #16]
9000330c:	0792      	lsls	r2, r2, #30
9000330e:	d417      	bmi.n	90003340 <LCD_DrawBitmap+0x1f0>
90003310:	f8da 2000 	ldr.w	r2, [sl]
90003314:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
90003316:	6810      	ldr	r0, [r2, #0]
90003318:	900c      	str	r0, [sp, #48]	; 0x30
9000331a:	9804      	ldr	r0, [sp, #16]
9000331c:	b110      	cbz	r0, 90003324 <LCD_DrawBitmap+0x1d4>
9000331e:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
90003322:	e000      	b.n	90003326 <LCD_DrawBitmap+0x1d6>
90003324:	b2db      	uxtb	r3, r3
90003326:	6013      	str	r3, [r2, #0]
90003328:	4630      	mov	r0, r6
9000332a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9000332c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000332e:	4432      	add	r2, r6
90003330:	9900      	ldr	r1, [sp, #0]
90003332:	f7ff fdf5 	bl	90002f20 <LCD_FillRect>
90003336:	f8da 3000 	ldr.w	r3, [sl]
9000333a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9000333c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000333e:	601a      	str	r2, [r3, #0]
90003340:	9b05      	ldr	r3, [sp, #20]
90003342:	9a02      	ldr	r2, [sp, #8]
90003344:	3301      	adds	r3, #1
90003346:	9305      	str	r3, [sp, #20]
90003348:	4633      	mov	r3, r6
9000334a:	4413      	add	r3, r2
9000334c:	461e      	mov	r6, r3
9000334e:	e7c1      	b.n	900032d4 <LCD_DrawBitmap+0x184>
90003350:	9b06      	ldr	r3, [sp, #24]
90003352:	3301      	adds	r3, #1
90003354:	9306      	str	r3, [sp, #24]
90003356:	9b03      	ldr	r3, [sp, #12]
90003358:	441c      	add	r4, r3
9000335a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000335c:	9300      	str	r3, [sp, #0]
9000335e:	e79d      	b.n	9000329c <LCD_DrawBitmap+0x14c>
90003360:	b00f      	add	sp, #60	; 0x3c
90003362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90003366:	bf00      	nop
90003368:	200000a4 	.word	0x200000a4
9000336c:	20025c04 	.word	0x20025c04
90003370:	20025bc0 	.word	0x20025bc0

90003374 <LCD_SetClipRectMax>:
90003374:	4b04      	ldr	r3, [pc, #16]	; (90003388 <LCD_SetClipRectMax+0x14>)
90003376:	6819      	ldr	r1, [r3, #0]
90003378:	4b04      	ldr	r3, [pc, #16]	; (9000338c <LCD_SetClipRectMax+0x18>)
9000337a:	7c4a      	ldrb	r2, [r1, #17]
9000337c:	3108      	adds	r1, #8
9000337e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90003382:	68c3      	ldr	r3, [r0, #12]
90003384:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003386:	4718      	bx	r3
90003388:	200000a4 	.word	0x200000a4
9000338c:	20025c04 	.word	0x20025c04

90003390 <emWin_LCD_Init>:
90003390:	b537      	push	{r0, r1, r2, r4, r5, lr}
90003392:	f7ff ffef 	bl	90003374 <LCD_SetClipRectMax>
90003396:	f000 f8bb 	bl	90003510 <LCD_InitColors>
9000339a:	4604      	mov	r4, r0
9000339c:	2800      	cmp	r0, #0
9000339e:	d144      	bne.n	9000342a <emWin_LCD_Init+0x9a>
900033a0:	4605      	mov	r5, r0
900033a2:	4628      	mov	r0, r5
900033a4:	f7ff fb56 	bl	90002a54 <GUI_DEVICE__GetpDriver>
900033a8:	9001      	str	r0, [sp, #4]
900033aa:	b150      	cbz	r0, 900033c2 <emWin_LCD_Init+0x32>
900033ac:	68c3      	ldr	r3, [r0, #12]
900033ae:	210c      	movs	r1, #12
900033b0:	a801      	add	r0, sp, #4
900033b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900033b4:	4798      	blx	r3
900033b6:	4603      	mov	r3, r0
900033b8:	2800      	cmp	r0, #0
900033ba:	d034      	beq.n	90003426 <emWin_LCD_Init+0x96>
900033bc:	9801      	ldr	r0, [sp, #4]
900033be:	4798      	blx	r3
900033c0:	4304      	orrs	r4, r0
900033c2:	3501      	adds	r5, #1
900033c4:	2d02      	cmp	r5, #2
900033c6:	d1ec      	bne.n	900033a2 <emWin_LCD_Init+0x12>
900033c8:	bb7c      	cbnz	r4, 9000342a <emWin_LCD_Init+0x9a>
900033ca:	f000 f8f7 	bl	900035bc <LCD_InitLUT>
900033ce:	4b18      	ldr	r3, [pc, #96]	; (90003430 <emWin_LCD_Init+0xa0>)
900033d0:	681a      	ldr	r2, [r3, #0]
900033d2:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
900033d6:	429a      	cmp	r2, r3
900033d8:	d101      	bne.n	900033de <emWin_LCD_Init+0x4e>
900033da:	2000      	movs	r0, #0
900033dc:	e026      	b.n	9000342c <emWin_LCD_Init+0x9c>
900033de:	2401      	movs	r4, #1
900033e0:	4620      	mov	r0, r4
900033e2:	f7ff fb37 	bl	90002a54 <GUI_DEVICE__GetpDriver>
900033e6:	9001      	str	r0, [sp, #4]
900033e8:	b1c8      	cbz	r0, 9000341e <emWin_LCD_Init+0x8e>
900033ea:	4620      	mov	r0, r4
900033ec:	f003 fe1e 	bl	9000702c <GUI_SelectLayer>
900033f0:	2004      	movs	r0, #4
900033f2:	f7ff fd37 	bl	90002e64 <LCD_SetDrawMode>
900033f6:	f643 73ff 	movw	r3, #16383	; 0x3fff
900033fa:	2100      	movs	r1, #0
900033fc:	461a      	mov	r2, r3
900033fe:	4608      	mov	r0, r1
90003400:	f7ff fd8e 	bl	90002f20 <LCD_FillRect>
90003404:	2000      	movs	r0, #0
90003406:	f7ff fd2d 	bl	90002e64 <LCD_SetDrawMode>
9000340a:	9b01      	ldr	r3, [sp, #4]
9000340c:	210e      	movs	r1, #14
9000340e:	a801      	add	r0, sp, #4
90003410:	68db      	ldr	r3, [r3, #12]
90003412:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003414:	4798      	blx	r3
90003416:	4603      	mov	r3, r0
90003418:	b108      	cbz	r0, 9000341e <emWin_LCD_Init+0x8e>
9000341a:	9801      	ldr	r0, [sp, #4]
9000341c:	4798      	blx	r3
9000341e:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
90003422:	d2dd      	bcs.n	900033e0 <emWin_LCD_Init+0x50>
90003424:	e7d9      	b.n	900033da <emWin_LCD_Init+0x4a>
90003426:	2001      	movs	r0, #1
90003428:	e000      	b.n	9000342c <emWin_LCD_Init+0x9c>
9000342a:	4620      	mov	r0, r4
9000342c:	b003      	add	sp, #12
9000342e:	bd30      	pop	{r4, r5, pc}
90003430:	2002596c 	.word	0x2002596c

90003434 <LCD_Color2Index>:
90003434:	4b04      	ldr	r3, [pc, #16]	; (90003448 <LCD_Color2Index+0x14>)
90003436:	681b      	ldr	r3, [r3, #0]
90003438:	7c5a      	ldrb	r2, [r3, #17]
9000343a:	4b04      	ldr	r3, [pc, #16]	; (9000344c <LCD_Color2Index+0x18>)
9000343c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
90003440:	691b      	ldr	r3, [r3, #16]
90003442:	681b      	ldr	r3, [r3, #0]
90003444:	4718      	bx	r3
90003446:	bf00      	nop
90003448:	200000a4 	.word	0x200000a4
9000344c:	20025c04 	.word	0x20025c04

90003450 <LCD_Index2Color>:
90003450:	4b04      	ldr	r3, [pc, #16]	; (90003464 <LCD_Index2Color+0x14>)
90003452:	681b      	ldr	r3, [r3, #0]
90003454:	7c5a      	ldrb	r2, [r3, #17]
90003456:	4b04      	ldr	r3, [pc, #16]	; (90003468 <LCD_Index2Color+0x18>)
90003458:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
9000345c:	691b      	ldr	r3, [r3, #16]
9000345e:	685b      	ldr	r3, [r3, #4]
90003460:	4718      	bx	r3
90003462:	bf00      	nop
90003464:	200000a4 	.word	0x200000a4
90003468:	20025c04 	.word	0x20025c04

9000346c <LCD_SetColorIndex>:
9000346c:	4b04      	ldr	r3, [pc, #16]	; (90003480 <LCD_SetColorIndex+0x14>)
9000346e:	681b      	ldr	r3, [r3, #0]
90003470:	7c1a      	ldrb	r2, [r3, #16]
90003472:	0752      	lsls	r2, r2, #29
90003474:	bf4c      	ite	mi
90003476:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
90003478:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
9000347a:	6018      	str	r0, [r3, #0]
9000347c:	4770      	bx	lr
9000347e:	bf00      	nop
90003480:	200000a4 	.word	0x200000a4

90003484 <_SetColor>:
90003484:	b508      	push	{r3, lr}
90003486:	4b06      	ldr	r3, [pc, #24]	; (900034a0 <_SetColor+0x1c>)
90003488:	681b      	ldr	r3, [r3, #0]
9000348a:	6b19      	ldr	r1, [r3, #48]	; 0x30
9000348c:	4281      	cmp	r1, r0
9000348e:	d006      	beq.n	9000349e <_SetColor+0x1a>
90003490:	6318      	str	r0, [r3, #48]	; 0x30
90003492:	f7ff ffcf 	bl	90003434 <LCD_Color2Index>
90003496:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
9000349a:	f7ff bfe7 	b.w	9000346c <LCD_SetColorIndex>
9000349e:	bd08      	pop	{r3, pc}
900034a0:	200000a4 	.word	0x200000a4

900034a4 <LCD_SetBkColorIndex>:
900034a4:	4b04      	ldr	r3, [pc, #16]	; (900034b8 <LCD_SetBkColorIndex+0x14>)
900034a6:	681b      	ldr	r3, [r3, #0]
900034a8:	7c1a      	ldrb	r2, [r3, #16]
900034aa:	0752      	lsls	r2, r2, #29
900034ac:	bf4c      	ite	mi
900034ae:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
900034b0:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
900034b2:	6018      	str	r0, [r3, #0]
900034b4:	4770      	bx	lr
900034b6:	bf00      	nop
900034b8:	200000a4 	.word	0x200000a4

900034bc <_SetBkColor>:
900034bc:	b508      	push	{r3, lr}
900034be:	4b06      	ldr	r3, [pc, #24]	; (900034d8 <_SetBkColor+0x1c>)
900034c0:	681b      	ldr	r3, [r3, #0]
900034c2:	6b59      	ldr	r1, [r3, #52]	; 0x34
900034c4:	4281      	cmp	r1, r0
900034c6:	d006      	beq.n	900034d6 <_SetBkColor+0x1a>
900034c8:	6358      	str	r0, [r3, #52]	; 0x34
900034ca:	f7ff ffb3 	bl	90003434 <LCD_Color2Index>
900034ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900034d2:	f7ff bfe7 	b.w	900034a4 <LCD_SetBkColorIndex>
900034d6:	bd08      	pop	{r3, pc}
900034d8:	200000a4 	.word	0x200000a4

900034dc <LCD_SetBkColor>:
900034dc:	4b01      	ldr	r3, [pc, #4]	; (900034e4 <LCD_SetBkColor+0x8>)
900034de:	681b      	ldr	r3, [r3, #0]
900034e0:	685b      	ldr	r3, [r3, #4]
900034e2:	4718      	bx	r3
900034e4:	200000b0 	.word	0x200000b0

900034e8 <LCD_SetColor>:
900034e8:	4b01      	ldr	r3, [pc, #4]	; (900034f0 <LCD_SetColor+0x8>)
900034ea:	681b      	ldr	r3, [r3, #0]
900034ec:	681b      	ldr	r3, [r3, #0]
900034ee:	4718      	bx	r3
900034f0:	200000b0 	.word	0x200000b0

900034f4 <_OnExit>:
900034f4:	b510      	push	{r4, lr}
900034f6:	4c04      	ldr	r4, [pc, #16]	; (90003508 <_OnExit+0x14>)
900034f8:	6820      	ldr	r0, [r4, #0]
900034fa:	f7fe fe4b 	bl	90002194 <GUI_ALLOC_FreeFixedBlock>
900034fe:	2300      	movs	r3, #0
90003500:	4a02      	ldr	r2, [pc, #8]	; (9000350c <_OnExit+0x18>)
90003502:	6023      	str	r3, [r4, #0]
90003504:	6013      	str	r3, [r2, #0]
90003506:	bd10      	pop	{r4, pc}
90003508:	20025c14 	.word	0x20025c14
9000350c:	20025a74 	.word	0x20025a74

90003510 <LCD_InitColors>:
90003510:	b538      	push	{r3, r4, r5, lr}
90003512:	4d0a      	ldr	r5, [pc, #40]	; (9000353c <LCD_InitColors+0x2c>)
90003514:	682c      	ldr	r4, [r5, #0]
90003516:	b964      	cbnz	r4, 90003532 <LCD_InitColors+0x22>
90003518:	4b09      	ldr	r3, [pc, #36]	; (90003540 <LCD_InitColors+0x30>)
9000351a:	6818      	ldr	r0, [r3, #0]
9000351c:	0080      	lsls	r0, r0, #2
9000351e:	f7fe ff11 	bl	90002344 <GUI_ALLOC_GetFixedBlock>
90003522:	6028      	str	r0, [r5, #0]
90003524:	b138      	cbz	r0, 90003536 <LCD_InitColors+0x26>
90003526:	4807      	ldr	r0, [pc, #28]	; (90003544 <LCD_InitColors+0x34>)
90003528:	4b07      	ldr	r3, [pc, #28]	; (90003548 <LCD_InitColors+0x38>)
9000352a:	f840 3f04 	str.w	r3, [r0, #4]!
9000352e:	f7ff fa7d 	bl	90002a2c <GUI__RegisterExit>
90003532:	2000      	movs	r0, #0
90003534:	bd38      	pop	{r3, r4, r5, pc}
90003536:	2001      	movs	r0, #1
90003538:	bd38      	pop	{r3, r4, r5, pc}
9000353a:	bf00      	nop
9000353c:	20025c14 	.word	0x20025c14
90003540:	200000b4 	.word	0x200000b4
90003544:	20025a74 	.word	0x20025a74
90003548:	900034f5 	.word	0x900034f5

9000354c <LCD_GetpPalConvTableUncached>:
9000354c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90003550:	4604      	mov	r4, r0
90003552:	b318      	cbz	r0, 9000359c <LCD_GetpPalConvTableUncached+0x50>
90003554:	6887      	ldr	r7, [r0, #8]
90003556:	b31f      	cbz	r7, 900035a0 <LCD_GetpPalConvTableUncached+0x54>
90003558:	4d14      	ldr	r5, [pc, #80]	; (900035ac <LCD_GetpPalConvTableUncached+0x60>)
9000355a:	6828      	ldr	r0, [r5, #0]
9000355c:	b320      	cbz	r0, 900035a8 <LCD_GetpPalConvTableUncached+0x5c>
9000355e:	6822      	ldr	r2, [r4, #0]
90003560:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90003564:	dc1f      	bgt.n	900035a6 <LCD_GetpPalConvTableUncached+0x5a>
90003566:	4b12      	ldr	r3, [pc, #72]	; (900035b0 <LCD_GetpPalConvTableUncached+0x64>)
90003568:	2600      	movs	r6, #0
9000356a:	681b      	ldr	r3, [r3, #0]
9000356c:	429a      	cmp	r2, r3
9000356e:	bfa8      	it	ge
90003570:	461a      	movge	r2, r3
90003572:	4690      	mov	r8, r2
90003574:	4546      	cmp	r6, r8
90003576:	da09      	bge.n	9000358c <LCD_GetpPalConvTableUncached+0x40>
90003578:	f8d5 9000 	ldr.w	r9, [r5]
9000357c:	f857 0026 	ldr.w	r0, [r7, r6, lsl #2]
90003580:	f7ff ff58 	bl	90003434 <LCD_Color2Index>
90003584:	f849 0026 	str.w	r0, [r9, r6, lsl #2]
90003588:	3601      	adds	r6, #1
9000358a:	e7f3      	b.n	90003574 <LCD_GetpPalConvTableUncached+0x28>
9000358c:	4b09      	ldr	r3, [pc, #36]	; (900035b4 <LCD_GetpPalConvTableUncached+0x68>)
9000358e:	681b      	ldr	r3, [r3, #0]
90003590:	b10b      	cbz	r3, 90003596 <LCD_GetpPalConvTableUncached+0x4a>
90003592:	4620      	mov	r0, r4
90003594:	4798      	blx	r3
90003596:	6828      	ldr	r0, [r5, #0]
90003598:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000359c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900035a0:	4638      	mov	r0, r7
900035a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900035a6:	2000      	movs	r0, #0
900035a8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900035ac:	20025c14 	.word	0x20025c14
900035b0:	200000b4 	.word	0x200000b4
900035b4:	20025a74 	.word	0x20025a74

900035b8 <LCD_GetpPalConvTableBM>:
900035b8:	f7ff bfc8 	b.w	9000354c <LCD_GetpPalConvTableUncached>

900035bc <LCD_InitLUT>:
900035bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900035c0:	4e1d      	ldr	r6, [pc, #116]	; (90003638 <LCD_InitLUT+0x7c>)
900035c2:	f000 f92e 	bl	90003822 <LCD_GetNumLayers>
900035c6:	2400      	movs	r4, #0
900035c8:	4680      	mov	r8, r0
900035ca:	46b1      	mov	r9, r6
900035cc:	f8df a070 	ldr.w	sl, [pc, #112]	; 90003640 <LCD_InitLUT+0x84>
900035d0:	4544      	cmp	r4, r8
900035d2:	da2d      	bge.n	90003630 <LCD_InitLUT+0x74>
900035d4:	4620      	mov	r0, r4
900035d6:	f7ff fa3d 	bl	90002a54 <GUI_DEVICE__GetpDriver>
900035da:	b338      	cbz	r0, 9000362c <LCD_InitLUT+0x70>
900035dc:	6833      	ldr	r3, [r6, #0]
900035de:	4620      	mov	r0, r4
900035e0:	f893 b011 	ldrb.w	fp, [r3, #17]
900035e4:	745c      	strb	r4, [r3, #17]
900035e6:	f000 f863 	bl	900036b0 <LCD_GetBitsPerPixelEx>
900035ea:	2808      	cmp	r0, #8
900035ec:	dd04      	ble.n	900035f8 <LCD_InitLUT+0x3c>
900035ee:	f8d9 3000 	ldr.w	r3, [r9]
900035f2:	f883 b011 	strb.w	fp, [r3, #17]
900035f6:	e019      	b.n	9000362c <LCD_InitLUT+0x70>
900035f8:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
900035fc:	691a      	ldr	r2, [r3, #16]
900035fe:	4b0f      	ldr	r3, [pc, #60]	; (9000363c <LCD_InitLUT+0x80>)
90003600:	429a      	cmp	r2, r3
90003602:	d0f4      	beq.n	900035ee <LCD_InitLUT+0x32>
90003604:	4620      	mov	r0, r4
90003606:	2500      	movs	r5, #0
90003608:	f000 f855 	bl	900036b6 <LCD_GetNumColorsEx>
9000360c:	4603      	mov	r3, r0
9000360e:	429d      	cmp	r5, r3
90003610:	daed      	bge.n	900035ee <LCD_InitLUT+0x32>
90003612:	b2ef      	uxtb	r7, r5
90003614:	9301      	str	r3, [sp, #4]
90003616:	3501      	adds	r5, #1
90003618:	4638      	mov	r0, r7
9000361a:	f7ff ff19 	bl	90003450 <LCD_Index2Color>
9000361e:	4639      	mov	r1, r7
90003620:	4602      	mov	r2, r0
90003622:	4620      	mov	r0, r4
90003624:	f000 f92c 	bl	90003880 <LCD_SetLUTEntryEx>
90003628:	9b01      	ldr	r3, [sp, #4]
9000362a:	e7f0      	b.n	9000360e <LCD_InitLUT+0x52>
9000362c:	3401      	adds	r4, #1
9000362e:	e7cf      	b.n	900035d0 <LCD_InitLUT+0x14>
90003630:	b003      	add	sp, #12
90003632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90003636:	bf00      	nop
90003638:	200000a4 	.word	0x200000a4
9000363c:	9000dd6c 	.word	0x9000dd6c
90003640:	20025c04 	.word	0x20025c04

90003644 <LCD_GetBkColorIndex>:
90003644:	4b02      	ldr	r3, [pc, #8]	; (90003650 <LCD_GetBkColorIndex+0xc>)
90003646:	681b      	ldr	r3, [r3, #0]
90003648:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9000364a:	6818      	ldr	r0, [r3, #0]
9000364c:	4770      	bx	lr
9000364e:	bf00      	nop
90003650:	200000a4 	.word	0x200000a4

90003654 <LCD_GetColorIndex>:
90003654:	4b02      	ldr	r3, [pc, #8]	; (90003660 <LCD_GetColorIndex+0xc>)
90003656:	681b      	ldr	r3, [r3, #0]
90003658:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000365a:	6818      	ldr	r0, [r3, #0]
9000365c:	4770      	bx	lr
9000365e:	bf00      	nop
90003660:	200000a4 	.word	0x200000a4

90003664 <_GetDevProp>:
90003664:	2801      	cmp	r0, #1
90003666:	b510      	push	{r4, lr}
90003668:	460c      	mov	r4, r1
9000366a:	dc08      	bgt.n	9000367e <_GetDevProp+0x1a>
9000366c:	f7ff f9f2 	bl	90002a54 <GUI_DEVICE__GetpDriver>
90003670:	b128      	cbz	r0, 9000367e <_GetDevProp+0x1a>
90003672:	68c3      	ldr	r3, [r0, #12]
90003674:	4621      	mov	r1, r4
90003676:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90003678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000367c:	4718      	bx	r3
9000367e:	2000      	movs	r0, #0
90003680:	bd10      	pop	{r4, pc}

90003682 <_GetMaxValue>:
90003682:	b538      	push	{r3, r4, r5, lr}
90003684:	4601      	mov	r1, r0
90003686:	4605      	mov	r5, r0
90003688:	2001      	movs	r0, #1
9000368a:	f7ff ffeb 	bl	90003664 <_GetDevProp>
9000368e:	4604      	mov	r4, r0
90003690:	4629      	mov	r1, r5
90003692:	2000      	movs	r0, #0
90003694:	f7ff ffe6 	bl	90003664 <_GetDevProp>
90003698:	42a0      	cmp	r0, r4
9000369a:	bfb8      	it	lt
9000369c:	4620      	movlt	r0, r4
9000369e:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
900036a2:	bd38      	pop	{r3, r4, r5, pc}

900036a4 <LCD_GetXSizeEx>:
900036a4:	2101      	movs	r1, #1
900036a6:	f7ff bfdd 	b.w	90003664 <_GetDevProp>

900036aa <LCD_GetYSizeEx>:
900036aa:	2102      	movs	r1, #2
900036ac:	f7ff bfda 	b.w	90003664 <_GetDevProp>

900036b0 <LCD_GetBitsPerPixelEx>:
900036b0:	2108      	movs	r1, #8
900036b2:	f7ff bfd7 	b.w	90003664 <_GetDevProp>

900036b6 <LCD_GetNumColorsEx>:
900036b6:	2109      	movs	r1, #9
900036b8:	f7ff bfd4 	b.w	90003664 <_GetDevProp>

900036bc <LCD_GetXSize>:
900036bc:	4b02      	ldr	r3, [pc, #8]	; (900036c8 <LCD_GetXSize+0xc>)
900036be:	681b      	ldr	r3, [r3, #0]
900036c0:	7c58      	ldrb	r0, [r3, #17]
900036c2:	f7ff bfef 	b.w	900036a4 <LCD_GetXSizeEx>
900036c6:	bf00      	nop
900036c8:	200000a4 	.word	0x200000a4

900036cc <LCD_GetYSize>:
900036cc:	4b02      	ldr	r3, [pc, #8]	; (900036d8 <LCD_GetYSize+0xc>)
900036ce:	681b      	ldr	r3, [r3, #0]
900036d0:	7c58      	ldrb	r0, [r3, #17]
900036d2:	f7ff bfea 	b.w	900036aa <LCD_GetYSizeEx>
900036d6:	bf00      	nop
900036d8:	200000a4 	.word	0x200000a4

900036dc <LCD_GetNumColors>:
900036dc:	4b02      	ldr	r3, [pc, #8]	; (900036e8 <LCD_GetNumColors+0xc>)
900036de:	681b      	ldr	r3, [r3, #0]
900036e0:	7c58      	ldrb	r0, [r3, #17]
900036e2:	f7ff bfe8 	b.w	900036b6 <LCD_GetNumColorsEx>
900036e6:	bf00      	nop
900036e8:	200000a4 	.word	0x200000a4

900036ec <GUI_GetBitsPerPixelEx>:
900036ec:	4b03      	ldr	r3, [pc, #12]	; (900036fc <GUI_GetBitsPerPixelEx+0x10>)
900036ee:	2108      	movs	r1, #8
900036f0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
900036f4:	68c3      	ldr	r3, [r0, #12]
900036f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900036f8:	4718      	bx	r3
900036fa:	bf00      	nop
900036fc:	20025c04 	.word	0x20025c04

90003700 <LCD_GetPaletteEx>:
90003700:	b510      	push	{r4, lr}
90003702:	f7ff f9a7 	bl	90002a54 <GUI_DEVICE__GetpDriver>
90003706:	b128      	cbz	r0, 90003714 <LCD_GetPaletteEx+0x14>
90003708:	68c3      	ldr	r3, [r0, #12]
9000370a:	2102      	movs	r1, #2
9000370c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000370e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90003712:	4718      	bx	r3
90003714:	bd10      	pop	{r4, pc}
	...

90003718 <LCD_GetPalette>:
90003718:	4b02      	ldr	r3, [pc, #8]	; (90003724 <LCD_GetPalette+0xc>)
9000371a:	681b      	ldr	r3, [r3, #0]
9000371c:	7c58      	ldrb	r0, [r3, #17]
9000371e:	f7ff bfef 	b.w	90003700 <LCD_GetPaletteEx>
90003722:	bf00      	nop
90003724:	200000a4 	.word	0x200000a4

90003728 <GUI_GetpfIndex2ColorEx>:
90003728:	4b02      	ldr	r3, [pc, #8]	; (90003734 <GUI_GetpfIndex2ColorEx+0xc>)
9000372a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
9000372e:	691b      	ldr	r3, [r3, #16]
90003730:	6858      	ldr	r0, [r3, #4]
90003732:	4770      	bx	lr
90003734:	20025c04 	.word	0x20025c04

90003738 <GUI_GetpfColor2IndexEx>:
90003738:	4b02      	ldr	r3, [pc, #8]	; (90003744 <GUI_GetpfColor2IndexEx+0xc>)
9000373a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
9000373e:	691b      	ldr	r3, [r3, #16]
90003740:	6818      	ldr	r0, [r3, #0]
90003742:	4770      	bx	lr
90003744:	20025c04 	.word	0x20025c04

90003748 <LCD_GetXSizeMax>:
90003748:	2001      	movs	r0, #1
9000374a:	f7ff bf9a 	b.w	90003682 <_GetMaxValue>

9000374e <LCD_GetYSizeMax>:
9000374e:	2002      	movs	r0, #2
90003750:	f7ff bf97 	b.w	90003682 <_GetMaxValue>

90003754 <LCD_SetDisplaySize>:
90003754:	4b01      	ldr	r3, [pc, #4]	; (9000375c <LCD_SetDisplaySize+0x8>)
90003756:	e883 0003 	stmia.w	r3, {r0, r1}
9000375a:	4770      	bx	lr
9000375c:	20025a80 	.word	0x20025a80

90003760 <LCD_GetXSizeDisplay>:
90003760:	4b01      	ldr	r3, [pc, #4]	; (90003768 <LCD_GetXSizeDisplay+0x8>)
90003762:	6818      	ldr	r0, [r3, #0]
90003764:	4770      	bx	lr
90003766:	bf00      	nop
90003768:	20025a80 	.word	0x20025a80

9000376c <LCD_GetYSizeDisplay>:
9000376c:	4b01      	ldr	r3, [pc, #4]	; (90003774 <LCD_GetYSizeDisplay+0x8>)
9000376e:	6858      	ldr	r0, [r3, #4]
90003770:	4770      	bx	lr
90003772:	bf00      	nop
90003774:	20025a80 	.word	0x20025a80

90003778 <LCD__GetBPP>:
90003778:	2800      	cmp	r0, #0
9000377a:	d03b      	beq.n	900037f4 <LCD__GetBPP+0x7c>
9000377c:	f030 0301 	bics.w	r3, r0, #1
90003780:	d029      	beq.n	900037d6 <LCD__GetBPP+0x5e>
90003782:	f030 0303 	bics.w	r3, r0, #3
90003786:	d028      	beq.n	900037da <LCD__GetBPP+0x62>
90003788:	f030 0307 	bics.w	r3, r0, #7
9000378c:	d027      	beq.n	900037de <LCD__GetBPP+0x66>
9000378e:	f030 030f 	bics.w	r3, r0, #15
90003792:	d026      	beq.n	900037e2 <LCD__GetBPP+0x6a>
90003794:	f030 031f 	bics.w	r3, r0, #31
90003798:	d025      	beq.n	900037e6 <LCD__GetBPP+0x6e>
9000379a:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
9000379e:	d024      	beq.n	900037ea <LCD__GetBPP+0x72>
900037a0:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
900037a4:	f023 0301 	bic.w	r3, r3, #1
900037a8:	b30b      	cbz	r3, 900037ee <LCD__GetBPP+0x76>
900037aa:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
900037ae:	f023 030f 	bic.w	r3, r3, #15
900037b2:	b1e3      	cbz	r3, 900037ee <LCD__GetBPP+0x76>
900037b4:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
900037b8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
900037bc:	b1bb      	cbz	r3, 900037ee <LCD__GetBPP+0x76>
900037be:	0c03      	lsrs	r3, r0, #16
900037c0:	041b      	lsls	r3, r3, #16
900037c2:	b1a3      	cbz	r3, 900037ee <LCD__GetBPP+0x76>
900037c4:	0c83      	lsrs	r3, r0, #18
900037c6:	049b      	lsls	r3, r3, #18
900037c8:	b19b      	cbz	r3, 900037f2 <LCD__GetBPP+0x7a>
900037ca:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
900037ce:	bf0c      	ite	eq
900037d0:	2018      	moveq	r0, #24
900037d2:	2020      	movne	r0, #32
900037d4:	4770      	bx	lr
900037d6:	2001      	movs	r0, #1
900037d8:	4770      	bx	lr
900037da:	2002      	movs	r0, #2
900037dc:	4770      	bx	lr
900037de:	2003      	movs	r0, #3
900037e0:	4770      	bx	lr
900037e2:	2004      	movs	r0, #4
900037e4:	4770      	bx	lr
900037e6:	2005      	movs	r0, #5
900037e8:	4770      	bx	lr
900037ea:	2008      	movs	r0, #8
900037ec:	4770      	bx	lr
900037ee:	2010      	movs	r0, #16
900037f0:	4770      	bx	lr
900037f2:	2012      	movs	r0, #18
900037f4:	4770      	bx	lr

900037f6 <LCD__GetBPPDevice>:
900037f6:	b508      	push	{r3, lr}
900037f8:	f7ff ffbe 	bl	90003778 <LCD__GetBPP>
900037fc:	2801      	cmp	r0, #1
900037fe:	d00f      	beq.n	90003820 <LCD__GetBPPDevice+0x2a>
90003800:	1e83      	subs	r3, r0, #2
90003802:	2b06      	cmp	r3, #6
90003804:	d909      	bls.n	9000381a <LCD__GetBPPDevice+0x24>
90003806:	f1a0 0309 	sub.w	r3, r0, #9
9000380a:	2b07      	cmp	r3, #7
9000380c:	d907      	bls.n	9000381e <LCD__GetBPPDevice+0x28>
9000380e:	3811      	subs	r0, #17
90003810:	280f      	cmp	r0, #15
90003812:	bf8c      	ite	hi
90003814:	2000      	movhi	r0, #0
90003816:	2020      	movls	r0, #32
90003818:	bd08      	pop	{r3, pc}
9000381a:	2008      	movs	r0, #8
9000381c:	bd08      	pop	{r3, pc}
9000381e:	2010      	movs	r0, #16
90003820:	bd08      	pop	{r3, pc}

90003822 <LCD_GetNumLayers>:
90003822:	b510      	push	{r4, lr}
90003824:	2000      	movs	r0, #0
90003826:	f7ff f915 	bl	90002a54 <GUI_DEVICE__GetpDriver>
9000382a:	1c04      	adds	r4, r0, #0
9000382c:	f04f 0001 	mov.w	r0, #1
90003830:	bf18      	it	ne
90003832:	2401      	movne	r4, #1
90003834:	f7ff f90e 	bl	90002a54 <GUI_DEVICE__GetpDriver>
90003838:	b100      	cbz	r0, 9000383c <LCD_GetNumLayers+0x1a>
9000383a:	3401      	adds	r4, #1
9000383c:	4620      	mov	r0, r4
9000383e:	bd10      	pop	{r4, pc}

90003840 <LCD_SelectLCD>:
90003840:	4b0d      	ldr	r3, [pc, #52]	; (90003878 <LCD_SelectLCD+0x38>)
90003842:	681a      	ldr	r2, [r3, #0]
90003844:	b510      	push	{r4, lr}
90003846:	7c51      	ldrb	r1, [r2, #17]
90003848:	461c      	mov	r4, r3
9000384a:	4a0c      	ldr	r2, [pc, #48]	; (9000387c <LCD_SelectLCD+0x3c>)
9000384c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
90003850:	b140      	cbz	r0, 90003864 <LCD_SelectLCD+0x24>
90003852:	68c3      	ldr	r3, [r0, #12]
90003854:	b113      	cbz	r3, 9000385c <LCD_SelectLCD+0x1c>
90003856:	681b      	ldr	r3, [r3, #0]
90003858:	2b04      	cmp	r3, #4
9000385a:	d001      	beq.n	90003860 <LCD_SelectLCD+0x20>
9000385c:	6800      	ldr	r0, [r0, #0]
9000385e:	e7f7      	b.n	90003850 <LCD_SelectLCD+0x10>
90003860:	f7ff f930 	bl	90002ac4 <GUI_DEVICE_Unlink>
90003864:	6823      	ldr	r3, [r4, #0]
90003866:	2200      	movs	r2, #0
90003868:	661a      	str	r2, [r3, #96]	; 0x60
9000386a:	f103 0208 	add.w	r2, r3, #8
9000386e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90003872:	615a      	str	r2, [r3, #20]
90003874:	f7ff bd7e 	b.w	90003374 <LCD_SetClipRectMax>
90003878:	200000a4 	.word	0x200000a4
9000387c:	20025c04 	.word	0x20025c04

90003880 <LCD_SetLUTEntryEx>:
90003880:	b537      	push	{r0, r1, r2, r4, r5, lr}
90003882:	460c      	mov	r4, r1
90003884:	4615      	mov	r5, r2
90003886:	f7ff f8e5 	bl	90002a54 <GUI_DEVICE__GetpDriver>
9000388a:	9001      	str	r0, [sp, #4]
9000388c:	b908      	cbnz	r0, 90003892 <LCD_SetLUTEntryEx+0x12>
9000388e:	2001      	movs	r0, #1
90003890:	e00c      	b.n	900038ac <LCD_SetLUTEntryEx+0x2c>
90003892:	68c3      	ldr	r3, [r0, #12]
90003894:	2110      	movs	r1, #16
90003896:	a801      	add	r0, sp, #4
90003898:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000389a:	4798      	blx	r3
9000389c:	4603      	mov	r3, r0
9000389e:	2800      	cmp	r0, #0
900038a0:	d0f5      	beq.n	9000388e <LCD_SetLUTEntryEx+0xe>
900038a2:	9801      	ldr	r0, [sp, #4]
900038a4:	462a      	mov	r2, r5
900038a6:	4621      	mov	r1, r4
900038a8:	4798      	blx	r3
900038aa:	2000      	movs	r0, #0
900038ac:	b003      	add	sp, #12
900038ae:	bd30      	pop	{r4, r5, pc}

900038b0 <LCD_SetSizeEx>:
900038b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900038b2:	460c      	mov	r4, r1
900038b4:	4615      	mov	r5, r2
900038b6:	f7ff f8cd 	bl	90002a54 <GUI_DEVICE__GetpDriver>
900038ba:	9001      	str	r0, [sp, #4]
900038bc:	b908      	cbnz	r0, 900038c2 <LCD_SetSizeEx+0x12>
900038be:	2001      	movs	r0, #1
900038c0:	e00c      	b.n	900038dc <LCD_SetSizeEx+0x2c>
900038c2:	68c3      	ldr	r3, [r0, #12]
900038c4:	210b      	movs	r1, #11
900038c6:	a801      	add	r0, sp, #4
900038c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900038ca:	4798      	blx	r3
900038cc:	4603      	mov	r3, r0
900038ce:	2800      	cmp	r0, #0
900038d0:	d0f5      	beq.n	900038be <LCD_SetSizeEx+0xe>
900038d2:	9801      	ldr	r0, [sp, #4]
900038d4:	462a      	mov	r2, r5
900038d6:	4621      	mov	r1, r4
900038d8:	4798      	blx	r3
900038da:	2000      	movs	r0, #0
900038dc:	b003      	add	sp, #12
900038de:	bd30      	pop	{r4, r5, pc}

900038e0 <LCD_SetVSizeEx>:
900038e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900038e2:	460c      	mov	r4, r1
900038e4:	4615      	mov	r5, r2
900038e6:	f7ff f8b5 	bl	90002a54 <GUI_DEVICE__GetpDriver>
900038ea:	9001      	str	r0, [sp, #4]
900038ec:	b908      	cbnz	r0, 900038f2 <LCD_SetVSizeEx+0x12>
900038ee:	2001      	movs	r0, #1
900038f0:	e00c      	b.n	9000390c <LCD_SetVSizeEx+0x2c>
900038f2:	68c3      	ldr	r3, [r0, #12]
900038f4:	210a      	movs	r1, #10
900038f6:	a801      	add	r0, sp, #4
900038f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900038fa:	4798      	blx	r3
900038fc:	4603      	mov	r3, r0
900038fe:	2800      	cmp	r0, #0
90003900:	d0f5      	beq.n	900038ee <LCD_SetVSizeEx+0xe>
90003902:	9801      	ldr	r0, [sp, #4]
90003904:	462a      	mov	r2, r5
90003906:	4621      	mov	r1, r4
90003908:	4798      	blx	r3
9000390a:	2000      	movs	r0, #0
9000390c:	b003      	add	sp, #12
9000390e:	bd30      	pop	{r4, r5, pc}

90003910 <LCD_UpdateColorIndices>:
90003910:	b510      	push	{r4, lr}
90003912:	4c07      	ldr	r4, [pc, #28]	; (90003930 <LCD_UpdateColorIndices+0x20>)
90003914:	6823      	ldr	r3, [r4, #0]
90003916:	6b18      	ldr	r0, [r3, #48]	; 0x30
90003918:	f7ff fd8c 	bl	90003434 <LCD_Color2Index>
9000391c:	f7ff fda6 	bl	9000346c <LCD_SetColorIndex>
90003920:	6823      	ldr	r3, [r4, #0]
90003922:	6b58      	ldr	r0, [r3, #52]	; 0x34
90003924:	f7ff fd86 	bl	90003434 <LCD_Color2Index>
90003928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000392c:	f7ff bdba 	b.w	900034a4 <LCD_SetBkColorIndex>
90003930:	200000a4 	.word	0x200000a4

90003934 <_Log2PhysY_X1Y0S0>:
90003934:	4610      	mov	r0, r2
90003936:	4770      	bx	lr

90003938 <_Log2PhysY_X1Y1S0>:
90003938:	6840      	ldr	r0, [r0, #4]
9000393a:	1a80      	subs	r0, r0, r2
9000393c:	3801      	subs	r0, #1
9000393e:	4770      	bx	lr

90003940 <_Log2PhysY_X1Y0S1>:
90003940:	4608      	mov	r0, r1
90003942:	4770      	bx	lr

90003944 <_Log2PhysY_X1Y1S1>:
90003944:	6800      	ldr	r0, [r0, #0]
90003946:	1a40      	subs	r0, r0, r1
90003948:	3801      	subs	r0, #1
9000394a:	4770      	bx	lr

9000394c <_SetPixelIndex>:
9000394c:	b410      	push	{r4}
9000394e:	6884      	ldr	r4, [r0, #8]
90003950:	f8d4 40f8 	ldr.w	r4, [r4, #248]	; 0xf8
90003954:	46a4      	mov	ip, r4
90003956:	f85d 4b04 	ldr.w	r4, [sp], #4
9000395a:	4760      	bx	ip

9000395c <_GetPixelIndex>:
9000395c:	6883      	ldr	r3, [r0, #8]
9000395e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
90003962:	4718      	bx	r3

90003964 <_XorPixel>:
90003964:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90003966:	6887      	ldr	r7, [r0, #8]
90003968:	4616      	mov	r6, r2
9000396a:	4604      	mov	r4, r0
9000396c:	460d      	mov	r5, r1
9000396e:	f7ff fff5 	bl	9000395c <_GetPixelIndex>
90003972:	9001      	str	r0, [sp, #4]
90003974:	9a01      	ldr	r2, [sp, #4]
90003976:	4629      	mov	r1, r5
90003978:	6abb      	ldr	r3, [r7, #40]	; 0x28
9000397a:	4620      	mov	r0, r4
9000397c:	4053      	eors	r3, r2
9000397e:	4632      	mov	r2, r6
90003980:	f7ff ffe4 	bl	9000394c <_SetPixelIndex>
90003984:	b003      	add	sp, #12
90003986:	bdf0      	pop	{r4, r5, r6, r7, pc}

90003988 <_DrawHLine>:
90003988:	b513      	push	{r0, r1, r4, lr}
9000398a:	6884      	ldr	r4, [r0, #8]
9000398c:	9200      	str	r2, [sp, #0]
9000398e:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
90003992:	47a0      	blx	r4
90003994:	b002      	add	sp, #8
90003996:	bd10      	pop	{r4, pc}

90003998 <_DrawVLine>:
90003998:	b513      	push	{r0, r1, r4, lr}
9000399a:	6884      	ldr	r4, [r0, #8]
9000399c:	9300      	str	r3, [sp, #0]
9000399e:	460b      	mov	r3, r1
900039a0:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
900039a4:	47a0      	blx	r4
900039a6:	b002      	add	sp, #8
900039a8:	bd10      	pop	{r4, pc}

900039aa <_FillRect>:
900039aa:	b410      	push	{r4}
900039ac:	6884      	ldr	r4, [r0, #8]
900039ae:	f8d4 40f0 	ldr.w	r4, [r4, #240]	; 0xf0
900039b2:	46a4      	mov	ip, r4
900039b4:	f85d 4b04 	ldr.w	r4, [sp], #4
900039b8:	4760      	bx	ip

900039ba <_DrawBitmap>:
900039ba:	b430      	push	{r4, r5}
900039bc:	6884      	ldr	r4, [r0, #8]
900039be:	f8d4 40ec 	ldr.w	r4, [r4, #236]	; 0xec
900039c2:	46a4      	mov	ip, r4
900039c4:	bc30      	pop	{r4, r5}
900039c6:	4760      	bx	ip

900039c8 <_GetDevFunc_SetRect>:
900039c8:	4770      	bx	lr
	...

900039cc <_GetDevFunc_SetRectOutside>:
900039cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
900039ce:	9e07      	ldr	r6, [sp, #28]
900039d0:	6884      	ldr	r4, [r0, #8]
900039d2:	4d0c      	ldr	r5, [pc, #48]	; (90003a04 <_GetDevFunc_SetRectOutside+0x38>)
900039d4:	b176      	cbz	r6, 900039f4 <_GetDevFunc_SetRectOutside+0x28>
900039d6:	6828      	ldr	r0, [r5, #0]
900039d8:	b988      	cbnz	r0, 900039fe <_GetDevFunc_SetRectOutside+0x32>
900039da:	9806      	ldr	r0, [sp, #24]
900039dc:	9000      	str	r0, [sp, #0]
900039de:	4620      	mov	r0, r4
900039e0:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
900039e4:	47b0      	blx	r6
900039e6:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
900039ea:	602b      	str	r3, [r5, #0]
900039ec:	4b06      	ldr	r3, [pc, #24]	; (90003a08 <_GetDevFunc_SetRectOutside+0x3c>)
900039ee:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
900039f2:	e004      	b.n	900039fe <_GetDevFunc_SetRectOutside+0x32>
900039f4:	682b      	ldr	r3, [r5, #0]
900039f6:	b113      	cbz	r3, 900039fe <_GetDevFunc_SetRectOutside+0x32>
900039f8:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
900039fc:	602e      	str	r6, [r5, #0]
900039fe:	b002      	add	sp, #8
90003a00:	bd70      	pop	{r4, r5, r6, pc}
90003a02:	bf00      	nop
90003a04:	20025a88 	.word	0x20025a88
90003a08:	900039c9 	.word	0x900039c9

90003a0c <_ReadPixelCust_16bpp>:
90003a0c:	6c02      	ldr	r2, [r0, #64]	; 0x40
90003a0e:	f8d0 30dc 	ldr.w	r3, [r0, #220]	; 0xdc
90003a12:	6990      	ldr	r0, [r2, #24]
90003a14:	4718      	bx	r3

90003a16 <_ReadPixelCust_18bpp>:
90003a16:	6c02      	ldr	r2, [r0, #64]	; 0x40
90003a18:	f8d0 30e0 	ldr.w	r3, [r0, #224]	; 0xe0
90003a1c:	6990      	ldr	r0, [r2, #24]
90003a1e:	4718      	bx	r3

90003a20 <_ReadRectCust_16bpp>:
90003a20:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90003a24:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90003a26:	4691      	mov	r9, r2
90003a28:	6885      	ldr	r5, [r0, #8]
90003a2a:	468a      	mov	sl, r1
90003a2c:	4698      	mov	r8, r3
90003a2e:	9400      	str	r4, [sp, #0]
90003a30:	ebc9 0404 	rsb	r4, r9, r4
90003a34:	4628      	mov	r0, r5
90003a36:	f8d5 60a8 	ldr.w	r6, [r5, #168]	; 0xa8
90003a3a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90003a3c:	47b0      	blx	r6
90003a3e:	ebca 0608 	rsb	r6, sl, r8
90003a42:	1c62      	adds	r2, r4, #1
90003a44:	6c28      	ldr	r0, [r5, #64]	; 0x40
90003a46:	4639      	mov	r1, r7
90003a48:	f8d5 30e4 	ldr.w	r3, [r5, #228]	; 0xe4
90003a4c:	fb06 2202 	mla	r2, r6, r2, r2
90003a50:	6980      	ldr	r0, [r0, #24]
90003a52:	b002      	add	sp, #8
90003a54:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90003a58:	4718      	bx	r3

90003a5a <_ReadRectCust_18bpp>:
90003a5a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90003a5e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90003a60:	4691      	mov	r9, r2
90003a62:	6885      	ldr	r5, [r0, #8]
90003a64:	468a      	mov	sl, r1
90003a66:	4698      	mov	r8, r3
90003a68:	9400      	str	r4, [sp, #0]
90003a6a:	ebc9 0404 	rsb	r4, r9, r4
90003a6e:	4628      	mov	r0, r5
90003a70:	f8d5 60a8 	ldr.w	r6, [r5, #168]	; 0xa8
90003a74:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90003a76:	47b0      	blx	r6
90003a78:	ebca 0608 	rsb	r6, sl, r8
90003a7c:	1c62      	adds	r2, r4, #1
90003a7e:	6c28      	ldr	r0, [r5, #64]	; 0x40
90003a80:	4639      	mov	r1, r7
90003a82:	f8d5 30e8 	ldr.w	r3, [r5, #232]	; 0xe8
90003a86:	fb06 2202 	mla	r2, r6, r2, r2
90003a8a:	6980      	ldr	r0, [r0, #24]
90003a8c:	b002      	add	sp, #8
90003a8e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90003a92:	4718      	bx	r3

90003a94 <_GetDevFunc>:
90003a94:	3901      	subs	r1, #1
90003a96:	2917      	cmp	r1, #23
90003a98:	d828      	bhi.n	90003aec <_GetDevFunc+0x58>
90003a9a:	e8df f001 	tbb	[pc, r1]
90003a9e:	2714      	.short	0x2714
90003aa0:	27272727 	.word	0x27272727
90003aa4:	0e272727 	.word	0x0e272727
90003aa8:	29191210 	.word	0x29191210
90003aac:	2727270c 	.word	0x2727270c
90003ab0:	23272727 	.word	0x23272727
90003ab4:	251e      	.short	0x251e
90003ab6:	480f      	ldr	r0, [pc, #60]	; (90003af4 <_GetDevFunc+0x60>)
90003ab8:	4770      	bx	lr
90003aba:	480f      	ldr	r0, [pc, #60]	; (90003af8 <_GetDevFunc+0x64>)
90003abc:	4770      	bx	lr
90003abe:	480f      	ldr	r0, [pc, #60]	; (90003afc <_GetDevFunc+0x68>)
90003ac0:	4770      	bx	lr
90003ac2:	480f      	ldr	r0, [pc, #60]	; (90003b00 <_GetDevFunc+0x6c>)
90003ac4:	4770      	bx	lr
90003ac6:	6803      	ldr	r3, [r0, #0]
90003ac8:	689b      	ldr	r3, [r3, #8]
90003aca:	f8d3 0104 	ldr.w	r0, [r3, #260]	; 0x104
90003ace:	4770      	bx	lr
90003ad0:	6803      	ldr	r3, [r0, #0]
90003ad2:	689b      	ldr	r3, [r3, #8]
90003ad4:	f8d3 00fc 	ldr.w	r0, [r3, #252]	; 0xfc
90003ad8:	4770      	bx	lr
90003ada:	6803      	ldr	r3, [r0, #0]
90003adc:	689b      	ldr	r3, [r3, #8]
90003ade:	f8d3 0100 	ldr.w	r0, [r3, #256]	; 0x100
90003ae2:	4770      	bx	lr
90003ae4:	4807      	ldr	r0, [pc, #28]	; (90003b04 <_GetDevFunc+0x70>)
90003ae6:	4770      	bx	lr
90003ae8:	4807      	ldr	r0, [pc, #28]	; (90003b08 <_GetDevFunc+0x74>)
90003aea:	4770      	bx	lr
90003aec:	2000      	movs	r0, #0
90003aee:	4770      	bx	lr
90003af0:	4806      	ldr	r0, [pc, #24]	; (90003b0c <_GetDevFunc+0x78>)
90003af2:	4770      	bx	lr
90003af4:	90003eb7 	.word	0x90003eb7
90003af8:	90003ea3 	.word	0x90003ea3
90003afc:	90003e8f 	.word	0x90003e8f
90003b00:	90003e45 	.word	0x90003e45
90003b04:	90003da9 	.word	0x90003da9
90003b08:	900039cd 	.word	0x900039cd
90003b0c:	90003ecd 	.word	0x90003ecd

90003b10 <_GetDevProp>:
90003b10:	3901      	subs	r1, #1
90003b12:	6880      	ldr	r0, [r0, #8]
90003b14:	290d      	cmp	r1, #13
90003b16:	d823      	bhi.n	90003b60 <_GetDevProp+0x50>
90003b18:	e8df f001 	tbb	[pc, r1]
90003b1c:	0f0d0b09 	.word	0x0f0d0b09
90003b20:	11222222 	.word	0x11222222
90003b24:	13070725 	.word	0x13070725
90003b28:	1d18      	.short	0x1d18
90003b2a:	2001      	movs	r0, #1
90003b2c:	4770      	bx	lr
90003b2e:	6800      	ldr	r0, [r0, #0]
90003b30:	4770      	bx	lr
90003b32:	6840      	ldr	r0, [r0, #4]
90003b34:	4770      	bx	lr
90003b36:	6880      	ldr	r0, [r0, #8]
90003b38:	4770      	bx	lr
90003b3a:	68c0      	ldr	r0, [r0, #12]
90003b3c:	4770      	bx	lr
90003b3e:	6b80      	ldr	r0, [r0, #56]	; 0x38
90003b40:	4770      	bx	lr
90003b42:	b188      	cbz	r0, 90003b68 <_GetDevProp+0x58>
90003b44:	6b40      	ldr	r0, [r0, #52]	; 0x34
90003b46:	f000 0001 	and.w	r0, r0, #1
90003b4a:	4770      	bx	lr
90003b4c:	b160      	cbz	r0, 90003b68 <_GetDevProp+0x58>
90003b4e:	6b40      	ldr	r0, [r0, #52]	; 0x34
90003b50:	f3c0 0040 	ubfx	r0, r0, #1, #1
90003b54:	4770      	bx	lr
90003b56:	b138      	cbz	r0, 90003b68 <_GetDevProp+0x58>
90003b58:	6b40      	ldr	r0, [r0, #52]	; 0x34
90003b5a:	f3c0 0080 	ubfx	r0, r0, #2, #1
90003b5e:	4770      	bx	lr
90003b60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
90003b64:	4770      	bx	lr
90003b66:	2000      	movs	r0, #0
90003b68:	4770      	bx	lr

90003b6a <_GetDevData>:
90003b6a:	6883      	ldr	r3, [r0, #8]
90003b6c:	2901      	cmp	r1, #1
90003b6e:	bf0c      	ite	eq
90003b70:	6c58      	ldreq	r0, [r3, #68]	; 0x44
90003b72:	2000      	movne	r0, #0
90003b74:	4770      	bx	lr

90003b76 <_GetRect>:
90003b76:	6882      	ldr	r2, [r0, #8]
90003b78:	2300      	movs	r3, #0
90003b7a:	800b      	strh	r3, [r1, #0]
90003b7c:	804b      	strh	r3, [r1, #2]
90003b7e:	6813      	ldr	r3, [r2, #0]
90003b80:	3b01      	subs	r3, #1
90003b82:	808b      	strh	r3, [r1, #4]
90003b84:	6853      	ldr	r3, [r2, #4]
90003b86:	3b01      	subs	r3, #1
90003b88:	80cb      	strh	r3, [r1, #6]
90003b8a:	4770      	bx	lr

90003b8c <GUIDRV_FlexColor__SetLog2Phys>:
90003b8c:	b5f0      	push	{r4, r5, r6, r7, lr}
90003b8e:	4c10      	ldr	r4, [pc, #64]	; (90003bd0 <GUIDRV_FlexColor__SetLog2Phys+0x44>)
90003b90:	b091      	sub	sp, #68	; 0x44
90003b92:	4607      	mov	r7, r0
90003b94:	4626      	mov	r6, r4
90003b96:	466d      	mov	r5, sp
90003b98:	3420      	adds	r4, #32
90003b9a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
90003b9c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
90003b9e:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
90003ba2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90003ba6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90003ba8:	ad08      	add	r5, sp, #32
90003baa:	c50f      	stmia	r5!, {r0, r1, r2, r3}
90003bac:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90003bb0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90003bb4:	aa10      	add	r2, sp, #64	; 0x40
90003bb6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
90003bb8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
90003bbc:	f853 2c40 	ldr.w	r2, [r3, #-64]
90003bc0:	f853 3c20 	ldr.w	r3, [r3, #-32]
90003bc4:	f8c7 2108 	str.w	r2, [r7, #264]	; 0x108
90003bc8:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
90003bcc:	b011      	add	sp, #68	; 0x44
90003bce:	bdf0      	pop	{r4, r5, r6, r7, pc}
90003bd0:	9000b4e4 	.word	0x9000b4e4

90003bd4 <_SetOrg>:
90003bd4:	b507      	push	{r0, r1, r2, lr}
90003bd6:	e88d 0006 	stmia.w	sp, {r1, r2}
90003bda:	466a      	mov	r2, sp
90003bdc:	2103      	movs	r1, #3
90003bde:	6980      	ldr	r0, [r0, #24]
90003be0:	f7fe f972 	bl	90001ec8 <LCD_X_DisplayDriver>
90003be4:	b003      	add	sp, #12
90003be6:	f85d fb04 	ldr.w	pc, [sp], #4

90003bea <_Log2PhysY_X0Y0S1>:
90003bea:	4608      	mov	r0, r1
90003bec:	4770      	bx	lr

90003bee <_Log2PhysX_X0Y0S0>:
90003bee:	4608      	mov	r0, r1
90003bf0:	4770      	bx	lr

90003bf2 <_Log2PhysX_X0Y1S0>:
90003bf2:	4608      	mov	r0, r1
90003bf4:	4770      	bx	lr

90003bf6 <_Log2PhysX_X0Y0S1>:
90003bf6:	4610      	mov	r0, r2
90003bf8:	4770      	bx	lr

90003bfa <_Log2PhysX_X0Y1S1>:
90003bfa:	4610      	mov	r0, r2
90003bfc:	4770      	bx	lr

90003bfe <_Log2PhysY_X0Y0S0>:
90003bfe:	4610      	mov	r0, r2
90003c00:	4770      	bx	lr

90003c02 <_Log2PhysY_X0Y1S0>:
90003c02:	6840      	ldr	r0, [r0, #4]
90003c04:	1a80      	subs	r0, r0, r2
90003c06:	3801      	subs	r0, #1
90003c08:	4770      	bx	lr

90003c0a <_Log2PhysX_X1Y0S0>:
90003c0a:	6800      	ldr	r0, [r0, #0]
90003c0c:	1a40      	subs	r0, r0, r1
90003c0e:	3801      	subs	r0, #1
90003c10:	4770      	bx	lr

90003c12 <_Log2PhysX_X1Y1S0>:
90003c12:	6800      	ldr	r0, [r0, #0]
90003c14:	1a40      	subs	r0, r0, r1
90003c16:	3801      	subs	r0, #1
90003c18:	4770      	bx	lr

90003c1a <_Log2PhysX_X1Y0S1>:
90003c1a:	6840      	ldr	r0, [r0, #4]
90003c1c:	1a80      	subs	r0, r0, r2
90003c1e:	3801      	subs	r0, #1
90003c20:	4770      	bx	lr

90003c22 <_Log2PhysX_X1Y1S1>:
90003c22:	6840      	ldr	r0, [r0, #4]
90003c24:	1a80      	subs	r0, r0, r2
90003c26:	3801      	subs	r0, #1
90003c28:	4770      	bx	lr

90003c2a <_Log2PhysY_X0Y1S1>:
90003c2a:	6800      	ldr	r0, [r0, #0]
90003c2c:	1a40      	subs	r0, r0, r1
90003c2e:	3801      	subs	r0, #1
90003c30:	4770      	bx	lr

90003c32 <GUIDRV_FlexColor__SetPixelIndexNoCache>:
90003c32:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90003c36:	6884      	ldr	r4, [r0, #8]
90003c38:	4698      	mov	r8, r3
90003c3a:	460e      	mov	r6, r1
90003c3c:	4617      	mov	r7, r2
90003c3e:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
90003c40:	079b      	lsls	r3, r3, #30
90003c42:	d52e      	bpl.n	90003ca2 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x70>
90003c44:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
90003c48:	4620      	mov	r0, r4
90003c4a:	4798      	blx	r3
90003c4c:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
90003c50:	4605      	mov	r5, r0
90003c52:	463a      	mov	r2, r7
90003c54:	4631      	mov	r1, r6
90003c56:	4620      	mov	r0, r4
90003c58:	4798      	blx	r3
90003c5a:	69a3      	ldr	r3, [r4, #24]
90003c5c:	6922      	ldr	r2, [r4, #16]
90003c5e:	4606      	mov	r6, r0
90003c60:	429d      	cmp	r5, r3
90003c62:	bfd4      	ite	le
90003c64:	2300      	movle	r3, #0
90003c66:	2301      	movgt	r3, #1
90003c68:	4295      	cmp	r5, r2
90003c6a:	bfb8      	it	lt
90003c6c:	f043 0301 	orrlt.w	r3, r3, #1
90003c70:	6962      	ldr	r2, [r4, #20]
90003c72:	4290      	cmp	r0, r2
90003c74:	bfb8      	it	lt
90003c76:	f043 0301 	orrlt.w	r3, r3, #1
90003c7a:	b913      	cbnz	r3, 90003c82 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x50>
90003c7c:	69e3      	ldr	r3, [r4, #28]
90003c7e:	4298      	cmp	r0, r3
90003c80:	dd0a      	ble.n	90003c98 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x66>
90003c82:	6862      	ldr	r2, [r4, #4]
90003c84:	4620      	mov	r0, r4
90003c86:	6823      	ldr	r3, [r4, #0]
90003c88:	3a01      	subs	r2, #1
90003c8a:	3b01      	subs	r3, #1
90003c8c:	9200      	str	r2, [sp, #0]
90003c8e:	2200      	movs	r2, #0
90003c90:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
90003c94:	4611      	mov	r1, r2
90003c96:	47b8      	blx	r7
90003c98:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
90003c9c:	4632      	mov	r2, r6
90003c9e:	4629      	mov	r1, r5
90003ca0:	e001      	b.n	90003ca6 <GUIDRV_FlexColor__SetPixelIndexNoCache+0x74>
90003ca2:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
90003ca6:	4620      	mov	r0, r4
90003ca8:	4798      	blx	r3
90003caa:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
90003cae:	4641      	mov	r1, r8
90003cb0:	4620      	mov	r0, r4
90003cb2:	b002      	add	sp, #8
90003cb4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90003cb8:	4718      	bx	r3

90003cba <GUIDRV_FlexColor__GetPixelIndexNoCache>:
90003cba:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90003cbc:	6884      	ldr	r4, [r0, #8]
90003cbe:	460e      	mov	r6, r1
90003cc0:	4617      	mov	r7, r2
90003cc2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
90003cc4:	079b      	lsls	r3, r3, #30
90003cc6:	d543      	bpl.n	90003d50 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x96>
90003cc8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
90003ccc:	4620      	mov	r0, r4
90003cce:	4798      	blx	r3
90003cd0:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
90003cd4:	4631      	mov	r1, r6
90003cd6:	4605      	mov	r5, r0
90003cd8:	463a      	mov	r2, r7
90003cda:	4620      	mov	r0, r4
90003cdc:	4798      	blx	r3
90003cde:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
90003ce2:	4606      	mov	r6, r0
90003ce4:	b11b      	cbz	r3, 90003cee <GUIDRV_FlexColor__GetPixelIndexNoCache+0x34>
90003ce6:	2200      	movs	r2, #0
90003ce8:	2101      	movs	r1, #1
90003cea:	4620      	mov	r0, r4
90003cec:	4798      	blx	r3
90003cee:	69a3      	ldr	r3, [r4, #24]
90003cf0:	6922      	ldr	r2, [r4, #16]
90003cf2:	429d      	cmp	r5, r3
90003cf4:	bfd4      	ite	le
90003cf6:	2300      	movle	r3, #0
90003cf8:	2301      	movgt	r3, #1
90003cfa:	4295      	cmp	r5, r2
90003cfc:	bfb8      	it	lt
90003cfe:	f043 0301 	orrlt.w	r3, r3, #1
90003d02:	6962      	ldr	r2, [r4, #20]
90003d04:	4296      	cmp	r6, r2
90003d06:	bfb8      	it	lt
90003d08:	f043 0301 	orrlt.w	r3, r3, #1
90003d0c:	b913      	cbnz	r3, 90003d14 <GUIDRV_FlexColor__GetPixelIndexNoCache+0x5a>
90003d0e:	69e3      	ldr	r3, [r4, #28]
90003d10:	429e      	cmp	r6, r3
90003d12:	dd0a      	ble.n	90003d2a <GUIDRV_FlexColor__GetPixelIndexNoCache+0x70>
90003d14:	6862      	ldr	r2, [r4, #4]
90003d16:	4620      	mov	r0, r4
90003d18:	6823      	ldr	r3, [r4, #0]
90003d1a:	3a01      	subs	r2, #1
90003d1c:	3b01      	subs	r3, #1
90003d1e:	9200      	str	r2, [sp, #0]
90003d20:	2200      	movs	r2, #0
90003d22:	f8d4 70a8 	ldr.w	r7, [r4, #168]	; 0xa8
90003d26:	4611      	mov	r1, r2
90003d28:	47b8      	blx	r7
90003d2a:	4629      	mov	r1, r5
90003d2c:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
90003d30:	4632      	mov	r2, r6
90003d32:	4620      	mov	r0, r4
90003d34:	4798      	blx	r3
90003d36:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
90003d3a:	4620      	mov	r0, r4
90003d3c:	4798      	blx	r3
90003d3e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
90003d42:	4605      	mov	r5, r0
90003d44:	b17b      	cbz	r3, 90003d66 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
90003d46:	2201      	movs	r2, #1
90003d48:	2100      	movs	r1, #0
90003d4a:	4620      	mov	r0, r4
90003d4c:	4798      	blx	r3
90003d4e:	e00a      	b.n	90003d66 <GUIDRV_FlexColor__GetPixelIndexNoCache+0xac>
90003d50:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
90003d54:	4620      	mov	r0, r4
90003d56:	4798      	blx	r3
90003d58:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
90003d5c:	4620      	mov	r0, r4
90003d5e:	b003      	add	sp, #12
90003d60:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90003d64:	4718      	bx	r3
90003d66:	4628      	mov	r0, r5
90003d68:	b003      	add	sp, #12
90003d6a:	bdf0      	pop	{r4, r5, r6, r7, pc}

90003d6c <GUIDRV_FlexColor__InitOnce>:
90003d6c:	b538      	push	{r3, r4, r5, lr}
90003d6e:	6885      	ldr	r5, [r0, #8]
90003d70:	4604      	mov	r4, r0
90003d72:	b99d      	cbnz	r5, 90003d9c <GUIDRV_FlexColor__InitOnce+0x30>
90003d74:	f44f 70be 	mov.w	r0, #380	; 0x17c
90003d78:	f7fe fae4 	bl	90002344 <GUI_ALLOC_GetFixedBlock>
90003d7c:	4b08      	ldr	r3, [pc, #32]	; (90003da0 <GUIDRV_FlexColor__InitOnce+0x34>)
90003d7e:	f44f 72be 	mov.w	r2, #380	; 0x17c
90003d82:	60a0      	str	r0, [r4, #8]
90003d84:	681b      	ldr	r3, [r3, #0]
90003d86:	4629      	mov	r1, r5
90003d88:	4798      	blx	r3
90003d8a:	68a3      	ldr	r3, [r4, #8]
90003d8c:	2202      	movs	r2, #2
90003d8e:	641c      	str	r4, [r3, #64]	; 0x40
90003d90:	84da      	strh	r2, [r3, #38]	; 0x26
90003d92:	2201      	movs	r2, #1
90003d94:	621a      	str	r2, [r3, #32]
90003d96:	4a03      	ldr	r2, [pc, #12]	; (90003da4 <GUIDRV_FlexColor__InitOnce+0x38>)
90003d98:	f8c3 2110 	str.w	r2, [r3, #272]	; 0x110
90003d9c:	bd38      	pop	{r3, r4, r5, pc}
90003d9e:	bf00      	nop
90003da0:	200000ac 	.word	0x200000ac
90003da4:	90003b8d 	.word	0x90003b8d

90003da8 <_SetDevFunc>:
90003da8:	b570      	push	{r4, r5, r6, lr}
90003daa:	4606      	mov	r6, r0
90003dac:	460d      	mov	r5, r1
90003dae:	4614      	mov	r4, r2
90003db0:	f7ff ffdc 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90003db4:	68b3      	ldr	r3, [r6, #8]
90003db6:	2b00      	cmp	r3, #0
90003db8:	d03b      	beq.n	90003e32 <_SetDevFunc+0x8a>
90003dba:	2d26      	cmp	r5, #38	; 0x26
90003dbc:	d002      	beq.n	90003dc4 <_SetDevFunc+0x1c>
90003dbe:	2d27      	cmp	r5, #39	; 0x27
90003dc0:	d016      	beq.n	90003df0 <_SetDevFunc+0x48>
90003dc2:	bd70      	pop	{r4, r5, r6, pc}
90003dc4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90003dc6:	2a10      	cmp	r2, #16
90003dc8:	d002      	beq.n	90003dd0 <_SetDevFunc+0x28>
90003dca:	2a12      	cmp	r2, #18
90003dcc:	d008      	beq.n	90003de0 <_SetDevFunc+0x38>
90003dce:	bd70      	pop	{r4, r5, r6, pc}
90003dd0:	4a18      	ldr	r2, [pc, #96]	; (90003e34 <_SetDevFunc+0x8c>)
90003dd2:	f8c3 40dc 	str.w	r4, [r3, #220]	; 0xdc
90003dd6:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
90003dda:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
90003dde:	bd70      	pop	{r4, r5, r6, pc}
90003de0:	4a15      	ldr	r2, [pc, #84]	; (90003e38 <_SetDevFunc+0x90>)
90003de2:	f8c3 40e0 	str.w	r4, [r3, #224]	; 0xe0
90003de6:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
90003dea:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
90003dee:	bd70      	pop	{r4, r5, r6, pc}
90003df0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90003df2:	2a10      	cmp	r2, #16
90003df4:	d002      	beq.n	90003dfc <_SetDevFunc+0x54>
90003df6:	2a12      	cmp	r2, #18
90003df8:	d00e      	beq.n	90003e18 <_SetDevFunc+0x70>
90003dfa:	bd70      	pop	{r4, r5, r6, pc}
90003dfc:	b13c      	cbz	r4, 90003e0e <_SetDevFunc+0x66>
90003dfe:	4a0f      	ldr	r2, [pc, #60]	; (90003e3c <_SetDevFunc+0x94>)
90003e00:	f8c3 40e4 	str.w	r4, [r3, #228]	; 0xe4
90003e04:	f8c3 20cc 	str.w	r2, [r3, #204]	; 0xcc
90003e08:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
90003e0c:	bd70      	pop	{r4, r5, r6, pc}
90003e0e:	f8c3 40cc 	str.w	r4, [r3, #204]	; 0xcc
90003e12:	f8c3 40c8 	str.w	r4, [r3, #200]	; 0xc8
90003e16:	bd70      	pop	{r4, r5, r6, pc}
90003e18:	b13c      	cbz	r4, 90003e2a <_SetDevFunc+0x82>
90003e1a:	4a09      	ldr	r2, [pc, #36]	; (90003e40 <_SetDevFunc+0x98>)
90003e1c:	f8c3 40e8 	str.w	r4, [r3, #232]	; 0xe8
90003e20:	f8c3 20d0 	str.w	r2, [r3, #208]	; 0xd0
90003e24:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90003e28:	bd70      	pop	{r4, r5, r6, pc}
90003e2a:	f8c3 40d0 	str.w	r4, [r3, #208]	; 0xd0
90003e2e:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90003e32:	bd70      	pop	{r4, r5, r6, pc}
90003e34:	90003a0d 	.word	0x90003a0d
90003e38:	90003a17 	.word	0x90003a17
90003e3c:	90003a21 	.word	0x90003a21
90003e40:	90003a5b 	.word	0x90003a5b

90003e44 <_GetDevFunc_Init>:
90003e44:	b538      	push	{r3, r4, r5, lr}
90003e46:	4605      	mov	r5, r0
90003e48:	f7ff ff90 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90003e4c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
90003e50:	68ac      	ldr	r4, [r5, #8]
90003e52:	f7fe fa77 	bl	90002344 <GUI_ALLOC_GetFixedBlock>
90003e56:	66a0      	str	r0, [r4, #104]	; 0x68
90003e58:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90003e5a:	6823      	ldr	r3, [r4, #0]
90003e5c:	3007      	adds	r0, #7
90003e5e:	10c0      	asrs	r0, r0, #3
90003e60:	4358      	muls	r0, r3
90003e62:	f7fe fa6f 	bl	90002344 <GUI_ALLOC_GetFixedBlock>
90003e66:	2200      	movs	r2, #0
90003e68:	2101      	movs	r1, #1
90003e6a:	66e0      	str	r0, [r4, #108]	; 0x6c
90003e6c:	69a8      	ldr	r0, [r5, #24]
90003e6e:	f7fe f82b 	bl	90001ec8 <LCD_X_DisplayDriver>
90003e72:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
90003e76:	4605      	mov	r5, r0
90003e78:	4620      	mov	r0, r4
90003e7a:	4798      	blx	r3
90003e7c:	4620      	mov	r0, r4
90003e7e:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
90003e82:	4798      	blx	r3
90003e84:	2d00      	cmp	r5, #0
90003e86:	bfd4      	ite	le
90003e88:	2000      	movle	r0, #0
90003e8a:	2001      	movgt	r0, #1
90003e8c:	bd38      	pop	{r3, r4, r5, pc}

90003e8e <_GetDevFunc_SetSize>:
90003e8e:	b570      	push	{r4, r5, r6, lr}
90003e90:	4606      	mov	r6, r0
90003e92:	460d      	mov	r5, r1
90003e94:	4614      	mov	r4, r2
90003e96:	f7ff ff69 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90003e9a:	68b3      	ldr	r3, [r6, #8]
90003e9c:	601d      	str	r5, [r3, #0]
90003e9e:	605c      	str	r4, [r3, #4]
90003ea0:	bd70      	pop	{r4, r5, r6, pc}

90003ea2 <_GetDevFunc_SetVSize>:
90003ea2:	b570      	push	{r4, r5, r6, lr}
90003ea4:	4606      	mov	r6, r0
90003ea6:	460d      	mov	r5, r1
90003ea8:	4614      	mov	r4, r2
90003eaa:	f7ff ff5f 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90003eae:	68b3      	ldr	r3, [r6, #8]
90003eb0:	609d      	str	r5, [r3, #8]
90003eb2:	60dc      	str	r4, [r3, #12]
90003eb4:	bd70      	pop	{r4, r5, r6, pc}

90003eb6 <_GetDevFunc_Off>:
90003eb6:	b510      	push	{r4, lr}
90003eb8:	4604      	mov	r4, r0
90003eba:	f7ff ff57 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90003ebe:	2200      	movs	r2, #0
90003ec0:	2106      	movs	r1, #6
90003ec2:	69a0      	ldr	r0, [r4, #24]
90003ec4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90003ec8:	f7fd bffe 	b.w	90001ec8 <LCD_X_DisplayDriver>

90003ecc <_GetDevFunc_On>:
90003ecc:	b510      	push	{r4, lr}
90003ece:	4604      	mov	r4, r0
90003ed0:	f7ff ff4c 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90003ed4:	2200      	movs	r2, #0
90003ed6:	2105      	movs	r1, #5
90003ed8:	69a0      	ldr	r0, [r4, #24]
90003eda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90003ede:	f7fd bff3 	b.w	90001ec8 <LCD_X_DisplayDriver>

90003ee2 <GUIDRV_FlexColor_Config>:
90003ee2:	b538      	push	{r3, r4, r5, lr}
90003ee4:	460c      	mov	r4, r1
90003ee6:	4605      	mov	r5, r0
90003ee8:	f7ff ff40 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90003eec:	6822      	ldr	r2, [r4, #0]
90003eee:	68ab      	ldr	r3, [r5, #8]
90003ef0:	62da      	str	r2, [r3, #44]	; 0x2c
90003ef2:	6862      	ldr	r2, [r4, #4]
90003ef4:	631a      	str	r2, [r3, #48]	; 0x30
90003ef6:	68a2      	ldr	r2, [r4, #8]
90003ef8:	635a      	str	r2, [r3, #52]	; 0x34
90003efa:	0752      	lsls	r2, r2, #29
90003efc:	d507      	bpl.n	90003f0e <GUIDRV_FlexColor_Config+0x2c>
90003efe:	681a      	ldr	r2, [r3, #0]
90003f00:	6859      	ldr	r1, [r3, #4]
90003f02:	e883 0006 	stmia.w	r3, {r1, r2}
90003f06:	689a      	ldr	r2, [r3, #8]
90003f08:	68d9      	ldr	r1, [r3, #12]
90003f0a:	60da      	str	r2, [r3, #12]
90003f0c:	6099      	str	r1, [r3, #8]
90003f0e:	89a2      	ldrh	r2, [r4, #12]
90003f10:	849a      	strh	r2, [r3, #36]	; 0x24
90003f12:	6922      	ldr	r2, [r4, #16]
90003f14:	b112      	cbz	r2, 90003f1c <GUIDRV_FlexColor_Config+0x3a>
90003f16:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
90003f1a:	621a      	str	r2, [r3, #32]
90003f1c:	bd38      	pop	{r3, r4, r5, pc}

90003f1e <GUIDRV_FlexColor_SetFunc>:
90003f1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90003f22:	4604      	mov	r4, r0
90003f24:	461e      	mov	r6, r3
90003f26:	4617      	mov	r7, r2
90003f28:	4688      	mov	r8, r1
90003f2a:	f7ff ff1f 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90003f2e:	68a5      	ldr	r5, [r4, #8]
90003f30:	2268      	movs	r2, #104	; 0x68
90003f32:	4641      	mov	r1, r8
90003f34:	f505 708a 	add.w	r0, r5, #276	; 0x114
90003f38:	f003 fa62 	bl	90007400 <memcpy>
90003f3c:	4620      	mov	r0, r4
90003f3e:	47b8      	blx	r7
90003f40:	4620      	mov	r0, r4
90003f42:	47b0      	blx	r6
90003f44:	6923      	ldr	r3, [r4, #16]
90003f46:	689b      	ldr	r3, [r3, #8]
90003f48:	4798      	blx	r3
90003f4a:	62a8      	str	r0, [r5, #40]	; 0x28
90003f4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90003f50 <_ReadData>:
90003f50:	b508      	push	{r3, lr}
90003f52:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
90003f56:	4798      	blx	r3
90003f58:	bd08      	pop	{r3, pc}

90003f5a <_WriteData>:
90003f5a:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
90003f5e:	b288      	uxth	r0, r1
90003f60:	4718      	bx	r3
	...

90003f64 <_FillRect>:
90003f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003f68:	4e39      	ldr	r6, [pc, #228]	; (90004050 <_FillRect+0xec>)
90003f6a:	4682      	mov	sl, r0
90003f6c:	6885      	ldr	r5, [r0, #8]
90003f6e:	b085      	sub	sp, #20
90003f70:	6830      	ldr	r0, [r6, #0]
90003f72:	4688      	mov	r8, r1
90003f74:	4614      	mov	r4, r2
90003f76:	4699      	mov	r9, r3
90003f78:	7c00      	ldrb	r0, [r0, #16]
90003f7a:	f010 0f01 	tst.w	r0, #1
90003f7e:	eba3 0001 	sub.w	r0, r3, r1
90003f82:	d03d      	beq.n	90004000 <_FillRect+0x9c>
90003f84:	0043      	lsls	r3, r0, #1
90003f86:	1c47      	adds	r7, r0, #1
90003f88:	9303      	str	r3, [sp, #12]
90003f8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90003f8c:	429c      	cmp	r4, r3
90003f8e:	dc5b      	bgt.n	90004048 <_FillRect+0xe4>
90003f90:	f8d5 b0c8 	ldr.w	fp, [r5, #200]	; 0xc8
90003f94:	6eee      	ldr	r6, [r5, #108]	; 0x6c
90003f96:	f1bb 0f00 	cmp.w	fp, #0
90003f9a:	d101      	bne.n	90003fa0 <_FillRect+0x3c>
90003f9c:	46c3      	mov	fp, r8
90003f9e:	e007      	b.n	90003fb0 <_FillRect+0x4c>
90003fa0:	e88d 0050 	stmia.w	sp, {r4, r6}
90003fa4:	464b      	mov	r3, r9
90003fa6:	4622      	mov	r2, r4
90003fa8:	4641      	mov	r1, r8
90003faa:	4650      	mov	r0, sl
90003fac:	47d8      	blx	fp
90003fae:	e00d      	b.n	90003fcc <_FillRect+0x68>
90003fb0:	45cb      	cmp	fp, r9
90003fb2:	dc0a      	bgt.n	90003fca <_FillRect+0x66>
90003fb4:	4659      	mov	r1, fp
90003fb6:	f8d5 30f4 	ldr.w	r3, [r5, #244]	; 0xf4
90003fba:	4622      	mov	r2, r4
90003fbc:	4650      	mov	r0, sl
90003fbe:	4798      	blx	r3
90003fc0:	f10b 0b01 	add.w	fp, fp, #1
90003fc4:	f826 0b02 	strh.w	r0, [r6], #2
90003fc8:	e7f2      	b.n	90003fb0 <_FillRect+0x4c>
90003fca:	6eee      	ldr	r6, [r5, #108]	; 0x6c
90003fcc:	9a03      	ldr	r2, [sp, #12]
90003fce:	1eb3      	subs	r3, r6, #2
90003fd0:	4416      	add	r6, r2
90003fd2:	42b3      	cmp	r3, r6
90003fd4:	d005      	beq.n	90003fe2 <_FillRect+0x7e>
90003fd6:	6aa9      	ldr	r1, [r5, #40]	; 0x28
90003fd8:	f833 2f02 	ldrh.w	r2, [r3, #2]!
90003fdc:	404a      	eors	r2, r1
90003fde:	801a      	strh	r2, [r3, #0]
90003fe0:	e7f7      	b.n	90003fd2 <_FillRect+0x6e>
90003fe2:	9400      	str	r4, [sp, #0]
90003fe4:	4622      	mov	r2, r4
90003fe6:	464b      	mov	r3, r9
90003fe8:	4641      	mov	r1, r8
90003fea:	4628      	mov	r0, r5
90003fec:	f8d5 60a8 	ldr.w	r6, [r5, #168]	; 0xa8
90003ff0:	47b0      	blx	r6
90003ff2:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
90003ff6:	4639      	mov	r1, r7
90003ff8:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
90003ffa:	4798      	blx	r3
90003ffc:	3401      	adds	r4, #1
90003ffe:	e7c4      	b.n	90003f8a <_FillRect+0x26>
90004000:	9f0e      	ldr	r7, [sp, #56]	; 0x38
90004002:	1abc      	subs	r4, r7, r2
90004004:	1c67      	adds	r7, r4, #1
90004006:	fb00 7707 	mla	r7, r0, r7, r7
9000400a:	980e      	ldr	r0, [sp, #56]	; 0x38
9000400c:	9000      	str	r0, [sp, #0]
9000400e:	4628      	mov	r0, r5
90004010:	f8d5 40a8 	ldr.w	r4, [r5, #168]	; 0xa8
90004014:	47a0      	blx	r4
90004016:	6833      	ldr	r3, [r6, #0]
90004018:	6eae      	ldr	r6, [r5, #104]	; 0x68
9000401a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000401c:	2301      	movs	r3, #1
9000401e:	f8b2 8000 	ldrh.w	r8, [r2]
90004022:	b18f      	cbz	r7, 90004048 <_FillRect+0xe4>
90004024:	2ffa      	cmp	r7, #250	; 0xfa
90004026:	463c      	mov	r4, r7
90004028:	bf28      	it	cs
9000402a:	24fa      	movcs	r4, #250	; 0xfa
9000402c:	b123      	cbz	r3, 90004038 <_FillRect+0xd4>
9000402e:	4622      	mov	r2, r4
90004030:	4641      	mov	r1, r8
90004032:	4630      	mov	r0, r6
90004034:	f7fe fed0 	bl	90002dd8 <GUI__memset16>
90004038:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
9000403c:	4621      	mov	r1, r4
9000403e:	4630      	mov	r0, r6
90004040:	1b3f      	subs	r7, r7, r4
90004042:	4798      	blx	r3
90004044:	2300      	movs	r3, #0
90004046:	e7ec      	b.n	90004022 <_FillRect+0xbe>
90004048:	b005      	add	sp, #20
9000404a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000404e:	bf00      	nop
90004050:	200000a4 	.word	0x200000a4

90004054 <_DrawBitmap>:
90004054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004058:	b08f      	sub	sp, #60	; 0x3c
9000405a:	9303      	str	r3, [sp, #12]
9000405c:	6883      	ldr	r3, [r0, #8]
9000405e:	9005      	str	r0, [sp, #20]
90004060:	9309      	str	r3, [sp, #36]	; 0x24
90004062:	9b19      	ldr	r3, [sp, #100]	; 0x64
90004064:	9106      	str	r1, [sp, #24]
90004066:	2b08      	cmp	r3, #8
90004068:	9208      	str	r2, [sp, #32]
9000406a:	d80c      	bhi.n	90004086 <_DrawBitmap+0x32>
9000406c:	f44f 738b 	mov.w	r3, #278	; 0x116
90004070:	9a19      	ldr	r2, [sp, #100]	; 0x64
90004072:	40d3      	lsrs	r3, r2
90004074:	07db      	lsls	r3, r3, #31
90004076:	d506      	bpl.n	90004086 <_DrawBitmap+0x32>
90004078:	4b98      	ldr	r3, [pc, #608]	; (900042dc <_DrawBitmap+0x288>)
9000407a:	681b      	ldr	r3, [r3, #0]
9000407c:	7c1b      	ldrb	r3, [r3, #16]
9000407e:	f003 0303 	and.w	r3, r3, #3
90004082:	2b02      	cmp	r3, #2
90004084:	d010      	beq.n	900040a8 <_DrawBitmap+0x54>
90004086:	9b06      	ldr	r3, [sp, #24]
90004088:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9000408a:	9818      	ldr	r0, [sp, #96]	; 0x60
9000408c:	1899      	adds	r1, r3, r2
9000408e:	9a08      	ldr	r2, [sp, #32]
90004090:	9b03      	ldr	r3, [sp, #12]
90004092:	4402      	add	r2, r0
90004094:	9809      	ldr	r0, [sp, #36]	; 0x24
90004096:	18cb      	adds	r3, r1, r3
90004098:	3a01      	subs	r2, #1
9000409a:	3b01      	subs	r3, #1
9000409c:	9200      	str	r2, [sp, #0]
9000409e:	9a09      	ldr	r2, [sp, #36]	; 0x24
900040a0:	f8d2 40a8 	ldr.w	r4, [r2, #168]	; 0xa8
900040a4:	9a08      	ldr	r2, [sp, #32]
900040a6:	47a0      	blx	r4
900040a8:	9b03      	ldr	r3, [sp, #12]
900040aa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
900040ac:	3b01      	subs	r3, #1
900040ae:	9f08      	ldr	r7, [sp, #32]
900040b0:	930d      	str	r3, [sp, #52]	; 0x34
900040b2:	9b06      	ldr	r3, [sp, #24]
900040b4:	4413      	add	r3, r2
900040b6:	9304      	str	r3, [sp, #16]
900040b8:	9a04      	ldr	r2, [sp, #16]
900040ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900040bc:	4413      	add	r3, r2
900040be:	930c      	str	r3, [sp, #48]	; 0x30
900040c0:	9b08      	ldr	r3, [sp, #32]
900040c2:	9a18      	ldr	r2, [sp, #96]	; 0x60
900040c4:	1afb      	subs	r3, r7, r3
900040c6:	429a      	cmp	r2, r3
900040c8:	f340 8258 	ble.w	9000457c <_DrawBitmap+0x528>
900040cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
900040ce:	3b01      	subs	r3, #1
900040d0:	2b0f      	cmp	r3, #15
900040d2:	f200 824d 	bhi.w	90004570 <_DrawBitmap+0x51c>
900040d6:	e8df f013 	tbh	[pc, r3, lsl #1]
900040da:	0010      	.short	0x0010
900040dc:	024b00bf 	.word	0x024b00bf
900040e0:	024b0148 	.word	0x024b0148
900040e4:	024b024b 	.word	0x024b024b
900040e8:	024b01db 	.word	0x024b01db
900040ec:	024b024b 	.word	0x024b024b
900040f0:	024b024b 	.word	0x024b024b
900040f4:	024b024b 	.word	0x024b024b
900040f8:	0245      	.short	0x0245
900040fa:	9b05      	ldr	r3, [sp, #20]
900040fc:	689c      	ldr	r4, [r3, #8]
900040fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90004100:	685b      	ldr	r3, [r3, #4]
90004102:	930b      	str	r3, [sp, #44]	; 0x2c
90004104:	4b75      	ldr	r3, [pc, #468]	; (900042dc <_DrawBitmap+0x288>)
90004106:	681b      	ldr	r3, [r3, #0]
90004108:	7c1b      	ldrb	r3, [r3, #16]
9000410a:	f003 0303 	and.w	r3, r3, #3
9000410e:	2b02      	cmp	r3, #2
90004110:	d022      	beq.n	90004158 <_DrawBitmap+0x104>
90004112:	2b03      	cmp	r3, #3
90004114:	d074      	beq.n	90004200 <_DrawBitmap+0x1ac>
90004116:	2b01      	cmp	r3, #1
90004118:	d072      	beq.n	90004200 <_DrawBitmap+0x1ac>
9000411a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9000411c:	f04f 0880 	mov.w	r8, #128	; 0x80
90004120:	9e03      	ldr	r6, [sp, #12]
90004122:	9d1c      	ldr	r5, [sp, #112]	; 0x70
90004124:	f8dd b06c 	ldr.w	fp, [sp, #108]	; 0x6c
90004128:	f8b3 9000 	ldrh.w	r9, [r3]
9000412c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
90004130:	f89b 1000 	ldrb.w	r1, [fp]
90004134:	fa48 f205 	asr.w	r2, r8, r5
90004138:	3501      	adds	r5, #1
9000413a:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
9000413e:	4211      	tst	r1, r2
90004140:	bf14      	ite	ne
90004142:	4650      	movne	r0, sl
90004144:	4648      	moveq	r0, r9
90004146:	4798      	blx	r3
90004148:	2d08      	cmp	r5, #8
9000414a:	bf04      	itt	eq
9000414c:	f10b 0b01 	addeq.w	fp, fp, #1
90004150:	2500      	moveq	r5, #0
90004152:	3e01      	subs	r6, #1
90004154:	d1ec      	bne.n	90004130 <_DrawBitmap+0xdc>
90004156:	e20b      	b.n	90004570 <_DrawBitmap+0x51c>
90004158:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9000415a:	2500      	movs	r5, #0
9000415c:	f8dd b010 	ldr.w	fp, [sp, #16]
90004160:	930a      	str	r3, [sp, #40]	; 0x28
90004162:	462b      	mov	r3, r5
90004164:	f8d4 a06c 	ldr.w	sl, [r4, #108]	; 0x6c
90004168:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
9000416c:	f8cd b01c 	str.w	fp, [sp, #28]
90004170:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90004172:	f892 9000 	ldrb.w	r9, [r2]
90004176:	2280      	movs	r2, #128	; 0x80
90004178:	fa42 f208 	asr.w	r2, r2, r8
9000417c:	ea19 0902 	ands.w	r9, r9, r2
90004180:	d00d      	beq.n	9000419e <_DrawBitmap+0x14a>
90004182:	b91b      	cbnz	r3, 9000418c <_DrawBitmap+0x138>
90004184:	f8d4 a06c 	ldr.w	sl, [r4, #108]	; 0x6c
90004188:	f8dd b01c 	ldr.w	fp, [sp, #28]
9000418c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90004190:	3501      	adds	r5, #1
90004192:	f10a 0a02 	add.w	sl, sl, #2
90004196:	f82a 3c02 	strh.w	r3, [sl, #-2]
9000419a:	2301      	movs	r3, #1
9000419c:	e013      	b.n	900041c6 <_DrawBitmap+0x172>
9000419e:	2b01      	cmp	r3, #1
900041a0:	d110      	bne.n	900041c4 <_DrawBitmap+0x170>
900041a2:	9b07      	ldr	r3, [sp, #28]
900041a4:	463a      	mov	r2, r7
900041a6:	9700      	str	r7, [sp, #0]
900041a8:	4659      	mov	r1, fp
900041aa:	3b01      	subs	r3, #1
900041ac:	4620      	mov	r0, r4
900041ae:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
900041b2:	47b0      	blx	r6
900041b4:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
900041b8:	4629      	mov	r1, r5
900041ba:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
900041bc:	4798      	blx	r3
900041be:	464d      	mov	r5, r9
900041c0:	464b      	mov	r3, r9
900041c2:	e000      	b.n	900041c6 <_DrawBitmap+0x172>
900041c4:	464b      	mov	r3, r9
900041c6:	9a07      	ldr	r2, [sp, #28]
900041c8:	f108 0801 	add.w	r8, r8, #1
900041cc:	9903      	ldr	r1, [sp, #12]
900041ce:	3201      	adds	r2, #1
900041d0:	f1b8 0f08 	cmp.w	r8, #8
900041d4:	9207      	str	r2, [sp, #28]
900041d6:	bf01      	itttt	eq
900041d8:	f04f 0800 	moveq.w	r8, #0
900041dc:	9a0a      	ldreq	r2, [sp, #40]	; 0x28
900041de:	3201      	addeq	r2, #1
900041e0:	920a      	streq	r2, [sp, #40]	; 0x28
900041e2:	9a04      	ldr	r2, [sp, #16]
900041e4:	440a      	add	r2, r1
900041e6:	9907      	ldr	r1, [sp, #28]
900041e8:	4291      	cmp	r1, r2
900041ea:	d1c1      	bne.n	90004170 <_DrawBitmap+0x11c>
900041ec:	2d00      	cmp	r5, #0
900041ee:	f000 81bf 	beq.w	90004570 <_DrawBitmap+0x51c>
900041f2:	9700      	str	r7, [sp, #0]
900041f4:	463a      	mov	r2, r7
900041f6:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
900041fa:	4659      	mov	r1, fp
900041fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900041fe:	e1aa      	b.n	90004556 <_DrawBitmap+0x502>
90004200:	9b03      	ldr	r3, [sp, #12]
90004202:	f04f 0b80 	mov.w	fp, #128	; 0x80
90004206:	9a04      	ldr	r2, [sp, #16]
90004208:	9d1c      	ldr	r5, [sp, #112]	; 0x70
9000420a:	f8dd 806c 	ldr.w	r8, [sp, #108]	; 0x6c
9000420e:	eb03 0a02 	add.w	sl, r3, r2
90004212:	9307      	str	r3, [sp, #28]
90004214:	9b07      	ldr	r3, [sp, #28]
90004216:	f898 2000 	ldrb.w	r2, [r8]
9000421a:	ebc3 090a 	rsb	r9, r3, sl
9000421e:	fa4b f305 	asr.w	r3, fp, r5
90004222:	421a      	tst	r2, r3
90004224:	d00d      	beq.n	90004242 <_DrawBitmap+0x1ee>
90004226:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
9000422a:	463a      	mov	r2, r7
9000422c:	4649      	mov	r1, r9
9000422e:	9805      	ldr	r0, [sp, #20]
90004230:	4798      	blx	r3
90004232:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90004234:	463a      	mov	r2, r7
90004236:	4649      	mov	r1, r9
90004238:	4043      	eors	r3, r0
9000423a:	f8d4 60f8 	ldr.w	r6, [r4, #248]	; 0xf8
9000423e:	9805      	ldr	r0, [sp, #20]
90004240:	47b0      	blx	r6
90004242:	3501      	adds	r5, #1
90004244:	9b07      	ldr	r3, [sp, #28]
90004246:	2d08      	cmp	r5, #8
90004248:	bf04      	itt	eq
9000424a:	f108 0801 	addeq.w	r8, r8, #1
9000424e:	2500      	moveq	r5, #0
90004250:	3b01      	subs	r3, #1
90004252:	9307      	str	r3, [sp, #28]
90004254:	d1de      	bne.n	90004214 <_DrawBitmap+0x1c0>
90004256:	e18b      	b.n	90004570 <_DrawBitmap+0x51c>
90004258:	9b05      	ldr	r3, [sp, #20]
9000425a:	689c      	ldr	r4, [r3, #8]
9000425c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9000425e:	2b00      	cmp	r3, #0
90004260:	f000 8186 	beq.w	90004570 <_DrawBitmap+0x51c>
90004264:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90004266:	f893 b000 	ldrb.w	fp, [r3]
9000426a:	4b1c      	ldr	r3, [pc, #112]	; (900042dc <_DrawBitmap+0x288>)
9000426c:	681b      	ldr	r3, [r3, #0]
9000426e:	7c1b      	ldrb	r3, [r3, #16]
90004270:	f013 0303 	ands.w	r3, r3, #3
90004274:	d00f      	beq.n	90004296 <_DrawBitmap+0x242>
90004276:	2b02      	cmp	r3, #2
90004278:	f040 817a 	bne.w	90004570 <_DrawBitmap+0x51c>
9000427c:	9b04      	ldr	r3, [sp, #16]
9000427e:	2600      	movs	r6, #0
90004280:	f8d4 a06c 	ldr.w	sl, [r4, #108]	; 0x6c
90004284:	930a      	str	r3, [sp, #40]	; 0x28
90004286:	4632      	mov	r2, r6
90004288:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9000428a:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
9000428e:	930b      	str	r3, [sp, #44]	; 0x2c
90004290:	f8dd 8010 	ldr.w	r8, [sp, #16]
90004294:	e047      	b.n	90004326 <_DrawBitmap+0x2d2>
90004296:	9d1c      	ldr	r5, [sp, #112]	; 0x70
90004298:	f04f 08c0 	mov.w	r8, #192	; 0xc0
9000429c:	9e03      	ldr	r6, [sp, #12]
9000429e:	f8dd 906c 	ldr.w	r9, [sp, #108]	; 0x6c
900042a2:	f1c5 0203 	rsb	r2, r5, #3
900042a6:	991d      	ldr	r1, [sp, #116]	; 0x74
900042a8:	3501      	adds	r5, #1
900042aa:	0052      	lsls	r2, r2, #1
900042ac:	f1c2 0306 	rsb	r3, r2, #6
900042b0:	fa48 f303 	asr.w	r3, r8, r3
900042b4:	ea03 030b 	and.w	r3, r3, fp
900042b8:	fa23 f202 	lsr.w	r2, r3, r2
900042bc:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
900042c0:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
900042c4:	4798      	blx	r3
900042c6:	2d04      	cmp	r5, #4
900042c8:	bf02      	ittt	eq
900042ca:	f899 b001 	ldrbeq.w	fp, [r9, #1]
900042ce:	2500      	moveq	r5, #0
900042d0:	f109 0901 	addeq.w	r9, r9, #1
900042d4:	3e01      	subs	r6, #1
900042d6:	d1e4      	bne.n	900042a2 <_DrawBitmap+0x24e>
900042d8:	e14a      	b.n	90004570 <_DrawBitmap+0x51c>
900042da:	bf00      	nop
900042dc:	200000a4 	.word	0x200000a4
900042e0:	b91a      	cbnz	r2, 900042ea <_DrawBitmap+0x296>
900042e2:	f8d4 a06c 	ldr.w	sl, [r4, #108]	; 0x6c
900042e6:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
900042ea:	9a07      	ldr	r2, [sp, #28]
900042ec:	3601      	adds	r6, #1
900042ee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900042f0:	f10a 0a02 	add.w	sl, sl, #2
900042f4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
900042f8:	2201      	movs	r2, #1
900042fa:	f82a 3c02 	strh.w	r3, [sl, #-2]
900042fe:	f109 0901 	add.w	r9, r9, #1
90004302:	f108 0801 	add.w	r8, r8, #1
90004306:	f1b9 0f04 	cmp.w	r9, #4
9000430a:	d106      	bne.n	9000431a <_DrawBitmap+0x2c6>
9000430c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000430e:	f04f 0900 	mov.w	r9, #0
90004312:	f893 b001 	ldrb.w	fp, [r3, #1]
90004316:	3301      	adds	r3, #1
90004318:	930b      	str	r3, [sp, #44]	; 0x2c
9000431a:	9b04      	ldr	r3, [sp, #16]
9000431c:	9903      	ldr	r1, [sp, #12]
9000431e:	440b      	add	r3, r1
90004320:	4598      	cmp	r8, r3
90004322:	f000 80a7 	beq.w	90004474 <_DrawBitmap+0x420>
90004326:	f1c9 0503 	rsb	r5, r9, #3
9000432a:	21c0      	movs	r1, #192	; 0xc0
9000432c:	006d      	lsls	r5, r5, #1
9000432e:	f1c5 0306 	rsb	r3, r5, #6
90004332:	fa41 f303 	asr.w	r3, r1, r3
90004336:	ea03 030b 	and.w	r3, r3, fp
9000433a:	40eb      	lsrs	r3, r5
9000433c:	9307      	str	r3, [sp, #28]
9000433e:	d1cf      	bne.n	900042e0 <_DrawBitmap+0x28c>
90004340:	2a01      	cmp	r2, #1
90004342:	d110      	bne.n	90004366 <_DrawBitmap+0x312>
90004344:	463a      	mov	r2, r7
90004346:	9700      	str	r7, [sp, #0]
90004348:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
9000434c:	990a      	ldr	r1, [sp, #40]	; 0x28
9000434e:	4620      	mov	r0, r4
90004350:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
90004354:	47a8      	blx	r5
90004356:	4631      	mov	r1, r6
90004358:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
9000435c:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
9000435e:	4798      	blx	r3
90004360:	9e07      	ldr	r6, [sp, #28]
90004362:	4632      	mov	r2, r6
90004364:	e7cb      	b.n	900042fe <_DrawBitmap+0x2aa>
90004366:	9a07      	ldr	r2, [sp, #28]
90004368:	e7c9      	b.n	900042fe <_DrawBitmap+0x2aa>
9000436a:	9b05      	ldr	r3, [sp, #20]
9000436c:	689c      	ldr	r4, [r3, #8]
9000436e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90004370:	2b00      	cmp	r3, #0
90004372:	f000 80fd 	beq.w	90004570 <_DrawBitmap+0x51c>
90004376:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90004378:	f893 b000 	ldrb.w	fp, [r3]
9000437c:	4b81      	ldr	r3, [pc, #516]	; (90004584 <_DrawBitmap+0x530>)
9000437e:	681b      	ldr	r3, [r3, #0]
90004380:	7c1b      	ldrb	r3, [r3, #16]
90004382:	f013 0303 	ands.w	r3, r3, #3
90004386:	d00f      	beq.n	900043a8 <_DrawBitmap+0x354>
90004388:	2b02      	cmp	r3, #2
9000438a:	f040 80f1 	bne.w	90004570 <_DrawBitmap+0x51c>
9000438e:	9b04      	ldr	r3, [sp, #16]
90004390:	2600      	movs	r6, #0
90004392:	f8d4 a06c 	ldr.w	sl, [r4, #108]	; 0x6c
90004396:	930a      	str	r3, [sp, #40]	; 0x28
90004398:	4632      	mov	r2, r6
9000439a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9000439c:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
900043a0:	930b      	str	r3, [sp, #44]	; 0x2c
900043a2:	f8dd 8010 	ldr.w	r8, [sp, #16]
900043a6:	e043      	b.n	90004430 <_DrawBitmap+0x3dc>
900043a8:	9d1c      	ldr	r5, [sp, #112]	; 0x70
900043aa:	f04f 08f0 	mov.w	r8, #240	; 0xf0
900043ae:	9e03      	ldr	r6, [sp, #12]
900043b0:	f8dd 906c 	ldr.w	r9, [sp, #108]	; 0x6c
900043b4:	f1c5 0201 	rsb	r2, r5, #1
900043b8:	991d      	ldr	r1, [sp, #116]	; 0x74
900043ba:	3501      	adds	r5, #1
900043bc:	0092      	lsls	r2, r2, #2
900043be:	f1c2 0304 	rsb	r3, r2, #4
900043c2:	fa48 f303 	asr.w	r3, r8, r3
900043c6:	ea03 030b 	and.w	r3, r3, fp
900043ca:	fa23 f202 	lsr.w	r2, r3, r2
900043ce:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
900043d2:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
900043d6:	4798      	blx	r3
900043d8:	2d02      	cmp	r5, #2
900043da:	bf02      	ittt	eq
900043dc:	f899 b001 	ldrbeq.w	fp, [r9, #1]
900043e0:	2500      	moveq	r5, #0
900043e2:	f109 0901 	addeq.w	r9, r9, #1
900043e6:	3e01      	subs	r6, #1
900043e8:	d1e4      	bne.n	900043b4 <_DrawBitmap+0x360>
900043ea:	e0c1      	b.n	90004570 <_DrawBitmap+0x51c>
900043ec:	b91a      	cbnz	r2, 900043f6 <_DrawBitmap+0x3a2>
900043ee:	f8d4 a06c 	ldr.w	sl, [r4, #108]	; 0x6c
900043f2:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
900043f6:	9a07      	ldr	r2, [sp, #28]
900043f8:	3601      	adds	r6, #1
900043fa:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900043fc:	f10a 0a02 	add.w	sl, sl, #2
90004400:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
90004404:	2201      	movs	r2, #1
90004406:	f82a 3c02 	strh.w	r3, [sl, #-2]
9000440a:	f109 0901 	add.w	r9, r9, #1
9000440e:	f108 0801 	add.w	r8, r8, #1
90004412:	f1b9 0f02 	cmp.w	r9, #2
90004416:	d106      	bne.n	90004426 <_DrawBitmap+0x3d2>
90004418:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000441a:	f04f 0900 	mov.w	r9, #0
9000441e:	f893 b001 	ldrb.w	fp, [r3, #1]
90004422:	3301      	adds	r3, #1
90004424:	930b      	str	r3, [sp, #44]	; 0x2c
90004426:	9b03      	ldr	r3, [sp, #12]
90004428:	9904      	ldr	r1, [sp, #16]
9000442a:	440b      	add	r3, r1
9000442c:	4598      	cmp	r8, r3
9000442e:	d021      	beq.n	90004474 <_DrawBitmap+0x420>
90004430:	f1c9 0501 	rsb	r5, r9, #1
90004434:	21f0      	movs	r1, #240	; 0xf0
90004436:	00ad      	lsls	r5, r5, #2
90004438:	f1c5 0304 	rsb	r3, r5, #4
9000443c:	fa41 f303 	asr.w	r3, r1, r3
90004440:	ea03 030b 	and.w	r3, r3, fp
90004444:	40eb      	lsrs	r3, r5
90004446:	9307      	str	r3, [sp, #28]
90004448:	d1d0      	bne.n	900043ec <_DrawBitmap+0x398>
9000444a:	2a01      	cmp	r2, #1
9000444c:	d110      	bne.n	90004470 <_DrawBitmap+0x41c>
9000444e:	463a      	mov	r2, r7
90004450:	9700      	str	r7, [sp, #0]
90004452:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
90004456:	990a      	ldr	r1, [sp, #40]	; 0x28
90004458:	4620      	mov	r0, r4
9000445a:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
9000445e:	47a8      	blx	r5
90004460:	4631      	mov	r1, r6
90004462:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90004466:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
90004468:	4798      	blx	r3
9000446a:	9e07      	ldr	r6, [sp, #28]
9000446c:	4632      	mov	r2, r6
9000446e:	e7cc      	b.n	9000440a <_DrawBitmap+0x3b6>
90004470:	9a07      	ldr	r2, [sp, #28]
90004472:	e7ca      	b.n	9000440a <_DrawBitmap+0x3b6>
90004474:	2e00      	cmp	r6, #0
90004476:	d07b      	beq.n	90004570 <_DrawBitmap+0x51c>
90004478:	9700      	str	r7, [sp, #0]
9000447a:	463a      	mov	r2, r7
9000447c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000447e:	4620      	mov	r0, r4
90004480:	990a      	ldr	r1, [sp, #40]	; 0x28
90004482:	f8d4 50a8 	ldr.w	r5, [r4, #168]	; 0xa8
90004486:	47a8      	blx	r5
90004488:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
9000448c:	4631      	mov	r1, r6
9000448e:	e067      	b.n	90004560 <_DrawBitmap+0x50c>
90004490:	9b05      	ldr	r3, [sp, #20]
90004492:	689c      	ldr	r4, [r3, #8]
90004494:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90004496:	2b00      	cmp	r3, #0
90004498:	d06a      	beq.n	90004570 <_DrawBitmap+0x51c>
9000449a:	4b3a      	ldr	r3, [pc, #232]	; (90004584 <_DrawBitmap+0x530>)
9000449c:	681b      	ldr	r3, [r3, #0]
9000449e:	7c1b      	ldrb	r3, [r3, #16]
900044a0:	f013 0303 	ands.w	r3, r3, #3
900044a4:	d00f      	beq.n	900044c6 <_DrawBitmap+0x472>
900044a6:	2b02      	cmp	r3, #2
900044a8:	d162      	bne.n	90004570 <_DrawBitmap+0x51c>
900044aa:	f8dd a018 	ldr.w	sl, [sp, #24]
900044ae:	2500      	movs	r5, #0
900044b0:	9a03      	ldr	r2, [sp, #12]
900044b2:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
900044b6:	462b      	mov	r3, r5
900044b8:	4452      	add	r2, sl
900044ba:	f8dd b06c 	ldr.w	fp, [sp, #108]	; 0x6c
900044be:	f8cd a01c 	str.w	sl, [sp, #28]
900044c2:	920a      	str	r2, [sp, #40]	; 0x28
900044c4:	e024      	b.n	90004510 <_DrawBitmap+0x4bc>
900044c6:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
900044c8:	9b03      	ldr	r3, [sp, #12]
900044ca:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
900044cc:	1b5b      	subs	r3, r3, r5
900044ce:	4413      	add	r3, r2
900044d0:	2b00      	cmp	r3, #0
900044d2:	dd4d      	ble.n	90004570 <_DrawBitmap+0x51c>
900044d4:	f815 2b01 	ldrb.w	r2, [r5], #1
900044d8:	991d      	ldr	r1, [sp, #116]	; 0x74
900044da:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
900044de:	f831 0022 	ldrh.w	r0, [r1, r2, lsl #2]
900044e2:	4798      	blx	r3
900044e4:	e7f0      	b.n	900044c8 <_DrawBitmap+0x474>
900044e6:	b91b      	cbnz	r3, 900044f0 <_DrawBitmap+0x49c>
900044e8:	f8d4 806c 	ldr.w	r8, [r4, #108]	; 0x6c
900044ec:	f8dd a01c 	ldr.w	sl, [sp, #28]
900044f0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900044f2:	3501      	adds	r5, #1
900044f4:	f108 0802 	add.w	r8, r8, #2
900044f8:	f853 3029 	ldr.w	r3, [r3, r9, lsl #2]
900044fc:	f828 3c02 	strh.w	r3, [r8, #-2]
90004500:	2301      	movs	r3, #1
90004502:	9a07      	ldr	r2, [sp, #28]
90004504:	3201      	adds	r2, #1
90004506:	9207      	str	r2, [sp, #28]
90004508:	9907      	ldr	r1, [sp, #28]
9000450a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000450c:	4291      	cmp	r1, r2
9000450e:	d019      	beq.n	90004544 <_DrawBitmap+0x4f0>
90004510:	f81b 9b01 	ldrb.w	r9, [fp], #1
90004514:	f1b9 0f00 	cmp.w	r9, #0
90004518:	d1e5      	bne.n	900044e6 <_DrawBitmap+0x492>
9000451a:	2b01      	cmp	r3, #1
9000451c:	d110      	bne.n	90004540 <_DrawBitmap+0x4ec>
9000451e:	9b07      	ldr	r3, [sp, #28]
90004520:	463a      	mov	r2, r7
90004522:	9700      	str	r7, [sp, #0]
90004524:	4651      	mov	r1, sl
90004526:	3b01      	subs	r3, #1
90004528:	4620      	mov	r0, r4
9000452a:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
9000452e:	47b0      	blx	r6
90004530:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90004534:	4629      	mov	r1, r5
90004536:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
90004538:	4798      	blx	r3
9000453a:	464d      	mov	r5, r9
9000453c:	464b      	mov	r3, r9
9000453e:	e7e0      	b.n	90004502 <_DrawBitmap+0x4ae>
90004540:	464b      	mov	r3, r9
90004542:	e7de      	b.n	90004502 <_DrawBitmap+0x4ae>
90004544:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90004546:	9a06      	ldr	r2, [sp, #24]
90004548:	4413      	add	r3, r2
9000454a:	b18d      	cbz	r5, 90004570 <_DrawBitmap+0x51c>
9000454c:	9700      	str	r7, [sp, #0]
9000454e:	463a      	mov	r2, r7
90004550:	f8d4 60a8 	ldr.w	r6, [r4, #168]	; 0xa8
90004554:	4651      	mov	r1, sl
90004556:	4620      	mov	r0, r4
90004558:	47b0      	blx	r6
9000455a:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
9000455e:	4629      	mov	r1, r5
90004560:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
90004562:	e004      	b.n	9000456e <_DrawBitmap+0x51a>
90004564:	9b09      	ldr	r3, [sp, #36]	; 0x24
90004566:	9903      	ldr	r1, [sp, #12]
90004568:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
9000456c:	981b      	ldr	r0, [sp, #108]	; 0x6c
9000456e:	4798      	blx	r3
90004570:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90004572:	3701      	adds	r7, #1
90004574:	9a1a      	ldr	r2, [sp, #104]	; 0x68
90004576:	4413      	add	r3, r2
90004578:	931b      	str	r3, [sp, #108]	; 0x6c
9000457a:	e5a1      	b.n	900040c0 <_DrawBitmap+0x6c>
9000457c:	b00f      	add	sp, #60	; 0x3c
9000457e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004582:	bf00      	nop
90004584:	200000a4 	.word	0x200000a4

90004588 <GUIDRV_FlexColor_SetMode16bppC0B16>:
90004588:	b510      	push	{r4, lr}
9000458a:	4604      	mov	r4, r0
9000458c:	f7ff fbee 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90004590:	4b10      	ldr	r3, [pc, #64]	; (900045d4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x4c>)
90004592:	2110      	movs	r1, #16
90004594:	68a4      	ldr	r4, [r4, #8]
90004596:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
9000459a:	4620      	mov	r0, r4
9000459c:	4b0e      	ldr	r3, [pc, #56]	; (900045d8 <GUIDRV_FlexColor_SetMode16bppC0B16+0x50>)
9000459e:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
900045a2:	4b0e      	ldr	r3, [pc, #56]	; (900045dc <GUIDRV_FlexColor_SetMode16bppC0B16+0x54>)
900045a4:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
900045a8:	4b0d      	ldr	r3, [pc, #52]	; (900045e0 <GUIDRV_FlexColor_SetMode16bppC0B16+0x58>)
900045aa:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
900045ae:	4b0d      	ldr	r3, [pc, #52]	; (900045e4 <GUIDRV_FlexColor_SetMode16bppC0B16+0x5c>)
900045b0:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
900045b4:	4b0c      	ldr	r3, [pc, #48]	; (900045e8 <GUIDRV_FlexColor_SetMode16bppC0B16+0x60>)
900045b6:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
900045ba:	f8d4 30c8 	ldr.w	r3, [r4, #200]	; 0xc8
900045be:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
900045c2:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
900045c6:	4798      	blx	r3
900045c8:	2310      	movs	r3, #16
900045ca:	63a3      	str	r3, [r4, #56]	; 0x38
900045cc:	4b07      	ldr	r3, [pc, #28]	; (900045ec <GUIDRV_FlexColor_SetMode16bppC0B16+0x64>)
900045ce:	6463      	str	r3, [r4, #68]	; 0x44
900045d0:	bd10      	pop	{r4, pc}
900045d2:	bf00      	nop
900045d4:	90004055 	.word	0x90004055
900045d8:	90003f65 	.word	0x90003f65
900045dc:	90003cbb 	.word	0x90003cbb
900045e0:	90003c33 	.word	0x90003c33
900045e4:	90003f51 	.word	0x90003f51
900045e8:	90003f5b 	.word	0x90003f5b
900045ec:	9000dcf8 	.word	0x9000dcf8

900045f0 <_SetPhysRAMAddr>:
900045f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900045f4:	4604      	mov	r4, r0
900045f6:	460e      	mov	r6, r1
900045f8:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
900045fc:	212a      	movs	r1, #42	; 0x2a
900045fe:	4615      	mov	r5, r2
90004600:	4798      	blx	r3
90004602:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90004604:	4620      	mov	r0, r4
90004606:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
9000460a:	b2b7      	uxth	r7, r6
9000460c:	4431      	add	r1, r6
9000460e:	f3c1 210f 	ubfx	r1, r1, #8, #16
90004612:	4798      	blx	r3
90004614:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90004616:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
9000461a:	4620      	mov	r0, r4
9000461c:	4439      	add	r1, r7
9000461e:	b2c9      	uxtb	r1, r1
90004620:	4798      	blx	r3
90004622:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90004624:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
90004628:	4620      	mov	r0, r4
9000462a:	4431      	add	r1, r6
9000462c:	b2ae      	uxth	r6, r5
9000462e:	f3c1 210f 	ubfx	r1, r1, #8, #16
90004632:	4798      	blx	r3
90004634:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90004636:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
9000463a:	4620      	mov	r0, r4
9000463c:	4439      	add	r1, r7
9000463e:	b2c9      	uxtb	r1, r1
90004640:	4798      	blx	r3
90004642:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
90004646:	4620      	mov	r0, r4
90004648:	212b      	movs	r1, #43	; 0x2b
9000464a:	4798      	blx	r3
9000464c:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000464e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
90004652:	4620      	mov	r0, r4
90004654:	4429      	add	r1, r5
90004656:	f3c1 210f 	ubfx	r1, r1, #8, #16
9000465a:	4798      	blx	r3
9000465c:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000465e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
90004662:	4620      	mov	r0, r4
90004664:	4431      	add	r1, r6
90004666:	b2c9      	uxtb	r1, r1
90004668:	4798      	blx	r3
9000466a:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000466c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
90004670:	4620      	mov	r0, r4
90004672:	4429      	add	r1, r5
90004674:	f3c1 210f 	ubfx	r1, r1, #8, #16
90004678:	4798      	blx	r3
9000467a:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000467c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
90004680:	4620      	mov	r0, r4
90004682:	4431      	add	r1, r6
90004684:	b2c9      	uxtb	r1, r1
90004686:	4798      	blx	r3
90004688:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
9000468c:	4620      	mov	r0, r4
9000468e:	212c      	movs	r1, #44	; 0x2c
90004690:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90004694:	4718      	bx	r3

90004696 <_SetRect>:
90004696:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000469a:	4604      	mov	r4, r0
9000469c:	4688      	mov	r8, r1
9000469e:	461f      	mov	r7, r3
900046a0:	212a      	movs	r1, #42	; 0x2a
900046a2:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
900046a6:	4616      	mov	r6, r2
900046a8:	9d06      	ldr	r5, [sp, #24]
900046aa:	4798      	blx	r3
900046ac:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900046ae:	4620      	mov	r0, r4
900046b0:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
900046b4:	4441      	add	r1, r8
900046b6:	f3c1 210f 	ubfx	r1, r1, #8, #16
900046ba:	4798      	blx	r3
900046bc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900046be:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
900046c2:	4620      	mov	r0, r4
900046c4:	4441      	add	r1, r8
900046c6:	b2c9      	uxtb	r1, r1
900046c8:	4798      	blx	r3
900046ca:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900046cc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
900046d0:	4620      	mov	r0, r4
900046d2:	4439      	add	r1, r7
900046d4:	f3c1 210f 	ubfx	r1, r1, #8, #16
900046d8:	4798      	blx	r3
900046da:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900046dc:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
900046e0:	4620      	mov	r0, r4
900046e2:	4439      	add	r1, r7
900046e4:	b2c9      	uxtb	r1, r1
900046e6:	4798      	blx	r3
900046e8:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
900046ec:	4620      	mov	r0, r4
900046ee:	212b      	movs	r1, #43	; 0x2b
900046f0:	4798      	blx	r3
900046f2:	6b21      	ldr	r1, [r4, #48]	; 0x30
900046f4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
900046f8:	4620      	mov	r0, r4
900046fa:	4431      	add	r1, r6
900046fc:	f3c1 210f 	ubfx	r1, r1, #8, #16
90004700:	4798      	blx	r3
90004702:	6b21      	ldr	r1, [r4, #48]	; 0x30
90004704:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
90004708:	4620      	mov	r0, r4
9000470a:	4431      	add	r1, r6
9000470c:	b2c9      	uxtb	r1, r1
9000470e:	4798      	blx	r3
90004710:	6b21      	ldr	r1, [r4, #48]	; 0x30
90004712:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
90004716:	4620      	mov	r0, r4
90004718:	4429      	add	r1, r5
9000471a:	f3c1 210f 	ubfx	r1, r1, #8, #16
9000471e:	4798      	blx	r3
90004720:	6b21      	ldr	r1, [r4, #48]	; 0x30
90004722:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
90004726:	4620      	mov	r0, r4
90004728:	4429      	add	r1, r5
9000472a:	b2c9      	uxtb	r1, r1
9000472c:	4798      	blx	r3
9000472e:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
90004732:	4620      	mov	r0, r4
90004734:	212c      	movs	r1, #44	; 0x2c
90004736:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9000473a:	4718      	bx	r3

9000473c <_SetOrientation>:
9000473c:	4a0e      	ldr	r2, [pc, #56]	; (90004778 <_SetOrientation+0x3c>)
9000473e:	b513      	push	{r0, r1, r4, lr}
90004740:	4604      	mov	r4, r0
90004742:	6851      	ldr	r1, [r2, #4]
90004744:	6810      	ldr	r0, [r2, #0]
90004746:	466b      	mov	r3, sp
90004748:	c303      	stmia	r3!, {r0, r1}
9000474a:	f8d4 308c 	ldr.w	r3, [r4, #140]	; 0x8c
9000474e:	4620      	mov	r0, r4
90004750:	2136      	movs	r1, #54	; 0x36
90004752:	4798      	blx	r3
90004754:	6b63      	ldr	r3, [r4, #52]	; 0x34
90004756:	aa02      	add	r2, sp, #8
90004758:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
9000475a:	4620      	mov	r0, r4
9000475c:	4413      	add	r3, r2
9000475e:	f021 01e0 	bic.w	r1, r1, #224	; 0xe0
90004762:	f813 3c08 	ldrb.w	r3, [r3, #-8]
90004766:	4319      	orrs	r1, r3
90004768:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
9000476c:	b289      	uxth	r1, r1
9000476e:	b002      	add	sp, #8
90004770:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90004774:	4718      	bx	r3
90004776:	bf00      	nop
90004778:	9000b558 	.word	0x9000b558

9000477c <_ReadPixel_16bpp_B8>:
9000477c:	b513      	push	{r0, r1, r4, lr}
9000477e:	4604      	mov	r4, r0
90004780:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
90004784:	202e      	movs	r0, #46	; 0x2e
90004786:	4798      	blx	r3
90004788:	6a21      	ldr	r1, [r4, #32]
9000478a:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
9000478e:	4668      	mov	r0, sp
90004790:	3103      	adds	r1, #3
90004792:	4798      	blx	r3
90004794:	6a23      	ldr	r3, [r4, #32]
90004796:	eb0d 0203 	add.w	r2, sp, r3
9000479a:	f81d 3003 	ldrb.w	r3, [sp, r3]
9000479e:	7850      	ldrb	r0, [r2, #1]
900047a0:	08db      	lsrs	r3, r3, #3
900047a2:	0880      	lsrs	r0, r0, #2
900047a4:	02db      	lsls	r3, r3, #11
900047a6:	ea43 1340 	orr.w	r3, r3, r0, lsl #5
900047aa:	7890      	ldrb	r0, [r2, #2]
900047ac:	ea43 00d0 	orr.w	r0, r3, r0, lsr #3
900047b0:	b002      	add	sp, #8
900047b2:	bd10      	pop	{r4, pc}

900047b4 <_ReadPixel_16bpp_B16_I>:
900047b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900047b6:	4604      	mov	r4, r0
900047b8:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
900047bc:	202e      	movs	r0, #46	; 0x2e
900047be:	4798      	blx	r3
900047c0:	6a21      	ldr	r1, [r4, #32]
900047c2:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
900047c6:	4668      	mov	r0, sp
900047c8:	3102      	adds	r1, #2
900047ca:	4798      	blx	r3
900047cc:	6a22      	ldr	r2, [r4, #32]
900047ce:	eb0d 0342 	add.w	r3, sp, r2, lsl #1
900047d2:	885b      	ldrh	r3, [r3, #2]
900047d4:	f3c3 00c4 	ubfx	r0, r3, #3, #5
900047d8:	115b      	asrs	r3, r3, #5
900047da:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900047de:	4303      	orrs	r3, r0
900047e0:	f83d 0012 	ldrh.w	r0, [sp, r2, lsl #1]
900047e4:	0200      	lsls	r0, r0, #8
900047e6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900047ea:	4318      	orrs	r0, r3
900047ec:	b004      	add	sp, #16
900047ee:	bd10      	pop	{r4, pc}

900047f0 <_SetReg_B8>:
900047f0:	b570      	push	{r4, r5, r6, lr}
900047f2:	4605      	mov	r5, r0
900047f4:	460c      	mov	r4, r1
900047f6:	f8d0 3114 	ldr.w	r3, [r0, #276]	; 0x114
900047fa:	0a08      	lsrs	r0, r1, #8
900047fc:	4798      	blx	r3
900047fe:	f8d5 3114 	ldr.w	r3, [r5, #276]	; 0x114
90004802:	b2e0      	uxtb	r0, r4
90004804:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90004808:	4718      	bx	r3

9000480a <_SetReg_B16>:
9000480a:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
9000480e:	4608      	mov	r0, r1
90004810:	4718      	bx	r3

90004812 <_WritePara_B8>:
90004812:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
90004816:	b2c8      	uxtb	r0, r1
90004818:	4718      	bx	r3

9000481a <_WritePara_B16>:
9000481a:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
9000481e:	4608      	mov	r0, r1
90004820:	4718      	bx	r3
	...

90004824 <_SetInterface>:
90004824:	2908      	cmp	r1, #8
90004826:	d002      	beq.n	9000482e <_SetInterface+0xa>
90004828:	2910      	cmp	r1, #16
9000482a:	d005      	beq.n	90004838 <_SetInterface+0x14>
9000482c:	4770      	bx	lr
9000482e:	4b06      	ldr	r3, [pc, #24]	; (90004848 <_SetInterface+0x24>)
90004830:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
90004834:	4b05      	ldr	r3, [pc, #20]	; (9000484c <_SetInterface+0x28>)
90004836:	e003      	b.n	90004840 <_SetInterface+0x1c>
90004838:	4b05      	ldr	r3, [pc, #20]	; (90004850 <_SetInterface+0x2c>)
9000483a:	f8c0 308c 	str.w	r3, [r0, #140]	; 0x8c
9000483e:	4b05      	ldr	r3, [pc, #20]	; (90004854 <_SetInterface+0x30>)
90004840:	f8c0 3090 	str.w	r3, [r0, #144]	; 0x90
90004844:	4770      	bx	lr
90004846:	bf00      	nop
90004848:	900047f1 	.word	0x900047f1
9000484c:	90004813 	.word	0x90004813
90004850:	9000480b 	.word	0x9000480b
90004854:	9000481b 	.word	0x9000481b

90004858 <_ReadRect_16bpp_B8>:
90004858:	b5f0      	push	{r4, r5, r6, r7, lr}
9000485a:	b085      	sub	sp, #20
9000485c:	6885      	ldr	r5, [r0, #8]
9000485e:	1a58      	subs	r0, r3, r1
90004860:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90004862:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
90004864:	1abc      	subs	r4, r7, r2
90004866:	9700      	str	r7, [sp, #0]
90004868:	f8d5 70a8 	ldr.w	r7, [r5, #168]	; 0xa8
9000486c:	3401      	adds	r4, #1
9000486e:	fb00 4404 	mla	r4, r0, r4, r4
90004872:	4628      	mov	r0, r5
90004874:	47b8      	blx	r7
90004876:	f8d5 3114 	ldr.w	r3, [r5, #276]	; 0x114
9000487a:	202e      	movs	r0, #46	; 0x2e
9000487c:	4798      	blx	r3
9000487e:	f8d5 3130 	ldr.w	r3, [r5, #304]	; 0x130
90004882:	6a29      	ldr	r1, [r5, #32]
90004884:	a802      	add	r0, sp, #8
90004886:	4798      	blx	r3
90004888:	f8d5 3130 	ldr.w	r3, [r5, #304]	; 0x130
9000488c:	2103      	movs	r1, #3
9000488e:	a802      	add	r0, sp, #8
90004890:	4798      	blx	r3
90004892:	f89d 3009 	ldrb.w	r3, [sp, #9]
90004896:	3c01      	subs	r4, #1
90004898:	ea4f 0293 	mov.w	r2, r3, lsr #2
9000489c:	f89d 3008 	ldrb.w	r3, [sp, #8]
900048a0:	ea4f 03d3 	mov.w	r3, r3, lsr #3
900048a4:	ea4f 23c3 	mov.w	r3, r3, lsl #11
900048a8:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
900048ac:	f89d 200a 	ldrb.w	r2, [sp, #10]
900048b0:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
900048b4:	f826 3b02 	strh.w	r3, [r6], #2
900048b8:	d1e6      	bne.n	90004888 <_ReadRect_16bpp_B8+0x30>
900048ba:	b005      	add	sp, #20
900048bc:	bdf0      	pop	{r4, r5, r6, r7, pc}

900048be <_ReadRect_16bpp_B16_I>:
900048be:	b5f0      	push	{r4, r5, r6, r7, lr}
900048c0:	b087      	sub	sp, #28
900048c2:	6885      	ldr	r5, [r0, #8]
900048c4:	1a58      	subs	r0, r3, r1
900048c6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
900048c8:	9e0d      	ldr	r6, [sp, #52]	; 0x34
900048ca:	1abc      	subs	r4, r7, r2
900048cc:	9700      	str	r7, [sp, #0]
900048ce:	f8d5 70a8 	ldr.w	r7, [r5, #168]	; 0xa8
900048d2:	3401      	adds	r4, #1
900048d4:	fb00 4404 	mla	r4, r0, r4, r4
900048d8:	4628      	mov	r0, r5
900048da:	47b8      	blx	r7
900048dc:	f8d5 3134 	ldr.w	r3, [r5, #308]	; 0x134
900048e0:	202e      	movs	r0, #46	; 0x2e
900048e2:	4798      	blx	r3
900048e4:	f8d5 3150 	ldr.w	r3, [r5, #336]	; 0x150
900048e8:	6a29      	ldr	r1, [r5, #32]
900048ea:	a802      	add	r0, sp, #8
900048ec:	4798      	blx	r3
900048ee:	f8d5 3150 	ldr.w	r3, [r5, #336]	; 0x150
900048f2:	2102      	movs	r1, #2
900048f4:	a802      	add	r0, sp, #8
900048f6:	4798      	blx	r3
900048f8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900048fc:	3c01      	subs	r4, #1
900048fe:	f3c3 02c4 	ubfx	r2, r3, #3, #5
90004902:	ea4f 1363 	mov.w	r3, r3, asr #5
90004906:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9000490a:	ea43 0302 	orr.w	r3, r3, r2
9000490e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90004912:	ea4f 2202 	mov.w	r2, r2, lsl #8
90004916:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
9000491a:	ea43 0302 	orr.w	r3, r3, r2
9000491e:	f826 3b02 	strh.w	r3, [r6], #2
90004922:	d1e4      	bne.n	900048ee <_ReadRect_16bpp_B16_I+0x30>
90004924:	b007      	add	sp, #28
90004926:	bdf0      	pop	{r4, r5, r6, r7, pc}

90004928 <GUIDRV_FlexColor_SetFunc66709>:
90004928:	b510      	push	{r4, lr}
9000492a:	4604      	mov	r4, r0
9000492c:	f7ff fa1e 	bl	90003d6c <GUIDRV_FlexColor__InitOnce>
90004930:	4a11      	ldr	r2, [pc, #68]	; (90004978 <GUIDRV_FlexColor_SetFunc66709+0x50>)
90004932:	2100      	movs	r1, #0
90004934:	68a3      	ldr	r3, [r4, #8]
90004936:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
9000493a:	4a10      	ldr	r2, [pc, #64]	; (9000497c <GUIDRV_FlexColor_SetFunc66709+0x54>)
9000493c:	f8c3 10bc 	str.w	r1, [r3, #188]	; 0xbc
90004940:	f8c3 20a8 	str.w	r2, [r3, #168]	; 0xa8
90004944:	4a0e      	ldr	r2, [pc, #56]	; (90004980 <GUIDRV_FlexColor_SetFunc66709+0x58>)
90004946:	f8c3 10d0 	str.w	r1, [r3, #208]	; 0xd0
9000494a:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
9000494e:	4a0d      	ldr	r2, [pc, #52]	; (90004984 <GUIDRV_FlexColor_SetFunc66709+0x5c>)
90004950:	f8c3 20b8 	str.w	r2, [r3, #184]	; 0xb8
90004954:	4a0c      	ldr	r2, [pc, #48]	; (90004988 <GUIDRV_FlexColor_SetFunc66709+0x60>)
90004956:	6810      	ldr	r0, [r2, #0]
90004958:	6852      	ldr	r2, [r2, #4]
9000495a:	f8c3 00b4 	str.w	r0, [r3, #180]	; 0xb4
9000495e:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
90004962:	8cda      	ldrh	r2, [r3, #38]	; 0x26
90004964:	4809      	ldr	r0, [pc, #36]	; (9000498c <GUIDRV_FlexColor_SetFunc66709+0x64>)
90004966:	f022 0203 	bic.w	r2, r2, #3
9000496a:	f8c3 00cc 	str.w	r0, [r3, #204]	; 0xcc
9000496e:	84da      	strh	r2, [r3, #38]	; 0x26
90004970:	4a07      	ldr	r2, [pc, #28]	; (90004990 <GUIDRV_FlexColor_SetFunc66709+0x68>)
90004972:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
90004976:	bd10      	pop	{r4, pc}
90004978:	900045f1 	.word	0x900045f1
9000497c:	90004697 	.word	0x90004697
90004980:	9000473d 	.word	0x9000473d
90004984:	9000477d 	.word	0x9000477d
90004988:	200000b8 	.word	0x200000b8
9000498c:	90004859 	.word	0x90004859
90004990:	90004825 	.word	0x90004825

90004994 <_GetDevData>:
90004994:	2901      	cmp	r1, #1
90004996:	4802      	ldr	r0, [pc, #8]	; (900049a0 <_GetDevData+0xc>)
90004998:	bf18      	it	ne
9000499a:	2000      	movne	r0, #0
9000499c:	4770      	bx	lr
9000499e:	bf00      	nop
900049a0:	9000dcf8 	.word	0x9000dcf8

900049a4 <_GetDevFunc>:
900049a4:	2916      	cmp	r1, #22
900049a6:	4802      	ldr	r0, [pc, #8]	; (900049b0 <_GetDevFunc+0xc>)
900049a8:	bf18      	it	ne
900049aa:	2000      	movne	r0, #0
900049ac:	4770      	bx	lr
900049ae:	bf00      	nop
900049b0:	900054a9 	.word	0x900054a9

900049b4 <_SetOrg>:
900049b4:	6800      	ldr	r0, [r0, #0]
900049b6:	b110      	cbz	r0, 900049be <_SetOrg+0xa>
900049b8:	68c3      	ldr	r3, [r0, #12]
900049ba:	6a1b      	ldr	r3, [r3, #32]
900049bc:	4718      	bx	r3
900049be:	4770      	bx	lr

900049c0 <_GetRect>:
900049c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900049c2:	6880      	ldr	r0, [r0, #8]
900049c4:	460d      	mov	r5, r1
900049c6:	f7fd fbf9 	bl	900021bc <GUI_ALLOC_LockH>
900049ca:	4602      	mov	r2, r0
900049cc:	a802      	add	r0, sp, #8
900049ce:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
900049d2:	8914      	ldrh	r4, [r2, #8]
900049d4:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
900049d8:	802b      	strh	r3, [r5, #0]
900049da:	441c      	add	r4, r3
900049dc:	8953      	ldrh	r3, [r2, #10]
900049de:	3c01      	subs	r4, #1
900049e0:	f840 2d04 	str.w	r2, [r0, #-4]!
900049e4:	440b      	add	r3, r1
900049e6:	8069      	strh	r1, [r5, #2]
900049e8:	80ac      	strh	r4, [r5, #4]
900049ea:	3b01      	subs	r3, #1
900049ec:	80eb      	strh	r3, [r5, #6]
900049ee:	f7fd fbf3 	bl	900021d8 <GUI_ALLOC_UnlockH>
900049f2:	b003      	add	sp, #12
900049f4:	bd30      	pop	{r4, r5, pc}
	...

900049f8 <_XY2PTR>:
900049f8:	4b0e      	ldr	r3, [pc, #56]	; (90004a34 <_XY2PTR+0x3c>)
900049fa:	681b      	ldr	r3, [r3, #0]
900049fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
900049fe:	4606      	mov	r6, r0
90004a00:	6e18      	ldr	r0, [r3, #96]	; 0x60
90004a02:	460d      	mov	r5, r1
90004a04:	f7fd fbda 	bl	900021bc <GUI_ALLOC_LockH>
90004a08:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90004a0c:	ab02      	add	r3, sp, #8
90004a0e:	68c4      	ldr	r4, [r0, #12]
90004a10:	1a69      	subs	r1, r5, r1
90004a12:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
90004a16:	f843 0d04 	str.w	r0, [r3, #-4]!
90004a1a:	1b76      	subs	r6, r6, r5
90004a1c:	0076      	lsls	r6, r6, #1
90004a1e:	3618      	adds	r6, #24
90004a20:	fb04 6501 	mla	r5, r4, r1, r6
90004a24:	1944      	adds	r4, r0, r5
90004a26:	4618      	mov	r0, r3
90004a28:	f7fd fbd6 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004a2c:	4620      	mov	r0, r4
90004a2e:	b002      	add	sp, #8
90004a30:	bd70      	pop	{r4, r5, r6, pc}
90004a32:	bf00      	nop
90004a34:	200000a4 	.word	0x200000a4

90004a38 <_GetPixelIndex>:
90004a38:	b508      	push	{r3, lr}
90004a3a:	4608      	mov	r0, r1
90004a3c:	4611      	mov	r1, r2
90004a3e:	f7ff ffdb 	bl	900049f8 <_XY2PTR>
90004a42:	8800      	ldrh	r0, [r0, #0]
90004a44:	bd08      	pop	{r3, pc}
	...

90004a48 <_XorPixel>:
90004a48:	4b14      	ldr	r3, [pc, #80]	; (90004a9c <_XorPixel+0x54>)
90004a4a:	681b      	ldr	r3, [r3, #0]
90004a4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90004a4e:	4616      	mov	r6, r2
90004a50:	460d      	mov	r5, r1
90004a52:	4607      	mov	r7, r0
90004a54:	6e18      	ldr	r0, [r3, #96]	; 0x60
90004a56:	f7fd fbb1 	bl	900021bc <GUI_ALLOC_LockH>
90004a5a:	4631      	mov	r1, r6
90004a5c:	9000      	str	r0, [sp, #0]
90004a5e:	4628      	mov	r0, r5
90004a60:	f7ff ffca 	bl	900049f8 <_XY2PTR>
90004a64:	693b      	ldr	r3, [r7, #16]
90004a66:	4604      	mov	r4, r0
90004a68:	689b      	ldr	r3, [r3, #8]
90004a6a:	4798      	blx	r3
90004a6c:	8823      	ldrh	r3, [r4, #0]
90004a6e:	4058      	eors	r0, r3
90004a70:	9b00      	ldr	r3, [sp, #0]
90004a72:	8020      	strh	r0, [r4, #0]
90004a74:	6958      	ldr	r0, [r3, #20]
90004a76:	b160      	cbz	r0, 90004a92 <_XorPixel+0x4a>
90004a78:	f7fd fba0 	bl	900021bc <GUI_ALLOC_LockH>
90004a7c:	ac02      	add	r4, sp, #8
90004a7e:	6883      	ldr	r3, [r0, #8]
90004a80:	4632      	mov	r2, r6
90004a82:	f844 0d04 	str.w	r0, [r4, #-4]!
90004a86:	4629      	mov	r1, r5
90004a88:	681b      	ldr	r3, [r3, #0]
90004a8a:	4798      	blx	r3
90004a8c:	4620      	mov	r0, r4
90004a8e:	f7fd fba3 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004a92:	4668      	mov	r0, sp
90004a94:	f7fd fba0 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004a98:	b003      	add	sp, #12
90004a9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90004a9c:	200000a4 	.word	0x200000a4

90004aa0 <_SetPixelIndex>:
90004aa0:	b573      	push	{r0, r1, r4, r5, r6, lr}
90004aa2:	461c      	mov	r4, r3
90004aa4:	4b10      	ldr	r3, [pc, #64]	; (90004ae8 <_SetPixelIndex+0x48>)
90004aa6:	460d      	mov	r5, r1
90004aa8:	4616      	mov	r6, r2
90004aaa:	681b      	ldr	r3, [r3, #0]
90004aac:	6e18      	ldr	r0, [r3, #96]	; 0x60
90004aae:	f7fd fb85 	bl	900021bc <GUI_ALLOC_LockH>
90004ab2:	4631      	mov	r1, r6
90004ab4:	9000      	str	r0, [sp, #0]
90004ab6:	4628      	mov	r0, r5
90004ab8:	f7ff ff9e 	bl	900049f8 <_XY2PTR>
90004abc:	9b00      	ldr	r3, [sp, #0]
90004abe:	8004      	strh	r4, [r0, #0]
90004ac0:	6958      	ldr	r0, [r3, #20]
90004ac2:	b160      	cbz	r0, 90004ade <_SetPixelIndex+0x3e>
90004ac4:	f7fd fb7a 	bl	900021bc <GUI_ALLOC_LockH>
90004ac8:	ac02      	add	r4, sp, #8
90004aca:	6883      	ldr	r3, [r0, #8]
90004acc:	4632      	mov	r2, r6
90004ace:	f844 0d04 	str.w	r0, [r4, #-4]!
90004ad2:	4629      	mov	r1, r5
90004ad4:	681b      	ldr	r3, [r3, #0]
90004ad6:	4798      	blx	r3
90004ad8:	4620      	mov	r0, r4
90004ada:	f7fd fb7d 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004ade:	4668      	mov	r0, sp
90004ae0:	f7fd fb7a 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004ae4:	b002      	add	sp, #8
90004ae6:	bd70      	pop	{r4, r5, r6, pc}
90004ae8:	200000a4 	.word	0x200000a4

90004aec <_DrawVLine>:
90004aec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90004af0:	4c2c      	ldr	r4, [pc, #176]	; (90004ba4 <_DrawVLine+0xb8>)
90004af2:	461e      	mov	r6, r3
90004af4:	4680      	mov	r8, r0
90004af6:	460f      	mov	r7, r1
90004af8:	6823      	ldr	r3, [r4, #0]
90004afa:	4615      	mov	r5, r2
90004afc:	46a1      	mov	r9, r4
90004afe:	6e18      	ldr	r0, [r3, #96]	; 0x60
90004b00:	f7fd fb5c 	bl	900021bc <GUI_ALLOC_LockH>
90004b04:	9000      	str	r0, [sp, #0]
90004b06:	6940      	ldr	r0, [r0, #20]
90004b08:	b108      	cbz	r0, 90004b0e <_DrawVLine+0x22>
90004b0a:	f7fd fb57 	bl	900021bc <GUI_ALLOC_LockH>
90004b0e:	9001      	str	r0, [sp, #4]
90004b10:	4629      	mov	r1, r5
90004b12:	4638      	mov	r0, r7
90004b14:	f7ff ff70 	bl	900049f8 <_XY2PTR>
90004b18:	f8d9 3000 	ldr.w	r3, [r9]
90004b1c:	4604      	mov	r4, r0
90004b1e:	7c1a      	ldrb	r2, [r3, #16]
90004b20:	07d2      	lsls	r2, r2, #31
90004b22:	d51f      	bpl.n	90004b64 <_DrawVLine+0x78>
90004b24:	f8d8 3010 	ldr.w	r3, [r8, #16]
90004b28:	689b      	ldr	r3, [r3, #8]
90004b2a:	4798      	blx	r3
90004b2c:	fa1f f880 	uxth.w	r8, r0
90004b30:	9801      	ldr	r0, [sp, #4]
90004b32:	b120      	cbz	r0, 90004b3e <_DrawVLine+0x52>
90004b34:	6883      	ldr	r3, [r0, #8]
90004b36:	462a      	mov	r2, r5
90004b38:	4639      	mov	r1, r7
90004b3a:	681b      	ldr	r3, [r3, #0]
90004b3c:	4798      	blx	r3
90004b3e:	8823      	ldrh	r3, [r4, #0]
90004b40:	3501      	adds	r5, #1
90004b42:	ea88 0303 	eor.w	r3, r8, r3
90004b46:	42b5      	cmp	r5, r6
90004b48:	8023      	strh	r3, [r4, #0]
90004b4a:	9b00      	ldr	r3, [sp, #0]
90004b4c:	68db      	ldr	r3, [r3, #12]
90004b4e:	441c      	add	r4, r3
90004b50:	ddee      	ble.n	90004b30 <_DrawVLine+0x44>
90004b52:	4668      	mov	r0, sp
90004b54:	f7fd fb40 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004b58:	9b01      	ldr	r3, [sp, #4]
90004b5a:	b303      	cbz	r3, 90004b9e <_DrawVLine+0xb2>
90004b5c:	a801      	add	r0, sp, #4
90004b5e:	f7fd fb3b 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004b62:	e01c      	b.n	90004b9e <_DrawVLine+0xb2>
90004b64:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90004b66:	9a00      	ldr	r2, [sp, #0]
90004b68:	f8d3 9000 	ldr.w	r9, [r3]
90004b6c:	9b01      	ldr	r3, [sp, #4]
90004b6e:	f8d2 800c 	ldr.w	r8, [r2, #12]
90004b72:	b163      	cbz	r3, 90004b8e <_DrawVLine+0xa2>
90004b74:	9801      	ldr	r0, [sp, #4]
90004b76:	462a      	mov	r2, r5
90004b78:	3501      	adds	r5, #1
90004b7a:	4639      	mov	r1, r7
90004b7c:	6883      	ldr	r3, [r0, #8]
90004b7e:	681b      	ldr	r3, [r3, #0]
90004b80:	4798      	blx	r3
90004b82:	42ae      	cmp	r6, r5
90004b84:	f8a4 9000 	strh.w	r9, [r4]
90004b88:	4444      	add	r4, r8
90004b8a:	daf3      	bge.n	90004b74 <_DrawVLine+0x88>
90004b8c:	e7e1      	b.n	90004b52 <_DrawVLine+0x66>
90004b8e:	1b75      	subs	r5, r6, r5
90004b90:	3501      	adds	r5, #1
90004b92:	3d01      	subs	r5, #1
90004b94:	f8a4 9000 	strh.w	r9, [r4]
90004b98:	4444      	add	r4, r8
90004b9a:	d1fa      	bne.n	90004b92 <_DrawVLine+0xa6>
90004b9c:	e7d9      	b.n	90004b52 <_DrawVLine+0x66>
90004b9e:	b003      	add	sp, #12
90004ba0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90004ba4:	200000a4 	.word	0x200000a4

90004ba8 <_FillRect>:
90004ba8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004bac:	4f2a      	ldr	r7, [pc, #168]	; (90004c58 <_FillRect+0xb0>)
90004bae:	461d      	mov	r5, r3
90004bb0:	4614      	mov	r4, r2
90004bb2:	b087      	sub	sp, #28
90004bb4:	683b      	ldr	r3, [r7, #0]
90004bb6:	4689      	mov	r9, r1
90004bb8:	4683      	mov	fp, r0
90004bba:	6bda      	ldr	r2, [r3, #60]	; 0x3c
90004bbc:	ebc9 0505 	rsb	r5, r9, r5
90004bc0:	6e18      	ldr	r0, [r3, #96]	; 0x60
90004bc2:	6812      	ldr	r2, [r2, #0]
90004bc4:	f105 0a01 	add.w	sl, r5, #1
90004bc8:	9202      	str	r2, [sp, #8]
90004bca:	f7fd faf7 	bl	900021bc <GUI_ALLOC_LockH>
90004bce:	4621      	mov	r1, r4
90004bd0:	9004      	str	r0, [sp, #16]
90004bd2:	4648      	mov	r0, r9
90004bd4:	f7ff ff10 	bl	900049f8 <_XY2PTR>
90004bd8:	9a04      	ldr	r2, [sp, #16]
90004bda:	4606      	mov	r6, r0
90004bdc:	68d3      	ldr	r3, [r2, #12]
90004bde:	6950      	ldr	r0, [r2, #20]
90004be0:	9303      	str	r3, [sp, #12]
90004be2:	b188      	cbz	r0, 90004c08 <_FillRect+0x60>
90004be4:	f7fd faea 	bl	900021bc <GUI_ALLOC_LockH>
90004be8:	9b10      	ldr	r3, [sp, #64]	; 0x40
90004bea:	f10d 0818 	add.w	r8, sp, #24
90004bee:	4622      	mov	r2, r4
90004bf0:	1b1b      	subs	r3, r3, r4
90004bf2:	4649      	mov	r1, r9
90004bf4:	f848 0d04 	str.w	r0, [r8, #-4]!
90004bf8:	3301      	adds	r3, #1
90004bfa:	9300      	str	r3, [sp, #0]
90004bfc:	4653      	mov	r3, sl
90004bfe:	f000 fbff 	bl	90005400 <GUI_USAGE_AddRect>
90004c02:	4640      	mov	r0, r8
90004c04:	f7fd fae8 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004c08:	006d      	lsls	r5, r5, #1
90004c0a:	f8bd 8008 	ldrh.w	r8, [sp, #8]
90004c0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90004c10:	429c      	cmp	r4, r3
90004c12:	dc1a      	bgt.n	90004c4a <_FillRect+0xa2>
90004c14:	683b      	ldr	r3, [r7, #0]
90004c16:	7c1b      	ldrb	r3, [r3, #16]
90004c18:	07db      	lsls	r3, r3, #31
90004c1a:	d50d      	bpl.n	90004c38 <_FillRect+0x90>
90004c1c:	f8db 3010 	ldr.w	r3, [fp, #16]
90004c20:	689b      	ldr	r3, [r3, #8]
90004c22:	4798      	blx	r3
90004c24:	1eb3      	subs	r3, r6, #2
90004c26:	b280      	uxth	r0, r0
90004c28:	1971      	adds	r1, r6, r5
90004c2a:	f833 2f02 	ldrh.w	r2, [r3, #2]!
90004c2e:	4042      	eors	r2, r0
90004c30:	428b      	cmp	r3, r1
90004c32:	801a      	strh	r2, [r3, #0]
90004c34:	d1f9      	bne.n	90004c2a <_FillRect+0x82>
90004c36:	e004      	b.n	90004c42 <_FillRect+0x9a>
90004c38:	4652      	mov	r2, sl
90004c3a:	4641      	mov	r1, r8
90004c3c:	4630      	mov	r0, r6
90004c3e:	f7fe f8cb 	bl	90002dd8 <GUI__memset16>
90004c42:	9b03      	ldr	r3, [sp, #12]
90004c44:	3401      	adds	r4, #1
90004c46:	441e      	add	r6, r3
90004c48:	e7e1      	b.n	90004c0e <_FillRect+0x66>
90004c4a:	a804      	add	r0, sp, #16
90004c4c:	f7fd fac4 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004c50:	b007      	add	sp, #28
90004c52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004c56:	bf00      	nop
90004c58:	200000a4 	.word	0x200000a4

90004c5c <_DrawHLine>:
90004c5c:	b507      	push	{r0, r1, r2, lr}
90004c5e:	9200      	str	r2, [sp, #0]
90004c60:	f7ff ffa2 	bl	90004ba8 <_FillRect>
90004c64:	b003      	add	sp, #12
90004c66:	f85d fb04 	ldr.w	pc, [sp], #4
	...

90004c6c <_DrawBitmap>:
90004c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004c70:	4d99      	ldr	r5, [pc, #612]	; (90004ed8 <_DrawBitmap+0x26c>)
90004c72:	b091      	sub	sp, #68	; 0x44
90004c74:	460e      	mov	r6, r1
90004c76:	9302      	str	r3, [sp, #8]
90004c78:	682b      	ldr	r3, [r5, #0]
90004c7a:	900a      	str	r0, [sp, #40]	; 0x28
90004c7c:	6e18      	ldr	r0, [r3, #96]	; 0x60
90004c7e:	9205      	str	r2, [sp, #20]
90004c80:	9c1d      	ldr	r4, [sp, #116]	; 0x74
90004c82:	f7fd fa9b 	bl	900021bc <GUI_ALLOC_LockH>
90004c86:	900e      	str	r0, [sp, #56]	; 0x38
90004c88:	6940      	ldr	r0, [r0, #20]
90004c8a:	b108      	cbz	r0, 90004c90 <_DrawBitmap+0x24>
90004c8c:	f7fd fa96 	bl	900021bc <GUI_ALLOC_LockH>
90004c90:	900f      	str	r0, [sp, #60]	; 0x3c
90004c92:	a810      	add	r0, sp, #64	; 0x40
90004c94:	f850 3d08 	ldr.w	r3, [r0, #-8]!
90004c98:	68db      	ldr	r3, [r3, #12]
90004c9a:	9306      	str	r3, [sp, #24]
90004c9c:	f7fd fa9c 	bl	900021d8 <GUI_ALLOC_UnlockH>
90004ca0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90004ca2:	980f      	ldr	r0, [sp, #60]	; 0x3c
90004ca4:	eb06 0b03 	add.w	fp, r6, r3
90004ca8:	b150      	cbz	r0, 90004cc0 <_DrawBitmap+0x54>
90004caa:	682b      	ldr	r3, [r5, #0]
90004cac:	7c1b      	ldrb	r3, [r3, #16]
90004cae:	0799      	lsls	r1, r3, #30
90004cb0:	d106      	bne.n	90004cc0 <_DrawBitmap+0x54>
90004cb2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90004cb4:	4659      	mov	r1, fp
90004cb6:	9a05      	ldr	r2, [sp, #20]
90004cb8:	9300      	str	r3, [sp, #0]
90004cba:	9b02      	ldr	r3, [sp, #8]
90004cbc:	f000 fba0 	bl	90005400 <GUI_USAGE_AddRect>
90004cc0:	9905      	ldr	r1, [sp, #20]
90004cc2:	4658      	mov	r0, fp
90004cc4:	f7ff fe98 	bl	900049f8 <_XY2PTR>
90004cc8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90004cca:	4605      	mov	r5, r0
90004ccc:	2b10      	cmp	r3, #16
90004cce:	d134      	bne.n	90004d3a <_DrawBitmap+0xce>
90004cd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90004cd2:	b133      	cbz	r3, 90004ce2 <_DrawBitmap+0x76>
90004cd4:	9b02      	ldr	r3, [sp, #8]
90004cd6:	2600      	movs	r6, #0
90004cd8:	f8df 9204 	ldr.w	r9, [pc, #516]	; 90004ee0 <_DrawBitmap+0x274>
90004cdc:	ea4f 0843 	mov.w	r8, r3, lsl #1
90004ce0:	e012      	b.n	90004d08 <_DrawBitmap+0x9c>
90004ce2:	4b7e      	ldr	r3, [pc, #504]	; (90004edc <_DrawBitmap+0x270>)
90004ce4:	681e      	ldr	r6, [r3, #0]
90004ce6:	2e00      	cmp	r6, #0
90004ce8:	d0f4      	beq.n	90004cd4 <_DrawBitmap+0x68>
90004cea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90004cec:	4621      	mov	r1, r4
90004cee:	9a02      	ldr	r2, [sp, #8]
90004cf0:	9301      	str	r3, [sp, #4]
90004cf2:	9b06      	ldr	r3, [sp, #24]
90004cf4:	9300      	str	r3, [sp, #0]
90004cf6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90004cf8:	47b0      	blx	r6
90004cfa:	e35b      	b.n	900053b4 <_DrawBitmap+0x748>
90004cfc:	b944      	cbnz	r4, 90004d10 <_DrawBitmap+0xa4>
90004cfe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90004d00:	3601      	adds	r6, #1
90004d02:	441c      	add	r4, r3
90004d04:	9b06      	ldr	r3, [sp, #24]
90004d06:	441d      	add	r5, r3
90004d08:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90004d0a:	429e      	cmp	r6, r3
90004d0c:	dbf6      	blt.n	90004cfc <_DrawBitmap+0x90>
90004d0e:	e34c      	b.n	900053aa <_DrawBitmap+0x73e>
90004d10:	2d00      	cmp	r5, #0
90004d12:	d0f4      	beq.n	90004cfe <_DrawBitmap+0x92>
90004d14:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90004d16:	4642      	mov	r2, r8
90004d18:	4621      	mov	r1, r4
90004d1a:	4628      	mov	r0, r5
90004d1c:	f8d9 3000 	ldr.w	r3, [r9]
90004d20:	4798      	blx	r3
90004d22:	2f00      	cmp	r7, #0
90004d24:	d0eb      	beq.n	90004cfe <_DrawBitmap+0x92>
90004d26:	68bb      	ldr	r3, [r7, #8]
90004d28:	4659      	mov	r1, fp
90004d2a:	9a05      	ldr	r2, [sp, #20]
90004d2c:	4638      	mov	r0, r7
90004d2e:	f8d3 a004 	ldr.w	sl, [r3, #4]
90004d32:	4432      	add	r2, r6
90004d34:	9b02      	ldr	r3, [sp, #8]
90004d36:	47d0      	blx	sl
90004d38:	e7e1      	b.n	90004cfe <_DrawBitmap+0x92>
90004d3a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90004d3c:	2b17      	cmp	r3, #23
90004d3e:	dd44      	ble.n	90004dca <_DrawBitmap+0x15e>
90004d40:	f06f 0303 	mvn.w	r3, #3
90004d44:	f04f 0800 	mov.w	r8, #0
90004d48:	fb03 f30b 	mul.w	r3, r3, fp
90004d4c:	9307      	str	r3, [sp, #28]
90004d4e:	f06f 0301 	mvn.w	r3, #1
90004d52:	fb03 f30b 	mul.w	r3, r3, fp
90004d56:	9304      	str	r3, [sp, #16]
90004d58:	9b02      	ldr	r3, [sp, #8]
90004d5a:	445b      	add	r3, fp
90004d5c:	9308      	str	r3, [sp, #32]
90004d5e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90004d60:	4598      	cmp	r8, r3
90004d62:	f280 8322 	bge.w	900053aa <_DrawBitmap+0x73e>
90004d66:	9b05      	ldr	r3, [sp, #20]
90004d68:	eb03 0908 	add.w	r9, r3, r8
90004d6c:	b934      	cbnz	r4, 90004d7c <_DrawBitmap+0x110>
90004d6e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90004d70:	f108 0801 	add.w	r8, r8, #1
90004d74:	441c      	add	r4, r3
90004d76:	9b06      	ldr	r3, [sp, #24]
90004d78:	441d      	add	r5, r3
90004d7a:	e7f0      	b.n	90004d5e <_DrawBitmap+0xf2>
90004d7c:	2d00      	cmp	r5, #0
90004d7e:	d0f6      	beq.n	90004d6e <_DrawBitmap+0x102>
90004d80:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90004d82:	b137      	cbz	r7, 90004d92 <_DrawBitmap+0x126>
90004d84:	68bb      	ldr	r3, [r7, #8]
90004d86:	464a      	mov	r2, r9
90004d88:	4659      	mov	r1, fp
90004d8a:	4638      	mov	r0, r7
90004d8c:	685e      	ldr	r6, [r3, #4]
90004d8e:	9b02      	ldr	r3, [sp, #8]
90004d90:	47b0      	blx	r6
90004d92:	9b07      	ldr	r3, [sp, #28]
90004d94:	465e      	mov	r6, fp
90004d96:	eb04 0a03 	add.w	sl, r4, r3
90004d9a:	9b04      	ldr	r3, [sp, #16]
90004d9c:	18eb      	adds	r3, r5, r3
90004d9e:	9303      	str	r3, [sp, #12]
90004da0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90004da2:	f85a 0026 	ldr.w	r0, [sl, r6, lsl #2]
90004da6:	691b      	ldr	r3, [r3, #16]
90004da8:	681b      	ldr	r3, [r3, #0]
90004daa:	4798      	blx	r3
90004dac:	9b03      	ldr	r3, [sp, #12]
90004dae:	f823 0016 	strh.w	r0, [r3, r6, lsl #1]
90004db2:	b12f      	cbz	r7, 90004dc0 <_DrawBitmap+0x154>
90004db4:	68bb      	ldr	r3, [r7, #8]
90004db6:	464a      	mov	r2, r9
90004db8:	4631      	mov	r1, r6
90004dba:	4638      	mov	r0, r7
90004dbc:	681b      	ldr	r3, [r3, #0]
90004dbe:	4798      	blx	r3
90004dc0:	3601      	adds	r6, #1
90004dc2:	9b08      	ldr	r3, [sp, #32]
90004dc4:	429e      	cmp	r6, r3
90004dc6:	d1eb      	bne.n	90004da0 <_DrawBitmap+0x134>
90004dc8:	e7d1      	b.n	90004d6e <_DrawBitmap+0x102>
90004dca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90004dcc:	2b08      	cmp	r3, #8
90004dce:	f040 8089 	bne.w	90004ee4 <_DrawBitmap+0x278>
90004dd2:	9b02      	ldr	r3, [sp, #8]
90004dd4:	3c01      	subs	r4, #1
90004dd6:	9e05      	ldr	r6, [sp, #20]
90004dd8:	005b      	lsls	r3, r3, #1
90004dda:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 90004ed8 <_DrawBitmap+0x26c>
90004dde:	9307      	str	r3, [sp, #28]
90004de0:	f06f 0301 	mvn.w	r3, #1
90004de4:	fb03 f30b 	mul.w	r3, r3, fp
90004de8:	9303      	str	r3, [sp, #12]
90004dea:	9b02      	ldr	r3, [sp, #8]
90004dec:	445b      	add	r3, fp
90004dee:	9304      	str	r3, [sp, #16]
90004df0:	9b05      	ldr	r3, [sp, #20]
90004df2:	1c61      	adds	r1, r4, #1
90004df4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
90004df6:	1af3      	subs	r3, r6, r3
90004df8:	429a      	cmp	r2, r3
90004dfa:	f340 82d6 	ble.w	900053aa <_DrawBitmap+0x73e>
90004dfe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90004e00:	2b00      	cmp	r3, #0
90004e02:	d036      	beq.n	90004e72 <_DrawBitmap+0x206>
90004e04:	f8d9 3000 	ldr.w	r3, [r9]
90004e08:	7c1b      	ldrb	r3, [r3, #16]
90004e0a:	f013 0303 	ands.w	r3, r3, #3
90004e0e:	d009      	beq.n	90004e24 <_DrawBitmap+0x1b8>
90004e10:	2b02      	cmp	r3, #2
90004e12:	d15a      	bne.n	90004eca <_DrawBitmap+0x25e>
90004e14:	9b03      	ldr	r3, [sp, #12]
90004e16:	46a2      	mov	sl, r4
90004e18:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
90004e1c:	465f      	mov	r7, fp
90004e1e:	18eb      	adds	r3, r5, r3
90004e20:	9308      	str	r3, [sp, #32]
90004e22:	e021      	b.n	90004e68 <_DrawBitmap+0x1fc>
90004e24:	9b07      	ldr	r3, [sp, #28]
90004e26:	4622      	mov	r2, r4
90004e28:	18e9      	adds	r1, r5, r3
90004e2a:	462b      	mov	r3, r5
90004e2c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90004e30:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
90004e32:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
90004e36:	f823 0b02 	strh.w	r0, [r3], #2
90004e3a:	428b      	cmp	r3, r1
90004e3c:	d1f6      	bne.n	90004e2c <_DrawBitmap+0x1c0>
90004e3e:	e044      	b.n	90004eca <_DrawBitmap+0x25e>
90004e40:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90004e42:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
90004e46:	9a08      	ldr	r2, [sp, #32]
90004e48:	f822 3017 	strh.w	r3, [r2, r7, lsl #1]
90004e4c:	f1b8 0f00 	cmp.w	r8, #0
90004e50:	d006      	beq.n	90004e60 <_DrawBitmap+0x1f4>
90004e52:	f8d8 3008 	ldr.w	r3, [r8, #8]
90004e56:	4632      	mov	r2, r6
90004e58:	4639      	mov	r1, r7
90004e5a:	4640      	mov	r0, r8
90004e5c:	681b      	ldr	r3, [r3, #0]
90004e5e:	4798      	blx	r3
90004e60:	3701      	adds	r7, #1
90004e62:	9b04      	ldr	r3, [sp, #16]
90004e64:	42bb      	cmp	r3, r7
90004e66:	d030      	beq.n	90004eca <_DrawBitmap+0x25e>
90004e68:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
90004e6c:	2b00      	cmp	r3, #0
90004e6e:	d0f7      	beq.n	90004e60 <_DrawBitmap+0x1f4>
90004e70:	e7e6      	b.n	90004e40 <_DrawBitmap+0x1d4>
90004e72:	f8d9 3000 	ldr.w	r3, [r9]
90004e76:	7c1b      	ldrb	r3, [r3, #16]
90004e78:	f013 0303 	ands.w	r3, r3, #3
90004e7c:	d009      	beq.n	90004e92 <_DrawBitmap+0x226>
90004e7e:	2b02      	cmp	r3, #2
90004e80:	d123      	bne.n	90004eca <_DrawBitmap+0x25e>
90004e82:	9b03      	ldr	r3, [sp, #12]
90004e84:	46a2      	mov	sl, r4
90004e86:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
90004e8a:	465f      	mov	r7, fp
90004e8c:	18eb      	adds	r3, r5, r3
90004e8e:	9308      	str	r3, [sp, #32]
90004e90:	e016      	b.n	90004ec0 <_DrawBitmap+0x254>
90004e92:	4b13      	ldr	r3, [pc, #76]	; (90004ee0 <_DrawBitmap+0x274>)
90004e94:	4628      	mov	r0, r5
90004e96:	9a02      	ldr	r2, [sp, #8]
90004e98:	681b      	ldr	r3, [r3, #0]
90004e9a:	4798      	blx	r3
90004e9c:	e015      	b.n	90004eca <_DrawBitmap+0x25e>
90004e9e:	9a08      	ldr	r2, [sp, #32]
90004ea0:	f822 3017 	strh.w	r3, [r2, r7, lsl #1]
90004ea4:	f1b8 0f00 	cmp.w	r8, #0
90004ea8:	d006      	beq.n	90004eb8 <_DrawBitmap+0x24c>
90004eaa:	f8d8 3008 	ldr.w	r3, [r8, #8]
90004eae:	4632      	mov	r2, r6
90004eb0:	4639      	mov	r1, r7
90004eb2:	4640      	mov	r0, r8
90004eb4:	681b      	ldr	r3, [r3, #0]
90004eb6:	4798      	blx	r3
90004eb8:	3701      	adds	r7, #1
90004eba:	9b04      	ldr	r3, [sp, #16]
90004ebc:	429f      	cmp	r7, r3
90004ebe:	d004      	beq.n	90004eca <_DrawBitmap+0x25e>
90004ec0:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
90004ec4:	2b00      	cmp	r3, #0
90004ec6:	d0f7      	beq.n	90004eb8 <_DrawBitmap+0x24c>
90004ec8:	e7e9      	b.n	90004e9e <_DrawBitmap+0x232>
90004eca:	9b06      	ldr	r3, [sp, #24]
90004ecc:	3601      	adds	r6, #1
90004ece:	441d      	add	r5, r3
90004ed0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90004ed2:	441c      	add	r4, r3
90004ed4:	e78c      	b.n	90004df0 <_DrawBitmap+0x184>
90004ed6:	bf00      	nop
90004ed8:	200000a4 	.word	0x200000a4
90004edc:	20025aa4 	.word	0x20025aa4
90004ee0:	200000a8 	.word	0x200000a8
90004ee4:	4baf      	ldr	r3, [pc, #700]	; (900051a4 <_DrawBitmap+0x538>)
90004ee6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90004ee8:	2a00      	cmp	r2, #0
90004eea:	bf08      	it	eq
90004eec:	461a      	moveq	r2, r3
90004eee:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90004ef0:	005b      	lsls	r3, r3, #1
90004ef2:	921f      	str	r2, [sp, #124]	; 0x7c
90004ef4:	930b      	str	r3, [sp, #44]	; 0x2c
90004ef6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90004ef8:	009b      	lsls	r3, r3, #2
90004efa:	930c      	str	r3, [sp, #48]	; 0x30
90004efc:	1c63      	adds	r3, r4, #1
90004efe:	9303      	str	r3, [sp, #12]
90004f00:	1c83      	adds	r3, r0, #2
90004f02:	9307      	str	r3, [sp, #28]
90004f04:	9b05      	ldr	r3, [sp, #20]
90004f06:	9304      	str	r3, [sp, #16]
90004f08:	9b07      	ldr	r3, [sp, #28]
90004f0a:	9a05      	ldr	r2, [sp, #20]
90004f0c:	1e9c      	subs	r4, r3, #2
90004f0e:	9b03      	ldr	r3, [sp, #12]
90004f10:	f103 3aff 	add.w	sl, r3, #4294967295	; 0xffffffff
90004f14:	9b04      	ldr	r3, [sp, #16]
90004f16:	1a9b      	subs	r3, r3, r2
90004f18:	9a1a      	ldr	r2, [sp, #104]	; 0x68
90004f1a:	429a      	cmp	r2, r3
90004f1c:	f340 8245 	ble.w	900053aa <_DrawBitmap+0x73e>
90004f20:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90004f22:	2b02      	cmp	r3, #2
90004f24:	f000 80c7 	beq.w	900050b6 <_DrawBitmap+0x44a>
90004f28:	2b04      	cmp	r3, #4
90004f2a:	f000 8167 	beq.w	900051fc <_DrawBitmap+0x590>
90004f2e:	2b01      	cmp	r3, #1
90004f30:	f040 822f 	bne.w	90005392 <_DrawBitmap+0x726>
90004f34:	4b9c      	ldr	r3, [pc, #624]	; (900051a8 <_DrawBitmap+0x53c>)
90004f36:	681b      	ldr	r3, [r3, #0]
90004f38:	6e18      	ldr	r0, [r3, #96]	; 0x60
90004f3a:	f7fd f93f 	bl	900021bc <GUI_ALLOC_LockH>
90004f3e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90004f40:	4a9a      	ldr	r2, [pc, #616]	; (900051ac <_DrawBitmap+0x540>)
90004f42:	f1c3 0508 	rsb	r5, r3, #8
90004f46:	9b03      	ldr	r3, [sp, #12]
90004f48:	900e      	str	r0, [sp, #56]	; 0x38
90004f4a:	f813 3c01 	ldrb.w	r3, [r3, #-1]
90004f4e:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
90004f52:	5cd6      	ldrb	r6, [r2, r3]
90004f54:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90004f56:	9f02      	ldr	r7, [sp, #8]
90004f58:	411e      	asrs	r6, r3
90004f5a:	4b93      	ldr	r3, [pc, #588]	; (900051a8 <_DrawBitmap+0x53c>)
90004f5c:	681b      	ldr	r3, [r3, #0]
90004f5e:	7c1b      	ldrb	r3, [r3, #16]
90004f60:	f003 0303 	and.w	r3, r3, #3
90004f64:	2b02      	cmp	r3, #2
90004f66:	d01f      	beq.n	90004fa8 <_DrawBitmap+0x33c>
90004f68:	2b03      	cmp	r3, #3
90004f6a:	d058      	beq.n	9000501e <_DrawBitmap+0x3b2>
90004f6c:	2b01      	cmp	r3, #1
90004f6e:	d056      	beq.n	9000501e <_DrawBitmap+0x3b2>
90004f70:	42bd      	cmp	r5, r7
90004f72:	4622      	mov	r2, r4
90004f74:	bf28      	it	cs
90004f76:	463d      	movcs	r5, r7
90004f78:	1b7f      	subs	r7, r7, r5
90004f7a:	462b      	mov	r3, r5
90004f7c:	f006 0101 	and.w	r1, r6, #1
90004f80:	981f      	ldr	r0, [sp, #124]	; 0x7c
90004f82:	3b01      	subs	r3, #1
90004f84:	ea4f 0656 	mov.w	r6, r6, lsr #1
90004f88:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
90004f8c:	f822 1b02 	strh.w	r1, [r2], #2
90004f90:	d1f4      	bne.n	90004f7c <_DrawBitmap+0x310>
90004f92:	eb04 0445 	add.w	r4, r4, r5, lsl #1
90004f96:	2f00      	cmp	r7, #0
90004f98:	f000 8089 	beq.w	900050ae <_DrawBitmap+0x442>
90004f9c:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
90004fa0:	2508      	movs	r5, #8
90004fa2:	4a82      	ldr	r2, [pc, #520]	; (900051ac <_DrawBitmap+0x540>)
90004fa4:	5cd6      	ldrb	r6, [r2, r3]
90004fa6:	e7e3      	b.n	90004f70 <_DrawBitmap+0x304>
90004fa8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90004faa:	46d8      	mov	r8, fp
90004fac:	889b      	ldrh	r3, [r3, #4]
90004fae:	9308      	str	r3, [sp, #32]
90004fb0:	42bd      	cmp	r5, r7
90004fb2:	bf28      	it	cs
90004fb4:	463d      	movcs	r5, r7
90004fb6:	1b7f      	subs	r7, r7, r5
90004fb8:	f1b9 0f00 	cmp.w	r9, #0
90004fbc:	d023      	beq.n	90005006 <_DrawBitmap+0x39a>
90004fbe:	b91e      	cbnz	r6, 90004fc8 <_DrawBitmap+0x35c>
90004fc0:	eb04 0445 	add.w	r4, r4, r5, lsl #1
90004fc4:	44a8      	add	r8, r5
90004fc6:	e022      	b.n	9000500e <_DrawBitmap+0x3a2>
90004fc8:	07f2      	lsls	r2, r6, #31
90004fca:	d509      	bpl.n	90004fe0 <_DrawBitmap+0x374>
90004fcc:	f8d9 3008 	ldr.w	r3, [r9, #8]
90004fd0:	4641      	mov	r1, r8
90004fd2:	9a04      	ldr	r2, [sp, #16]
90004fd4:	4648      	mov	r0, r9
90004fd6:	681b      	ldr	r3, [r3, #0]
90004fd8:	4798      	blx	r3
90004fda:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90004fde:	8023      	strh	r3, [r4, #0]
90004fe0:	3d01      	subs	r5, #1
90004fe2:	f108 0801 	add.w	r8, r8, #1
90004fe6:	f104 0402 	add.w	r4, r4, #2
90004fea:	d010      	beq.n	9000500e <_DrawBitmap+0x3a2>
90004fec:	0876      	lsrs	r6, r6, #1
90004fee:	e7e6      	b.n	90004fbe <_DrawBitmap+0x352>
90004ff0:	07f3      	lsls	r3, r6, #31
90004ff2:	f104 0402 	add.w	r4, r4, #2
90004ff6:	bf44      	itt	mi
90004ff8:	f8bd 3020 	ldrhmi.w	r3, [sp, #32]
90004ffc:	f824 3c02 	strhmi.w	r3, [r4, #-2]
90005000:	3d01      	subs	r5, #1
90005002:	d004      	beq.n	9000500e <_DrawBitmap+0x3a2>
90005004:	0876      	lsrs	r6, r6, #1
90005006:	2e00      	cmp	r6, #0
90005008:	d1f2      	bne.n	90004ff0 <_DrawBitmap+0x384>
9000500a:	eb04 0445 	add.w	r4, r4, r5, lsl #1
9000500e:	2f00      	cmp	r7, #0
90005010:	d04d      	beq.n	900050ae <_DrawBitmap+0x442>
90005012:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
90005016:	2508      	movs	r5, #8
90005018:	4a64      	ldr	r2, [pc, #400]	; (900051ac <_DrawBitmap+0x540>)
9000501a:	5cd6      	ldrb	r6, [r2, r3]
9000501c:	e7c8      	b.n	90004fb0 <_DrawBitmap+0x344>
9000501e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90005020:	46d8      	mov	r8, fp
90005022:	691b      	ldr	r3, [r3, #16]
90005024:	689b      	ldr	r3, [r3, #8]
90005026:	4798      	blx	r3
90005028:	b283      	uxth	r3, r0
9000502a:	9309      	str	r3, [sp, #36]	; 0x24
9000502c:	9b03      	ldr	r3, [sp, #12]
9000502e:	9308      	str	r3, [sp, #32]
90005030:	42bd      	cmp	r5, r7
90005032:	bf28      	it	cs
90005034:	463d      	movcs	r5, r7
90005036:	1b7f      	subs	r7, r7, r5
90005038:	f1b9 0f00 	cmp.w	r9, #0
9000503c:	d01b      	beq.n	90005076 <_DrawBitmap+0x40a>
9000503e:	eb08 0305 	add.w	r3, r8, r5
90005042:	46a2      	mov	sl, r4
90005044:	930d      	str	r3, [sp, #52]	; 0x34
90005046:	07f0      	lsls	r0, r6, #31
90005048:	d50c      	bpl.n	90005064 <_DrawBitmap+0x3f8>
9000504a:	f8d9 3008 	ldr.w	r3, [r9, #8]
9000504e:	4641      	mov	r1, r8
90005050:	9a04      	ldr	r2, [sp, #16]
90005052:	4648      	mov	r0, r9
90005054:	681b      	ldr	r3, [r3, #0]
90005056:	4798      	blx	r3
90005058:	f8ba 3000 	ldrh.w	r3, [sl]
9000505c:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000505e:	4053      	eors	r3, r2
90005060:	f8aa 3000 	strh.w	r3, [sl]
90005064:	f108 0801 	add.w	r8, r8, #1
90005068:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000506a:	f10a 0a02 	add.w	sl, sl, #2
9000506e:	0876      	lsrs	r6, r6, #1
90005070:	4598      	cmp	r8, r3
90005072:	d1e8      	bne.n	90005046 <_DrawBitmap+0x3da>
90005074:	e00f      	b.n	90005096 <_DrawBitmap+0x42a>
90005076:	462a      	mov	r2, r5
90005078:	4623      	mov	r3, r4
9000507a:	07f1      	lsls	r1, r6, #31
9000507c:	f103 0302 	add.w	r3, r3, #2
90005080:	ea4f 0656 	mov.w	r6, r6, lsr #1
90005084:	bf41      	itttt	mi
90005086:	f833 1c02 	ldrhmi.w	r1, [r3, #-2]
9000508a:	9809      	ldrmi	r0, [sp, #36]	; 0x24
9000508c:	4041      	eormi	r1, r0
9000508e:	f823 1c02 	strhmi.w	r1, [r3, #-2]
90005092:	3a01      	subs	r2, #1
90005094:	d1f1      	bne.n	9000507a <_DrawBitmap+0x40e>
90005096:	eb04 0445 	add.w	r4, r4, r5, lsl #1
9000509a:	b147      	cbz	r7, 900050ae <_DrawBitmap+0x442>
9000509c:	9b08      	ldr	r3, [sp, #32]
9000509e:	2508      	movs	r5, #8
900050a0:	4a42      	ldr	r2, [pc, #264]	; (900051ac <_DrawBitmap+0x540>)
900050a2:	781b      	ldrb	r3, [r3, #0]
900050a4:	5cd6      	ldrb	r6, [r2, r3]
900050a6:	9b08      	ldr	r3, [sp, #32]
900050a8:	3301      	adds	r3, #1
900050aa:	9308      	str	r3, [sp, #32]
900050ac:	e7c0      	b.n	90005030 <_DrawBitmap+0x3c4>
900050ae:	a80e      	add	r0, sp, #56	; 0x38
900050b0:	f7fd f892 	bl	900021d8 <GUI_ALLOC_UnlockH>
900050b4:	e16d      	b.n	90005392 <_DrawBitmap+0x726>
900050b6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900050b8:	f1c3 0504 	rsb	r5, r3, #4
900050bc:	9b03      	ldr	r3, [sp, #12]
900050be:	f813 6c01 	ldrb.w	r6, [r3, #-1]
900050c2:	b2ed      	uxtb	r5, r5
900050c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900050c6:	409e      	lsls	r6, r3
900050c8:	4b37      	ldr	r3, [pc, #220]	; (900051a8 <_DrawBitmap+0x53c>)
900050ca:	681b      	ldr	r3, [r3, #0]
900050cc:	b2f6      	uxtb	r6, r6
900050ce:	7c1b      	ldrb	r3, [r3, #16]
900050d0:	f003 0303 	and.w	r3, r3, #3
900050d4:	2b01      	cmp	r3, #1
900050d6:	d009      	beq.n	900050ec <_DrawBitmap+0x480>
900050d8:	d30a      	bcc.n	900050f0 <_DrawBitmap+0x484>
900050da:	2b02      	cmp	r3, #2
900050dc:	f040 8159 	bne.w	90005392 <_DrawBitmap+0x726>
900050e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900050e2:	465f      	mov	r7, fp
900050e4:	f8dd 8008 	ldr.w	r8, [sp, #8]
900050e8:	9308      	str	r3, [sp, #32]
900050ea:	e036      	b.n	9000515a <_DrawBitmap+0x4ee>
900050ec:	9b02      	ldr	r3, [sp, #8]
900050ee:	e07e      	b.n	900051ee <_DrawBitmap+0x582>
900050f0:	9b02      	ldr	r3, [sp, #8]
900050f2:	429d      	cmp	r5, r3
900050f4:	4621      	mov	r1, r4
900050f6:	bfc8      	it	gt
900050f8:	b2dd      	uxtbgt	r5, r3
900050fa:	1b5b      	subs	r3, r3, r5
900050fc:	462a      	mov	r2, r5
900050fe:	09b0      	lsrs	r0, r6, #6
90005100:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
90005102:	3a01      	subs	r2, #1
90005104:	00b6      	lsls	r6, r6, #2
90005106:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
9000510a:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
9000510e:	b2f6      	uxtb	r6, r6
90005110:	f821 0b02 	strh.w	r0, [r1], #2
90005114:	d1f3      	bne.n	900050fe <_DrawBitmap+0x492>
90005116:	3d01      	subs	r5, #1
90005118:	b2ed      	uxtb	r5, r5
9000511a:	3501      	adds	r5, #1
9000511c:	eb04 0445 	add.w	r4, r4, r5, lsl #1
90005120:	2b00      	cmp	r3, #0
90005122:	f000 8136 	beq.w	90005392 <_DrawBitmap+0x726>
90005126:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
9000512a:	2504      	movs	r5, #4
9000512c:	e7e1      	b.n	900050f2 <_DrawBitmap+0x486>
9000512e:	f016 0fc0 	tst.w	r6, #192	; 0xc0
90005132:	d125      	bne.n	90005180 <_DrawBitmap+0x514>
90005134:	f109 0901 	add.w	r9, r9, #1
90005138:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000513a:	00b6      	lsls	r6, r6, #2
9000513c:	4599      	cmp	r9, r3
9000513e:	b2f6      	uxtb	r6, r6
90005140:	d1f5      	bne.n	9000512e <_DrawBitmap+0x4c2>
90005142:	1c6b      	adds	r3, r5, #1
90005144:	3701      	adds	r7, #1
90005146:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9000514a:	442f      	add	r7, r5
9000514c:	f1b8 0f00 	cmp.w	r8, #0
90005150:	f000 811f 	beq.w	90005392 <_DrawBitmap+0x726>
90005154:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
90005158:	2504      	movs	r5, #4
9000515a:	4545      	cmp	r5, r8
9000515c:	f107 0301 	add.w	r3, r7, #1
90005160:	46b9      	mov	r9, r7
90005162:	bfc8      	it	gt
90005164:	fa5f f588 	uxtbgt.w	r5, r8
90005168:	ebc5 0808 	rsb	r8, r5, r8
9000516c:	3d01      	subs	r5, #1
9000516e:	b2ed      	uxtb	r5, r5
90005170:	442b      	add	r3, r5
90005172:	930d      	str	r3, [sp, #52]	; 0x34
90005174:	f06f 0301 	mvn.w	r3, #1
90005178:	fb03 4307 	mla	r3, r3, r7, r4
9000517c:	9309      	str	r3, [sp, #36]	; 0x24
9000517e:	e7d6      	b.n	9000512e <_DrawBitmap+0x4c2>
90005180:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90005182:	09b3      	lsrs	r3, r6, #6
90005184:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
90005188:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000518a:	f822 3019 	strh.w	r3, [r2, r9, lsl #1]
9000518e:	9b08      	ldr	r3, [sp, #32]
90005190:	2b00      	cmp	r3, #0
90005192:	d0cf      	beq.n	90005134 <_DrawBitmap+0x4c8>
90005194:	689b      	ldr	r3, [r3, #8]
90005196:	4649      	mov	r1, r9
90005198:	9a04      	ldr	r2, [sp, #16]
9000519a:	681b      	ldr	r3, [r3, #0]
9000519c:	9808      	ldr	r0, [sp, #32]
9000519e:	4798      	blx	r3
900051a0:	e7c8      	b.n	90005134 <_DrawBitmap+0x4c8>
900051a2:	bf00      	nop
900051a4:	9000dd2c 	.word	0x9000dd2c
900051a8:	200000a4 	.word	0x200000a4
900051ac:	9000dd84 	.word	0x9000dd84
900051b0:	f016 0fc0 	tst.w	r6, #192	; 0xc0
900051b4:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
900051b8:	ea4f 0686 	mov.w	r6, r6, lsl #2
900051bc:	f101 0102 	add.w	r1, r1, #2
900051c0:	bf18      	it	ne
900051c2:	f831 0c02 	ldrhne.w	r0, [r1, #-2]
900051c6:	b2f6      	uxtb	r6, r6
900051c8:	bf1c      	itt	ne
900051ca:	f080 00ff 	eorne.w	r0, r0, #255	; 0xff
900051ce:	f821 0c02 	strhne.w	r0, [r1, #-2]
900051d2:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
900051d6:	d1eb      	bne.n	900051b0 <_DrawBitmap+0x544>
900051d8:	3d01      	subs	r5, #1
900051da:	b2ed      	uxtb	r5, r5
900051dc:	3501      	adds	r5, #1
900051de:	eb04 0445 	add.w	r4, r4, r5, lsl #1
900051e2:	2b00      	cmp	r3, #0
900051e4:	f000 80d5 	beq.w	90005392 <_DrawBitmap+0x726>
900051e8:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
900051ec:	2504      	movs	r5, #4
900051ee:	429d      	cmp	r5, r3
900051f0:	4621      	mov	r1, r4
900051f2:	bfc8      	it	gt
900051f4:	b2dd      	uxtbgt	r5, r3
900051f6:	1b5b      	subs	r3, r3, r5
900051f8:	462a      	mov	r2, r5
900051fa:	e7d9      	b.n	900051b0 <_DrawBitmap+0x544>
900051fc:	9b03      	ldr	r3, [sp, #12]
900051fe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90005200:	f813 3c01 	ldrb.w	r3, [r3, #-1]
90005204:	4093      	lsls	r3, r2
90005206:	4a6d      	ldr	r2, [pc, #436]	; (900053bc <_DrawBitmap+0x750>)
90005208:	6812      	ldr	r2, [r2, #0]
9000520a:	b2dd      	uxtb	r5, r3
9000520c:	7c12      	ldrb	r2, [r2, #16]
9000520e:	f002 0203 	and.w	r2, r2, #3
90005212:	2a01      	cmp	r2, #1
90005214:	d003      	beq.n	9000521e <_DrawBitmap+0x5b2>
90005216:	d308      	bcc.n	9000522a <_DrawBitmap+0x5be>
90005218:	2a02      	cmp	r2, #2
9000521a:	d03a      	beq.n	90005292 <_DrawBitmap+0x626>
9000521c:	e0b9      	b.n	90005392 <_DrawBitmap+0x726>
9000521e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90005220:	9a02      	ldr	r2, [sp, #8]
90005222:	f1c3 0302 	rsb	r3, r3, #2
90005226:	b2db      	uxtb	r3, r3
90005228:	e0ac      	b.n	90005384 <_DrawBitmap+0x718>
9000522a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9000522c:	b15b      	cbz	r3, 90005246 <_DrawBitmap+0x5da>
9000522e:	092d      	lsrs	r5, r5, #4
90005230:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90005232:	9a03      	ldr	r2, [sp, #12]
90005234:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
90005238:	4692      	mov	sl, r2
9000523a:	8023      	strh	r3, [r4, #0]
9000523c:	9b02      	ldr	r3, [sp, #8]
9000523e:	9c07      	ldr	r4, [sp, #28]
90005240:	3b01      	subs	r3, #1
90005242:	7815      	ldrb	r5, [r2, #0]
90005244:	e000      	b.n	90005248 <_DrawBitmap+0x5dc>
90005246:	9b02      	ldr	r3, [sp, #8]
90005248:	2b01      	cmp	r3, #1
9000524a:	dd19      	ble.n	90005280 <_DrawBitmap+0x614>
9000524c:	1059      	asrs	r1, r3, #1
9000524e:	1d22      	adds	r2, r4, #4
90005250:	f003 0301 	and.w	r3, r3, #1
90005254:	eb0a 0001 	add.w	r0, sl, r1
90005258:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
9000525a:	092e      	lsrs	r6, r5, #4
9000525c:	f005 050f 	and.w	r5, r5, #15
90005260:	3204      	adds	r2, #4
90005262:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
90005266:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
9000526a:	f822 6c08 	strh.w	r6, [r2, #-8]
9000526e:	463e      	mov	r6, r7
90005270:	f822 5c06 	strh.w	r5, [r2, #-6]
90005274:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
90005278:	4582      	cmp	sl, r0
9000527a:	d1ed      	bne.n	90005258 <_DrawBitmap+0x5ec>
9000527c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90005280:	2b00      	cmp	r3, #0
90005282:	f000 8086 	beq.w	90005392 <_DrawBitmap+0x726>
90005286:	092d      	lsrs	r5, r5, #4
90005288:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9000528a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
9000528e:	8023      	strh	r3, [r4, #0]
90005290:	e07f      	b.n	90005392 <_DrawBitmap+0x726>
90005292:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90005294:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
90005296:	b1c2      	cbz	r2, 900052ca <_DrawBitmap+0x65e>
90005298:	f013 0ff0 	tst.w	r3, #240	; 0xf0
9000529c:	d00b      	beq.n	900052b6 <_DrawBitmap+0x64a>
9000529e:	092d      	lsrs	r5, r5, #4
900052a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900052a2:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
900052a6:	8023      	strh	r3, [r4, #0]
900052a8:	b12e      	cbz	r6, 900052b6 <_DrawBitmap+0x64a>
900052aa:	68b3      	ldr	r3, [r6, #8]
900052ac:	4659      	mov	r1, fp
900052ae:	9a04      	ldr	r2, [sp, #16]
900052b0:	4630      	mov	r0, r6
900052b2:	681b      	ldr	r3, [r3, #0]
900052b4:	4798      	blx	r3
900052b6:	9b02      	ldr	r3, [sp, #8]
900052b8:	f10b 0701 	add.w	r7, fp, #1
900052bc:	9c07      	ldr	r4, [sp, #28]
900052be:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
900052c2:	9b03      	ldr	r3, [sp, #12]
900052c4:	781d      	ldrb	r5, [r3, #0]
900052c6:	469a      	mov	sl, r3
900052c8:	e00f      	b.n	900052ea <_DrawBitmap+0x67e>
900052ca:	f8dd 8008 	ldr.w	r8, [sp, #8]
900052ce:	465f      	mov	r7, fp
900052d0:	e00b      	b.n	900052ea <_DrawBitmap+0x67e>
900052d2:	f015 0ff0 	tst.w	r5, #240	; 0xf0
900052d6:	d10c      	bne.n	900052f2 <_DrawBitmap+0x686>
900052d8:	f015 050f 	ands.w	r5, r5, #15
900052dc:	d117      	bne.n	9000530e <_DrawBitmap+0x6a2>
900052de:	3404      	adds	r4, #4
900052e0:	3702      	adds	r7, #2
900052e2:	f1a8 0802 	sub.w	r8, r8, #2
900052e6:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
900052ea:	f1b8 0f01 	cmp.w	r8, #1
900052ee:	dcf0      	bgt.n	900052d2 <_DrawBitmap+0x666>
900052f0:	e01a      	b.n	90005328 <_DrawBitmap+0x6bc>
900052f2:	092b      	lsrs	r3, r5, #4
900052f4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
900052f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
900052fa:	8023      	strh	r3, [r4, #0]
900052fc:	2e00      	cmp	r6, #0
900052fe:	d0eb      	beq.n	900052d8 <_DrawBitmap+0x66c>
90005300:	68b3      	ldr	r3, [r6, #8]
90005302:	4639      	mov	r1, r7
90005304:	9a04      	ldr	r2, [sp, #16]
90005306:	4630      	mov	r0, r6
90005308:	681b      	ldr	r3, [r3, #0]
9000530a:	4798      	blx	r3
9000530c:	e7e4      	b.n	900052d8 <_DrawBitmap+0x66c>
9000530e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90005310:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
90005314:	8063      	strh	r3, [r4, #2]
90005316:	2e00      	cmp	r6, #0
90005318:	d0e1      	beq.n	900052de <_DrawBitmap+0x672>
9000531a:	68b3      	ldr	r3, [r6, #8]
9000531c:	1c79      	adds	r1, r7, #1
9000531e:	9a04      	ldr	r2, [sp, #16]
90005320:	4630      	mov	r0, r6
90005322:	681b      	ldr	r3, [r3, #0]
90005324:	4798      	blx	r3
90005326:	e7da      	b.n	900052de <_DrawBitmap+0x672>
90005328:	f1b8 0f00 	cmp.w	r8, #0
9000532c:	d031      	beq.n	90005392 <_DrawBitmap+0x726>
9000532e:	092d      	lsrs	r5, r5, #4
90005330:	d02f      	beq.n	90005392 <_DrawBitmap+0x726>
90005332:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90005334:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
90005338:	8023      	strh	r3, [r4, #0]
9000533a:	b356      	cbz	r6, 90005392 <_DrawBitmap+0x726>
9000533c:	68b3      	ldr	r3, [r6, #8]
9000533e:	4639      	mov	r1, r7
90005340:	9a04      	ldr	r2, [sp, #16]
90005342:	4630      	mov	r0, r6
90005344:	681b      	ldr	r3, [r3, #0]
90005346:	4798      	blx	r3
90005348:	e023      	b.n	90005392 <_DrawBitmap+0x726>
9000534a:	f015 0fc0 	tst.w	r5, #192	; 0xc0
9000534e:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
90005352:	ea4f 1505 	mov.w	r5, r5, lsl #4
90005356:	f100 0002 	add.w	r0, r0, #2
9000535a:	bf18      	it	ne
9000535c:	f830 6c02 	ldrhne.w	r6, [r0, #-2]
90005360:	b2ed      	uxtb	r5, r5
90005362:	bf1c      	itt	ne
90005364:	f086 06ff 	eorne.w	r6, r6, #255	; 0xff
90005368:	f820 6c02 	strhne.w	r6, [r0, #-2]
9000536c:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
90005370:	d1eb      	bne.n	9000534a <_DrawBitmap+0x6de>
90005372:	3b01      	subs	r3, #1
90005374:	b2db      	uxtb	r3, r3
90005376:	3301      	adds	r3, #1
90005378:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9000537c:	b14a      	cbz	r2, 90005392 <_DrawBitmap+0x726>
9000537e:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
90005382:	2302      	movs	r3, #2
90005384:	4293      	cmp	r3, r2
90005386:	4620      	mov	r0, r4
90005388:	bfc8      	it	gt
9000538a:	b2d3      	uxtbgt	r3, r2
9000538c:	1ad2      	subs	r2, r2, r3
9000538e:	4619      	mov	r1, r3
90005390:	e7db      	b.n	9000534a <_DrawBitmap+0x6de>
90005392:	9b04      	ldr	r3, [sp, #16]
90005394:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90005396:	3301      	adds	r3, #1
90005398:	9304      	str	r3, [sp, #16]
9000539a:	9b03      	ldr	r3, [sp, #12]
9000539c:	4413      	add	r3, r2
9000539e:	9a06      	ldr	r2, [sp, #24]
900053a0:	9303      	str	r3, [sp, #12]
900053a2:	9b07      	ldr	r3, [sp, #28]
900053a4:	4413      	add	r3, r2
900053a6:	9307      	str	r3, [sp, #28]
900053a8:	e5ae      	b.n	90004f08 <_DrawBitmap+0x29c>
900053aa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900053ac:	b113      	cbz	r3, 900053b4 <_DrawBitmap+0x748>
900053ae:	a80f      	add	r0, sp, #60	; 0x3c
900053b0:	f7fc ff12 	bl	900021d8 <GUI_ALLOC_UnlockH>
900053b4:	b011      	add	sp, #68	; 0x44
900053b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900053ba:	bf00      	nop
900053bc:	200000a4 	.word	0x200000a4

900053c0 <_GetDevProp>:
900053c0:	2908      	cmp	r1, #8
900053c2:	d004      	beq.n	900053ce <_GetDevProp+0xe>
900053c4:	6800      	ldr	r0, [r0, #0]
900053c6:	b120      	cbz	r0, 900053d2 <_GetDevProp+0x12>
900053c8:	68c3      	ldr	r3, [r0, #12]
900053ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900053cc:	4718      	bx	r3
900053ce:	2010      	movs	r0, #16
900053d0:	4770      	bx	lr
900053d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
900053d6:	4770      	bx	lr

900053d8 <GUI_USAGE_DecUseCnt>:
900053d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
900053da:	4605      	mov	r5, r0
900053dc:	f7fc feee 	bl	900021bc <GUI_ALLOC_LockH>
900053e0:	8984      	ldrh	r4, [r0, #12]
900053e2:	ab02      	add	r3, sp, #8
900053e4:	3c01      	subs	r4, #1
900053e6:	f843 0d04 	str.w	r0, [r3, #-4]!
900053ea:	b224      	sxth	r4, r4
900053ec:	8184      	strh	r4, [r0, #12]
900053ee:	4618      	mov	r0, r3
900053f0:	f7fc fef2 	bl	900021d8 <GUI_ALLOC_UnlockH>
900053f4:	b914      	cbnz	r4, 900053fc <GUI_USAGE_DecUseCnt+0x24>
900053f6:	4628      	mov	r0, r5
900053f8:	f7fc ff0e 	bl	90002218 <GUI_ALLOC_Free>
900053fc:	b003      	add	sp, #12
900053fe:	bd30      	pop	{r4, r5, pc}

90005400 <GUI_USAGE_AddRect>:
90005400:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90005404:	9c08      	ldr	r4, [sp, #32]
90005406:	4605      	mov	r5, r0
90005408:	4688      	mov	r8, r1
9000540a:	4699      	mov	r9, r3
9000540c:	4414      	add	r4, r2
9000540e:	68ab      	ldr	r3, [r5, #8]
90005410:	1c56      	adds	r6, r2, #1
90005412:	4641      	mov	r1, r8
90005414:	4628      	mov	r0, r5
90005416:	685f      	ldr	r7, [r3, #4]
90005418:	464b      	mov	r3, r9
9000541a:	47b8      	blx	r7
9000541c:	42b4      	cmp	r4, r6
9000541e:	4632      	mov	r2, r6
90005420:	d1f5      	bne.n	9000540e <GUI_USAGE_AddRect+0xe>
90005422:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

90005426 <_Convert16>:
90005426:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000542a:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
9000542e:	4681      	mov	r9, r0
90005430:	460d      	mov	r5, r1
90005432:	4616      	mov	r6, r2
90005434:	461f      	mov	r7, r3
90005436:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
9000543a:	4614      	mov	r4, r2
9000543c:	4688      	mov	r8, r1
9000543e:	f839 0b02 	ldrh.w	r0, [r9], #2
90005442:	47d8      	blx	fp
90005444:	47d0      	blx	sl
90005446:	3c01      	subs	r4, #1
90005448:	f848 0b04 	str.w	r0, [r8], #4
9000544c:	d1f7      	bne.n	9000543e <_Convert16+0x18>
9000544e:	2f1f      	cmp	r7, #31
90005450:	d806      	bhi.n	90005460 <_Convert16+0x3a>
90005452:	463a      	mov	r2, r7
90005454:	4631      	mov	r1, r6
90005456:	4628      	mov	r0, r5
90005458:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000545c:	f001 bdfc 	b.w	90007058 <GUI__CompactPixelIndices>
90005460:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

90005464 <_Convert8>:
90005464:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005468:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
9000546c:	4680      	mov	r8, r0
9000546e:	460d      	mov	r5, r1
90005470:	4616      	mov	r6, r2
90005472:	461f      	mov	r7, r3
90005474:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
90005478:	4689      	mov	r9, r1
9000547a:	4604      	mov	r4, r0
9000547c:	f814 0b01 	ldrb.w	r0, [r4], #1
90005480:	47d8      	blx	fp
90005482:	47d0      	blx	sl
90005484:	1b33      	subs	r3, r6, r4
90005486:	f849 0b04 	str.w	r0, [r9], #4
9000548a:	eb18 0f03 	cmn.w	r8, r3
9000548e:	d1f5      	bne.n	9000547c <_Convert8+0x18>
90005490:	2f1f      	cmp	r7, #31
90005492:	d806      	bhi.n	900054a2 <_Convert8+0x3e>
90005494:	463a      	mov	r2, r7
90005496:	4631      	mov	r1, r6
90005498:	4628      	mov	r0, r5
9000549a:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000549e:	f001 bddb 	b.w	90007058 <GUI__CompactPixelIndices>
900054a2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

900054a8 <GUI_MEMDEV__WriteToActiveOpaque>:
900054a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900054ac:	b09b      	sub	sp, #108	; 0x6c
900054ae:	4605      	mov	r5, r0
900054b0:	9108      	str	r1, [sp, #32]
900054b2:	9209      	str	r2, [sp, #36]	; 0x24
900054b4:	2800      	cmp	r0, #0
900054b6:	f000 8399 	beq.w	90005bec <GUI_MEMDEV__WriteToActiveOpaque+0x744>
900054ba:	f7fc fe7f 	bl	900021bc <GUI_ALLOC_LockH>
900054be:	ab1a      	add	r3, sp, #104	; 0x68
900054c0:	6944      	ldr	r4, [r0, #20]
900054c2:	f843 0d1c 	str.w	r0, [r3, #-28]!
900054c6:	4618      	mov	r0, r3
900054c8:	f7fc fe86 	bl	900021d8 <GUI_ALLOC_UnlockH>
900054cc:	4628      	mov	r0, r5
900054ce:	f001 ff09 	bl	900072e4 <GUI_MEMDEV_GetBitsPerPixel>
900054d2:	2808      	cmp	r0, #8
900054d4:	4607      	mov	r7, r0
900054d6:	4ea5      	ldr	r6, [pc, #660]	; (9000576c <GUI_MEMDEV__WriteToActiveOpaque+0x2c4>)
900054d8:	dd02      	ble.n	900054e0 <GUI_MEMDEV__WriteToActiveOpaque+0x38>
900054da:	2c00      	cmp	r4, #0
900054dc:	f000 81c9 	beq.w	90005872 <GUI_MEMDEV__WriteToActiveOpaque+0x3ca>
900054e0:	2301      	movs	r3, #1
900054e2:	2700      	movs	r7, #0
900054e4:	4628      	mov	r0, r5
900054e6:	f10d 0968 	add.w	r9, sp, #104	; 0x68
900054ea:	9319      	str	r3, [sp, #100]	; 0x64
900054ec:	930d      	str	r3, [sp, #52]	; 0x34
900054ee:	9718      	str	r7, [sp, #96]	; 0x60
900054f0:	f7fc fe64 	bl	900021bc <GUI_ALLOC_LockH>
900054f4:	6802      	ldr	r2, [r0, #0]
900054f6:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900054fa:	6912      	ldr	r2, [r2, #16]
900054fc:	930e      	str	r3, [sp, #56]	; 0x38
900054fe:	6853      	ldr	r3, [r2, #4]
90005500:	6832      	ldr	r2, [r6, #0]
90005502:	f849 0d14 	str.w	r0, [r9, #-20]!
90005506:	6904      	ldr	r4, [r0, #16]
90005508:	f8d0 8014 	ldr.w	r8, [r0, #20]
9000550c:	f8d0 a00c 	ldr.w	sl, [r0, #12]
90005510:	f9b0 b008 	ldrsh.w	fp, [r0, #8]
90005514:	7c50      	ldrb	r0, [r2, #17]
90005516:	930c      	str	r3, [sp, #48]	; 0x30
90005518:	f7fe f8e8 	bl	900036ec <GUI_GetBitsPerPixelEx>
9000551c:	6832      	ldr	r2, [r6, #0]
9000551e:	900b      	str	r0, [sp, #44]	; 0x2c
90005520:	7c50      	ldrb	r0, [r2, #17]
90005522:	f7fe f901 	bl	90003728 <GUI_GetpfIndex2ColorEx>
90005526:	900a      	str	r0, [sp, #40]	; 0x28
90005528:	4648      	mov	r0, r9
9000552a:	f7fc fe55 	bl	900021d8 <GUI_ALLOC_UnlockH>
9000552e:	2c08      	cmp	r4, #8
90005530:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90005532:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90005534:	d904      	bls.n	90005540 <GUI_MEMDEV__WriteToActiveOpaque+0x98>
90005536:	2c10      	cmp	r4, #16
90005538:	bf8c      	ite	hi
9000553a:	2304      	movhi	r3, #4
9000553c:	2302      	movls	r3, #2
9000553e:	e005      	b.n	9000554c <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
90005540:	2c01      	cmp	r4, #1
90005542:	d103      	bne.n	9000554c <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
90005544:	ab18      	add	r3, sp, #96	; 0x60
90005546:	940d      	str	r4, [sp, #52]	; 0x34
90005548:	930a      	str	r3, [sp, #40]	; 0x28
9000554a:	e001      	b.n	90005550 <GUI_MEMDEV__WriteToActiveOpaque+0xa8>
9000554c:	930d      	str	r3, [sp, #52]	; 0x34
9000554e:	970a      	str	r7, [sp, #40]	; 0x28
90005550:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90005552:	4293      	cmp	r3, r2
90005554:	f000 80df 	beq.w	90005716 <GUI_MEMDEV__WriteToActiveOpaque+0x26e>
90005558:	6833      	ldr	r3, [r6, #0]
9000555a:	7c58      	ldrb	r0, [r3, #17]
9000555c:	f7fe f8ec 	bl	90003738 <GUI_GetpfColor2IndexEx>
90005560:	900f      	str	r0, [sp, #60]	; 0x3c
90005562:	ea4f 008b 	mov.w	r0, fp, lsl #2
90005566:	f7fc ffb7 	bl	900024d8 <GUI_ALLOC_AllocNoInit>
9000556a:	9010      	str	r0, [sp, #64]	; 0x40
9000556c:	2800      	cmp	r0, #0
9000556e:	f000 833d 	beq.w	90005bec <GUI_MEMDEV__WriteToActiveOpaque+0x744>
90005572:	4628      	mov	r0, r5
90005574:	f001 feee 	bl	90007354 <GUI_MEMDEV_GetDataPtr>
90005578:	4605      	mov	r5, r0
9000557a:	f1b8 0f00 	cmp.w	r8, #0
9000557e:	f000 80b9 	beq.w	900056f4 <GUI_MEMDEV__WriteToActiveOpaque+0x24c>
90005582:	4640      	mov	r0, r8
90005584:	f7fc fe1a 	bl	900021bc <GUI_ALLOC_LockH>
90005588:	eb05 030a 	add.w	r3, r5, sl
9000558c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
90005590:	9311      	str	r3, [sp, #68]	; 0x44
90005592:	2300      	movs	r3, #0
90005594:	9016      	str	r0, [sp, #88]	; 0x58
90005596:	9309      	str	r3, [sp, #36]	; 0x24
90005598:	9b11      	ldr	r3, [sp, #68]	; 0x44
9000559a:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000559c:	ebca 0703 	rsb	r7, sl, r3
900055a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900055a2:	4293      	cmp	r3, r2
900055a4:	f340 80a2 	ble.w	900056ec <GUI_MEMDEV__WriteToActiveOpaque+0x244>
900055a8:	2300      	movs	r3, #0
900055aa:	9816      	ldr	r0, [sp, #88]	; 0x58
900055ac:	f10d 085c 	add.w	r8, sp, #92	; 0x5c
900055b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
900055b2:	9317      	str	r3, [sp, #92]	; 0x5c
900055b4:	6883      	ldr	r3, [r0, #8]
900055b6:	4641      	mov	r1, r8
900055b8:	695b      	ldr	r3, [r3, #20]
900055ba:	4798      	blx	r3
900055bc:	4583      	cmp	fp, r0
900055be:	4605      	mov	r5, r0
900055c0:	d128      	bne.n	90005614 <GUI_MEMDEV__WriteToActiveOpaque+0x16c>
900055c2:	9810      	ldr	r0, [sp, #64]	; 0x40
900055c4:	f7fc fdfa 	bl	900021bc <GUI_ALLOC_LockH>
900055c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900055ca:	2c08      	cmp	r4, #8
900055cc:	4601      	mov	r1, r0
900055ce:	9301      	str	r3, [sp, #4]
900055d0:	465a      	mov	r2, fp
900055d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900055d4:	9014      	str	r0, [sp, #80]	; 0x50
900055d6:	4638      	mov	r0, r7
900055d8:	9300      	str	r3, [sp, #0]
900055da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900055dc:	d902      	bls.n	900055e4 <GUI_MEMDEV__WriteToActiveOpaque+0x13c>
900055de:	f7ff ff22 	bl	90005426 <_Convert16>
900055e2:	e001      	b.n	900055e8 <GUI_MEMDEV__WriteToActiveOpaque+0x140>
900055e4:	f7ff ff3e 	bl	90005464 <_Convert8>
900055e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900055ea:	ad1a      	add	r5, sp, #104	; 0x68
900055ec:	9808      	ldr	r0, [sp, #32]
900055ee:	465a      	mov	r2, fp
900055f0:	9305      	str	r3, [sp, #20]
900055f2:	4649      	mov	r1, r9
900055f4:	f855 3d18 	ldr.w	r3, [r5, #-24]!
900055f8:	9304      	str	r3, [sp, #16]
900055fa:	2300      	movs	r3, #0
900055fc:	9303      	str	r3, [sp, #12]
900055fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90005600:	9302      	str	r3, [sp, #8]
90005602:	2301      	movs	r3, #1
90005604:	9301      	str	r3, [sp, #4]
90005606:	9300      	str	r3, [sp, #0]
90005608:	f7fd fda2 	bl	90003150 <LCD_DrawBitmap>
9000560c:	4628      	mov	r0, r5
9000560e:	f7fc fde3 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005612:	e062      	b.n	900056da <GUI_MEMDEV__WriteToActiveOpaque+0x232>
90005614:	2c01      	cmp	r4, #1
90005616:	d002      	beq.n	9000561e <GUI_MEMDEV__WriteToActiveOpaque+0x176>
90005618:	f04f 0801 	mov.w	r8, #1
9000561c:	e057      	b.n	900056ce <GUI_MEMDEV__WriteToActiveOpaque+0x226>
9000561e:	2d00      	cmp	r5, #0
90005620:	d05b      	beq.n	900056da <GUI_MEMDEV__WriteToActiveOpaque+0x232>
90005622:	9817      	ldr	r0, [sp, #92]	; 0x5c
90005624:	462a      	mov	r2, r5
90005626:	9e08      	ldr	r6, [sp, #32]
90005628:	4649      	mov	r1, r9
9000562a:	f000 0307 	and.w	r3, r0, #7
9000562e:	f8cd a00c 	str.w	sl, [sp, #12]
90005632:	9306      	str	r3, [sp, #24]
90005634:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90005636:	9305      	str	r3, [sp, #20]
90005638:	2308      	movs	r3, #8
9000563a:	fb90 f3f3 	sdiv	r3, r0, r3
9000563e:	443b      	add	r3, r7
90005640:	4430      	add	r0, r6
90005642:	9304      	str	r3, [sp, #16]
90005644:	2301      	movs	r3, #1
90005646:	9302      	str	r3, [sp, #8]
90005648:	9301      	str	r3, [sp, #4]
9000564a:	9300      	str	r3, [sp, #0]
9000564c:	f7fd fc94 	bl	90002f78 <LCD__DrawBitmap_1bpp>
90005650:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90005652:	9816      	ldr	r0, [sp, #88]	; 0x58
90005654:	4641      	mov	r1, r8
90005656:	441d      	add	r5, r3
90005658:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000565a:	6883      	ldr	r3, [r0, #8]
9000565c:	9517      	str	r5, [sp, #92]	; 0x5c
9000565e:	695b      	ldr	r3, [r3, #20]
90005660:	4798      	blx	r3
90005662:	4605      	mov	r5, r0
90005664:	e7db      	b.n	9000561e <GUI_MEMDEV__WriteToActiveOpaque+0x176>
90005666:	9810      	ldr	r0, [sp, #64]	; 0x40
90005668:	f7fc fda8 	bl	900021bc <GUI_ALLOC_LockH>
9000566c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9000566e:	4601      	mov	r1, r0
90005670:	9014      	str	r0, [sp, #80]	; 0x50
90005672:	9301      	str	r3, [sp, #4]
90005674:	2c08      	cmp	r4, #8
90005676:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90005678:	462a      	mov	r2, r5
9000567a:	9817      	ldr	r0, [sp, #92]	; 0x5c
9000567c:	9e0d      	ldr	r6, [sp, #52]	; 0x34
9000567e:	9300      	str	r3, [sp, #0]
90005680:	fb00 7006 	mla	r0, r0, r6, r7
90005684:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90005686:	d925      	bls.n	900056d4 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
90005688:	f7ff fecd 	bl	90005426 <_Convert16>
9000568c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000568e:	462a      	mov	r2, r5
90005690:	9817      	ldr	r0, [sp, #92]	; 0x5c
90005692:	4649      	mov	r1, r9
90005694:	9305      	str	r3, [sp, #20]
90005696:	9b14      	ldr	r3, [sp, #80]	; 0x50
90005698:	9e08      	ldr	r6, [sp, #32]
9000569a:	9304      	str	r3, [sp, #16]
9000569c:	2300      	movs	r3, #0
9000569e:	4430      	add	r0, r6
900056a0:	f8cd 8004 	str.w	r8, [sp, #4]
900056a4:	9303      	str	r3, [sp, #12]
900056a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900056a8:	f8cd 8000 	str.w	r8, [sp]
900056ac:	9302      	str	r3, [sp, #8]
900056ae:	2301      	movs	r3, #1
900056b0:	f7fd fd4e 	bl	90003150 <LCD_DrawBitmap>
900056b4:	a814      	add	r0, sp, #80	; 0x50
900056b6:	f7fc fd8f 	bl	900021d8 <GUI_ALLOC_UnlockH>
900056ba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900056bc:	9816      	ldr	r0, [sp, #88]	; 0x58
900056be:	a917      	add	r1, sp, #92	; 0x5c
900056c0:	441d      	add	r5, r3
900056c2:	9a09      	ldr	r2, [sp, #36]	; 0x24
900056c4:	6883      	ldr	r3, [r0, #8]
900056c6:	9517      	str	r5, [sp, #92]	; 0x5c
900056c8:	695b      	ldr	r3, [r3, #20]
900056ca:	4798      	blx	r3
900056cc:	4605      	mov	r5, r0
900056ce:	2d00      	cmp	r5, #0
900056d0:	d1c9      	bne.n	90005666 <GUI_MEMDEV__WriteToActiveOpaque+0x1be>
900056d2:	e002      	b.n	900056da <GUI_MEMDEV__WriteToActiveOpaque+0x232>
900056d4:	f7ff fec6 	bl	90005464 <_Convert8>
900056d8:	e7d8      	b.n	9000568c <GUI_MEMDEV__WriteToActiveOpaque+0x1e4>
900056da:	9b09      	ldr	r3, [sp, #36]	; 0x24
900056dc:	f109 0901 	add.w	r9, r9, #1
900056e0:	3301      	adds	r3, #1
900056e2:	9309      	str	r3, [sp, #36]	; 0x24
900056e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
900056e6:	4453      	add	r3, sl
900056e8:	9311      	str	r3, [sp, #68]	; 0x44
900056ea:	e755      	b.n	90005598 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
900056ec:	a816      	add	r0, sp, #88	; 0x58
900056ee:	f7fc fd73 	bl	900021d8 <GUI_ALLOC_UnlockH>
900056f2:	e00e      	b.n	90005712 <GUI_MEMDEV__WriteToActiveOpaque+0x26a>
900056f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900056f6:	465a      	mov	r2, fp
900056f8:	9004      	str	r0, [sp, #16]
900056fa:	9305      	str	r3, [sp, #20]
900056fc:	2301      	movs	r3, #1
900056fe:	f8cd a00c 	str.w	sl, [sp, #12]
90005702:	9301      	str	r3, [sp, #4]
90005704:	9300      	str	r3, [sp, #0]
90005706:	9402      	str	r4, [sp, #8]
90005708:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000570a:	9909      	ldr	r1, [sp, #36]	; 0x24
9000570c:	9808      	ldr	r0, [sp, #32]
9000570e:	f7fd fd1f 	bl	90003150 <LCD_DrawBitmap>
90005712:	9810      	ldr	r0, [sp, #64]	; 0x40
90005714:	e268      	b.n	90005be8 <GUI_MEMDEV__WriteToActiveOpaque+0x740>
90005716:	4628      	mov	r0, r5
90005718:	f001 fe1c 	bl	90007354 <GUI_MEMDEV_GetDataPtr>
9000571c:	4607      	mov	r7, r0
9000571e:	f1b8 0f00 	cmp.w	r8, #0
90005722:	f000 809a 	beq.w	9000585a <GUI_MEMDEV__WriteToActiveOpaque+0x3b2>
90005726:	2500      	movs	r5, #0
90005728:	4640      	mov	r0, r8
9000572a:	f7fc fd47 	bl	900021bc <GUI_ALLOC_LockH>
9000572e:	9016      	str	r0, [sp, #88]	; 0x58
90005730:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90005732:	42ab      	cmp	r3, r5
90005734:	f340 808d 	ble.w	90005852 <GUI_MEMDEV__WriteToActiveOpaque+0x3aa>
90005738:	2300      	movs	r3, #0
9000573a:	9816      	ldr	r0, [sp, #88]	; 0x58
9000573c:	f10d 085c 	add.w	r8, sp, #92	; 0x5c
90005740:	462a      	mov	r2, r5
90005742:	9317      	str	r3, [sp, #92]	; 0x5c
90005744:	6883      	ldr	r3, [r0, #8]
90005746:	4641      	mov	r1, r8
90005748:	695b      	ldr	r3, [r3, #20]
9000574a:	4798      	blx	r3
9000574c:	4583      	cmp	fp, r0
9000574e:	4606      	mov	r6, r0
90005750:	d126      	bne.n	900057a0 <GUI_MEMDEV__WriteToActiveOpaque+0x2f8>
90005752:	462e      	mov	r6, r5
90005754:	9816      	ldr	r0, [sp, #88]	; 0x58
90005756:	f106 0901 	add.w	r9, r6, #1
9000575a:	4641      	mov	r1, r8
9000575c:	6883      	ldr	r3, [r0, #8]
9000575e:	464a      	mov	r2, r9
90005760:	695b      	ldr	r3, [r3, #20]
90005762:	4798      	blx	r3
90005764:	4583      	cmp	fp, r0
90005766:	d103      	bne.n	90005770 <GUI_MEMDEV__WriteToActiveOpaque+0x2c8>
90005768:	464e      	mov	r6, r9
9000576a:	e7f3      	b.n	90005754 <GUI_MEMDEV__WriteToActiveOpaque+0x2ac>
9000576c:	200000a4 	.word	0x200000a4
90005770:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90005772:	ebc5 0806 	rsb	r8, r5, r6
90005776:	9909      	ldr	r1, [sp, #36]	; 0x24
90005778:	465a      	mov	r2, fp
9000577a:	f108 0801 	add.w	r8, r8, #1
9000577e:	9305      	str	r3, [sp, #20]
90005780:	2301      	movs	r3, #1
90005782:	9704      	str	r7, [sp, #16]
90005784:	4429      	add	r1, r5
90005786:	f8cd a00c 	str.w	sl, [sp, #12]
9000578a:	9301      	str	r3, [sp, #4]
9000578c:	4635      	mov	r5, r6
9000578e:	9300      	str	r3, [sp, #0]
90005790:	4643      	mov	r3, r8
90005792:	9402      	str	r4, [sp, #8]
90005794:	9808      	ldr	r0, [sp, #32]
90005796:	fb0a 7708 	mla	r7, sl, r8, r7
9000579a:	f7fd fcd9 	bl	90003150 <LCD_DrawBitmap>
9000579e:	e056      	b.n	9000584e <GUI_MEMDEV__WriteToActiveOpaque+0x3a6>
900057a0:	2c01      	cmp	r4, #1
900057a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900057a4:	d004      	beq.n	900057b0 <GUI_MEMDEV__WriteToActiveOpaque+0x308>
900057a6:	442b      	add	r3, r5
900057a8:	f04f 0901 	mov.w	r9, #1
900057ac:	930b      	str	r3, [sp, #44]	; 0x2c
900057ae:	e02b      	b.n	90005808 <GUI_MEMDEV__WriteToActiveOpaque+0x360>
900057b0:	eb03 0905 	add.w	r9, r3, r5
900057b4:	46a0      	mov	r8, r4
900057b6:	b32e      	cbz	r6, 90005804 <GUI_MEMDEV__WriteToActiveOpaque+0x35c>
900057b8:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
900057bc:	4632      	mov	r2, r6
900057be:	9808      	ldr	r0, [sp, #32]
900057c0:	4649      	mov	r1, r9
900057c2:	f00e 0307 	and.w	r3, lr, #7
900057c6:	f8cd a00c 	str.w	sl, [sp, #12]
900057ca:	4470      	add	r0, lr
900057cc:	f8cd 8008 	str.w	r8, [sp, #8]
900057d0:	9306      	str	r3, [sp, #24]
900057d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900057d4:	f8cd 8004 	str.w	r8, [sp, #4]
900057d8:	9305      	str	r3, [sp, #20]
900057da:	2308      	movs	r3, #8
900057dc:	f8cd 8000 	str.w	r8, [sp]
900057e0:	fb9e f3f3 	sdiv	r3, lr, r3
900057e4:	443b      	add	r3, r7
900057e6:	9304      	str	r3, [sp, #16]
900057e8:	2301      	movs	r3, #1
900057ea:	f7fd fbc5 	bl	90002f78 <LCD__DrawBitmap_1bpp>
900057ee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900057f0:	9816      	ldr	r0, [sp, #88]	; 0x58
900057f2:	462a      	mov	r2, r5
900057f4:	441e      	add	r6, r3
900057f6:	a917      	add	r1, sp, #92	; 0x5c
900057f8:	6883      	ldr	r3, [r0, #8]
900057fa:	9617      	str	r6, [sp, #92]	; 0x5c
900057fc:	695b      	ldr	r3, [r3, #20]
900057fe:	4798      	blx	r3
90005800:	4606      	mov	r6, r0
90005802:	e7d8      	b.n	900057b6 <GUI_MEMDEV__WriteToActiveOpaque+0x30e>
90005804:	4457      	add	r7, sl
90005806:	e022      	b.n	9000584e <GUI_MEMDEV__WriteToActiveOpaque+0x3a6>
90005808:	2e00      	cmp	r6, #0
9000580a:	d0fb      	beq.n	90005804 <GUI_MEMDEV__WriteToActiveOpaque+0x35c>
9000580c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000580e:	4632      	mov	r2, r6
90005810:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
90005814:	9305      	str	r3, [sp, #20]
90005816:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90005818:	9808      	ldr	r0, [sp, #32]
9000581a:	fb03 730e 	mla	r3, r3, lr, r7
9000581e:	990b      	ldr	r1, [sp, #44]	; 0x2c
90005820:	4470      	add	r0, lr
90005822:	f8cd a00c 	str.w	sl, [sp, #12]
90005826:	9304      	str	r3, [sp, #16]
90005828:	2301      	movs	r3, #1
9000582a:	9402      	str	r4, [sp, #8]
9000582c:	f8cd 9004 	str.w	r9, [sp, #4]
90005830:	f8cd 9000 	str.w	r9, [sp]
90005834:	f7fd fc8c 	bl	90003150 <LCD_DrawBitmap>
90005838:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9000583a:	9816      	ldr	r0, [sp, #88]	; 0x58
9000583c:	462a      	mov	r2, r5
9000583e:	441e      	add	r6, r3
90005840:	4641      	mov	r1, r8
90005842:	6883      	ldr	r3, [r0, #8]
90005844:	9617      	str	r6, [sp, #92]	; 0x5c
90005846:	695b      	ldr	r3, [r3, #20]
90005848:	4798      	blx	r3
9000584a:	4606      	mov	r6, r0
9000584c:	e7dc      	b.n	90005808 <GUI_MEMDEV__WriteToActiveOpaque+0x360>
9000584e:	3501      	adds	r5, #1
90005850:	e76e      	b.n	90005730 <GUI_MEMDEV__WriteToActiveOpaque+0x288>
90005852:	a816      	add	r0, sp, #88	; 0x58
90005854:	f7fc fcc0 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005858:	e1c8      	b.n	90005bec <GUI_MEMDEV__WriteToActiveOpaque+0x744>
9000585a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000585c:	465a      	mov	r2, fp
9000585e:	9004      	str	r0, [sp, #16]
90005860:	9305      	str	r3, [sp, #20]
90005862:	2301      	movs	r3, #1
90005864:	f8cd a00c 	str.w	sl, [sp, #12]
90005868:	9301      	str	r3, [sp, #4]
9000586a:	9300      	str	r3, [sp, #0]
9000586c:	9402      	str	r4, [sp, #8]
9000586e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90005870:	e03a      	b.n	900058e8 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
90005872:	4628      	mov	r0, r5
90005874:	f7fc fca2 	bl	900021bc <GUI_ALLOC_LockH>
90005878:	4683      	mov	fp, r0
9000587a:	a81a      	add	r0, sp, #104	; 0x68
9000587c:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
90005880:	f840 bd10 	str.w	fp, [r0, #-16]!
90005884:	930b      	str	r3, [sp, #44]	; 0x2c
90005886:	f8db 2000 	ldr.w	r2, [fp]
9000588a:	f8db 300c 	ldr.w	r3, [fp, #12]
9000588e:	f8d2 8010 	ldr.w	r8, [r2, #16]
90005892:	930c      	str	r3, [sp, #48]	; 0x30
90005894:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
90005898:	f7fc fc9e 	bl	900021d8 <GUI_ALLOC_UnlockH>
9000589c:	6832      	ldr	r2, [r6, #0]
9000589e:	f8d8 9004 	ldr.w	r9, [r8, #4]
900058a2:	7c50      	ldrb	r0, [r2, #17]
900058a4:	4aa1      	ldr	r2, [pc, #644]	; (90005b2c <GUI_MEMDEV__WriteToActiveOpaque+0x684>)
900058a6:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
900058aa:	6916      	ldr	r6, [r2, #16]
900058ac:	6833      	ldr	r3, [r6, #0]
900058ae:	930a      	str	r3, [sp, #40]	; 0x28
900058b0:	f7fd ff1c 	bl	900036ec <GUI_GetBitsPerPixelEx>
900058b4:	2808      	cmp	r0, #8
900058b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900058b8:	d906      	bls.n	900058c8 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
900058ba:	2810      	cmp	r0, #16
900058bc:	bf8c      	ite	hi
900058be:	f04f 0a04 	movhi.w	sl, #4
900058c2:	f04f 0a02 	movls.w	sl, #2
900058c6:	e001      	b.n	900058cc <GUI_MEMDEV__WriteToActiveOpaque+0x424>
900058c8:	f04f 0a01 	mov.w	sl, #1
900058cc:	45b0      	cmp	r8, r6
900058ce:	d110      	bne.n	900058f2 <GUI_MEMDEV__WriteToActiveOpaque+0x44a>
900058d0:	2200      	movs	r2, #0
900058d2:	9303      	str	r3, [sp, #12]
900058d4:	2301      	movs	r3, #1
900058d6:	f10b 0018 	add.w	r0, fp, #24
900058da:	9205      	str	r2, [sp, #20]
900058dc:	4622      	mov	r2, r4
900058de:	9301      	str	r3, [sp, #4]
900058e0:	9300      	str	r3, [sp, #0]
900058e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900058e4:	9004      	str	r0, [sp, #16]
900058e6:	9702      	str	r7, [sp, #8]
900058e8:	9909      	ldr	r1, [sp, #36]	; 0x24
900058ea:	9808      	ldr	r0, [sp, #32]
900058ec:	f7fd fc30 	bl	90003150 <LCD_DrawBitmap>
900058f0:	e17c      	b.n	90005bec <GUI_MEMDEV__WriteToActiveOpaque+0x744>
900058f2:	2f20      	cmp	r7, #32
900058f4:	f040 80a2 	bne.w	90005a3c <GUI_MEMDEV__WriteToActiveOpaque+0x594>
900058f8:	fb0a f004 	mul.w	r0, sl, r4
900058fc:	f7fc fdec 	bl	900024d8 <GUI_ALLOC_AllocNoInit>
90005900:	900d      	str	r0, [sp, #52]	; 0x34
90005902:	2800      	cmp	r0, #0
90005904:	f000 8172 	beq.w	90005bec <GUI_MEMDEV__WriteToActiveOpaque+0x744>
90005908:	f7fc fc58 	bl	900021bc <GUI_ALLOC_LockH>
9000590c:	9018      	str	r0, [sp, #96]	; 0x60
9000590e:	4628      	mov	r0, r5
90005910:	ea4f 0b84 	mov.w	fp, r4, lsl #2
90005914:	f7fc fc52 	bl	900021bc <GUI_ALLOC_LockH>
90005918:	9016      	str	r0, [sp, #88]	; 0x58
9000591a:	ea4f 02ca 	mov.w	r2, sl, lsl #3
9000591e:	6933      	ldr	r3, [r6, #16]
90005920:	f100 0518 	add.w	r5, r0, #24
90005924:	920c      	str	r2, [sp, #48]	; 0x30
90005926:	b373      	cbz	r3, 90005986 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
90005928:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
9000592c:	f04f 0901 	mov.w	r9, #1
90005930:	f1ba 0f02 	cmp.w	sl, #2
90005934:	d005      	beq.n	90005942 <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
90005936:	f1ba 0f04 	cmp.w	sl, #4
9000593a:	d002      	beq.n	90005942 <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
9000593c:	f1ba 0f01 	cmp.w	sl, #1
90005940:	d106      	bne.n	90005950 <GUI_MEMDEV__WriteToActiveOpaque+0x4a8>
90005942:	4628      	mov	r0, r5
90005944:	445d      	add	r5, fp
90005946:	6937      	ldr	r7, [r6, #16]
90005948:	4653      	mov	r3, sl
9000594a:	4622      	mov	r2, r4
9000594c:	9918      	ldr	r1, [sp, #96]	; 0x60
9000594e:	47b8      	blx	r7
90005950:	2300      	movs	r3, #0
90005952:	9a18      	ldr	r2, [sp, #96]	; 0x60
90005954:	f8cd 9004 	str.w	r9, [sp, #4]
90005958:	4641      	mov	r1, r8
9000595a:	9305      	str	r3, [sp, #20]
9000595c:	f108 0701 	add.w	r7, r8, #1
90005960:	9303      	str	r3, [sp, #12]
90005962:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90005964:	9204      	str	r2, [sp, #16]
90005966:	4622      	mov	r2, r4
90005968:	9302      	str	r3, [sp, #8]
9000596a:	2301      	movs	r3, #1
9000596c:	f8cd 9000 	str.w	r9, [sp]
90005970:	9808      	ldr	r0, [sp, #32]
90005972:	f7fd fbed 	bl	90003150 <LCD_DrawBitmap>
90005976:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90005978:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000597a:	4413      	add	r3, r2
9000597c:	429f      	cmp	r7, r3
9000597e:	f000 812c 	beq.w	90005bda <GUI_MEMDEV__WriteToActiveOpaque+0x732>
90005982:	46b8      	mov	r8, r7
90005984:	e7d4      	b.n	90005930 <GUI_MEMDEV__WriteToActiveOpaque+0x488>
90005986:	9f09      	ldr	r7, [sp, #36]	; 0x24
90005988:	461e      	mov	r6, r3
9000598a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000598c:	f04f 0901 	mov.w	r9, #1
90005990:	443b      	add	r3, r7
90005992:	9309      	str	r3, [sp, #36]	; 0x24
90005994:	f1ba 0f02 	cmp.w	sl, #2
90005998:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
9000599c:	d016      	beq.n	900059cc <GUI_MEMDEV__WriteToActiveOpaque+0x524>
9000599e:	f1ba 0f04 	cmp.w	sl, #4
900059a2:	d024      	beq.n	900059ee <GUI_MEMDEV__WriteToActiveOpaque+0x546>
900059a4:	f1ba 0f01 	cmp.w	sl, #1
900059a8:	d130      	bne.n	90005a0c <GUI_MEMDEV__WriteToActiveOpaque+0x564>
900059aa:	4643      	mov	r3, r8
900059ac:	462a      	mov	r2, r5
900059ae:	f852 0b04 	ldr.w	r0, [r2], #4
900059b2:	930e      	str	r3, [sp, #56]	; 0x38
900059b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900059b6:	920b      	str	r2, [sp, #44]	; 0x2c
900059b8:	4798      	blx	r3
900059ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900059bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900059be:	f803 0b01 	strb.w	r0, [r3], #1
900059c2:	1ae1      	subs	r1, r4, r3
900059c4:	eb18 0f01 	cmn.w	r8, r1
900059c8:	d1f1      	bne.n	900059ae <GUI_MEMDEV__WriteToActiveOpaque+0x506>
900059ca:	e01e      	b.n	90005a0a <GUI_MEMDEV__WriteToActiveOpaque+0x562>
900059cc:	4643      	mov	r3, r8
900059ce:	462a      	mov	r2, r5
900059d0:	46a0      	mov	r8, r4
900059d2:	f852 0b04 	ldr.w	r0, [r2], #4
900059d6:	930e      	str	r3, [sp, #56]	; 0x38
900059d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900059da:	920b      	str	r2, [sp, #44]	; 0x2c
900059dc:	4798      	blx	r3
900059de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900059e0:	f1b8 0801 	subs.w	r8, r8, #1
900059e4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900059e6:	f823 0b02 	strh.w	r0, [r3], #2
900059ea:	d1f2      	bne.n	900059d2 <GUI_MEMDEV__WriteToActiveOpaque+0x52a>
900059ec:	e00d      	b.n	90005a0a <GUI_MEMDEV__WriteToActiveOpaque+0x562>
900059ee:	462a      	mov	r2, r5
900059f0:	4623      	mov	r3, r4
900059f2:	f852 0b04 	ldr.w	r0, [r2], #4
900059f6:	930e      	str	r3, [sp, #56]	; 0x38
900059f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900059fa:	920b      	str	r2, [sp, #44]	; 0x2c
900059fc:	4798      	blx	r3
900059fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90005a00:	f848 0b04 	str.w	r0, [r8], #4
90005a04:	3b01      	subs	r3, #1
90005a06:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90005a08:	d1f3      	bne.n	900059f2 <GUI_MEMDEV__WriteToActiveOpaque+0x54a>
90005a0a:	445d      	add	r5, fp
90005a0c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90005a0e:	4622      	mov	r2, r4
90005a10:	9605      	str	r6, [sp, #20]
90005a12:	4639      	mov	r1, r7
90005a14:	9304      	str	r3, [sp, #16]
90005a16:	f107 0801 	add.w	r8, r7, #1
90005a1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90005a1c:	9603      	str	r6, [sp, #12]
90005a1e:	9302      	str	r3, [sp, #8]
90005a20:	2301      	movs	r3, #1
90005a22:	f8cd 9004 	str.w	r9, [sp, #4]
90005a26:	f8cd 9000 	str.w	r9, [sp]
90005a2a:	9808      	ldr	r0, [sp, #32]
90005a2c:	f7fd fb90 	bl	90003150 <LCD_DrawBitmap>
90005a30:	9b09      	ldr	r3, [sp, #36]	; 0x24
90005a32:	4543      	cmp	r3, r8
90005a34:	f000 80d1 	beq.w	90005bda <GUI_MEMDEV__WriteToActiveOpaque+0x732>
90005a38:	4647      	mov	r7, r8
90005a3a:	e7ab      	b.n	90005994 <GUI_MEMDEV__WriteToActiveOpaque+0x4ec>
90005a3c:	2f10      	cmp	r7, #16
90005a3e:	f040 80d5 	bne.w	90005bec <GUI_MEMDEV__WriteToActiveOpaque+0x744>
90005a42:	fb04 f00a 	mul.w	r0, r4, sl
90005a46:	f7fc fd47 	bl	900024d8 <GUI_ALLOC_AllocNoInit>
90005a4a:	900d      	str	r0, [sp, #52]	; 0x34
90005a4c:	2800      	cmp	r0, #0
90005a4e:	f000 80cd 	beq.w	90005bec <GUI_MEMDEV__WriteToActiveOpaque+0x744>
90005a52:	f7fc fbb3 	bl	900021bc <GUI_ALLOC_LockH>
90005a56:	9018      	str	r0, [sp, #96]	; 0x60
90005a58:	4628      	mov	r0, r5
90005a5a:	f7fc fbaf 	bl	900021bc <GUI_ALLOC_LockH>
90005a5e:	9016      	str	r0, [sp, #88]	; 0x58
90005a60:	6933      	ldr	r3, [r6, #16]
90005a62:	f100 0718 	add.w	r7, r0, #24
90005a66:	b113      	cbz	r3, 90005a6e <GUI_MEMDEV__WriteToActiveOpaque+0x5c6>
90005a68:	f8d8 3014 	ldr.w	r3, [r8, #20]
90005a6c:	b953      	cbnz	r3, 90005a84 <GUI_MEMDEV__WriteToActiveOpaque+0x5dc>
90005a6e:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90005a72:	9d09      	ldr	r5, [sp, #36]	; 0x24
90005a74:	0066      	lsls	r6, r4, #1
90005a76:	f04f 0b00 	mov.w	fp, #0
90005a7a:	930c      	str	r3, [sp, #48]	; 0x30
90005a7c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90005a7e:	442b      	add	r3, r5
90005a80:	9309      	str	r3, [sp, #36]	; 0x24
90005a82:	e083      	b.n	90005b8c <GUI_MEMDEV__WriteToActiveOpaque+0x6e4>
90005a84:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90005a88:	0080      	lsls	r0, r0, #2
90005a8a:	f7fc fd25 	bl	900024d8 <GUI_ALLOC_AllocNoInit>
90005a8e:	900c      	str	r0, [sp, #48]	; 0x30
90005a90:	b118      	cbz	r0, 90005a9a <GUI_MEMDEV__WriteToActiveOpaque+0x5f2>
90005a92:	f7fc fb93 	bl	900021bc <GUI_ALLOC_LockH>
90005a96:	9017      	str	r0, [sp, #92]	; 0x5c
90005a98:	e001      	b.n	90005a9e <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
90005a9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90005a9c:	9317      	str	r3, [sp, #92]	; 0x5c
90005a9e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90005aa0:	2b00      	cmp	r3, #0
90005aa2:	f000 809a 	beq.w	90005bda <GUI_MEMDEV__WriteToActiveOpaque+0x732>
90005aa6:	0063      	lsls	r3, r4, #1
90005aa8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90005aac:	930a      	str	r3, [sp, #40]	; 0x28
90005aae:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90005ab2:	930e      	str	r3, [sp, #56]	; 0x38
90005ab4:	f1ba 0f02 	cmp.w	sl, #2
90005ab8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
90005abc:	d006      	beq.n	90005acc <GUI_MEMDEV__WriteToActiveOpaque+0x624>
90005abe:	f1ba 0f04 	cmp.w	sl, #4
90005ac2:	d005      	beq.n	90005ad0 <GUI_MEMDEV__WriteToActiveOpaque+0x628>
90005ac4:	f1ba 0f01 	cmp.w	sl, #1
90005ac8:	d111      	bne.n	90005aee <GUI_MEMDEV__WriteToActiveOpaque+0x646>
90005aca:	e001      	b.n	90005ad0 <GUI_MEMDEV__WriteToActiveOpaque+0x628>
90005acc:	4653      	mov	r3, sl
90005ace:	e000      	b.n	90005ad2 <GUI_MEMDEV__WriteToActiveOpaque+0x62a>
90005ad0:	2302      	movs	r3, #2
90005ad2:	4638      	mov	r0, r7
90005ad4:	4622      	mov	r2, r4
90005ad6:	9917      	ldr	r1, [sp, #92]	; 0x5c
90005ad8:	f8d8 5014 	ldr.w	r5, [r8, #20]
90005adc:	47a8      	blx	r5
90005ade:	4653      	mov	r3, sl
90005ae0:	4622      	mov	r2, r4
90005ae2:	4649      	mov	r1, r9
90005ae4:	9817      	ldr	r0, [sp, #92]	; 0x5c
90005ae6:	6935      	ldr	r5, [r6, #16]
90005ae8:	47a8      	blx	r5
90005aea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90005aec:	441f      	add	r7, r3
90005aee:	2300      	movs	r3, #0
90005af0:	9a18      	ldr	r2, [sp, #96]	; 0x60
90005af2:	4659      	mov	r1, fp
90005af4:	9808      	ldr	r0, [sp, #32]
90005af6:	9305      	str	r3, [sp, #20]
90005af8:	f10b 0901 	add.w	r9, fp, #1
90005afc:	9303      	str	r3, [sp, #12]
90005afe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90005b00:	9204      	str	r2, [sp, #16]
90005b02:	4622      	mov	r2, r4
90005b04:	9302      	str	r3, [sp, #8]
90005b06:	2301      	movs	r3, #1
90005b08:	9301      	str	r3, [sp, #4]
90005b0a:	9300      	str	r3, [sp, #0]
90005b0c:	f7fd fb20 	bl	90003150 <LCD_DrawBitmap>
90005b10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90005b12:	9a09      	ldr	r2, [sp, #36]	; 0x24
90005b14:	4413      	add	r3, r2
90005b16:	4599      	cmp	r9, r3
90005b18:	d001      	beq.n	90005b1e <GUI_MEMDEV__WriteToActiveOpaque+0x676>
90005b1a:	46cb      	mov	fp, r9
90005b1c:	e7ca      	b.n	90005ab4 <GUI_MEMDEV__WriteToActiveOpaque+0x60c>
90005b1e:	a817      	add	r0, sp, #92	; 0x5c
90005b20:	f7fc fb5a 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005b24:	980c      	ldr	r0, [sp, #48]	; 0x30
90005b26:	f7fc fb77 	bl	90002218 <GUI_ALLOC_Free>
90005b2a:	e056      	b.n	90005bda <GUI_MEMDEV__WriteToActiveOpaque+0x732>
90005b2c:	20025c04 	.word	0x20025c04
90005b30:	f1ba 0f04 	cmp.w	sl, #4
90005b34:	d041      	beq.n	90005bba <GUI_MEMDEV__WriteToActiveOpaque+0x712>
90005b36:	f1ba 0f01 	cmp.w	sl, #1
90005b3a:	d111      	bne.n	90005b60 <GUI_MEMDEV__WriteToActiveOpaque+0x6b8>
90005b3c:	4643      	mov	r3, r8
90005b3e:	463a      	mov	r2, r7
90005b40:	f832 0b02 	ldrh.w	r0, [r2], #2
90005b44:	930e      	str	r3, [sp, #56]	; 0x38
90005b46:	920b      	str	r2, [sp, #44]	; 0x2c
90005b48:	47c8      	blx	r9
90005b4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90005b4c:	4798      	blx	r3
90005b4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90005b50:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90005b52:	f803 0b01 	strb.w	r0, [r3], #1
90005b56:	1ae1      	subs	r1, r4, r3
90005b58:	eb18 0f01 	cmn.w	r8, r1
90005b5c:	d1f0      	bne.n	90005b40 <GUI_MEMDEV__WriteToActiveOpaque+0x698>
90005b5e:	4437      	add	r7, r6
90005b60:	9b18      	ldr	r3, [sp, #96]	; 0x60
90005b62:	4622      	mov	r2, r4
90005b64:	f8cd b014 	str.w	fp, [sp, #20]
90005b68:	4629      	mov	r1, r5
90005b6a:	9304      	str	r3, [sp, #16]
90005b6c:	f105 0801 	add.w	r8, r5, #1
90005b70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90005b72:	f8cd b00c 	str.w	fp, [sp, #12]
90005b76:	9302      	str	r3, [sp, #8]
90005b78:	2301      	movs	r3, #1
90005b7a:	9808      	ldr	r0, [sp, #32]
90005b7c:	9301      	str	r3, [sp, #4]
90005b7e:	9300      	str	r3, [sp, #0]
90005b80:	f7fd fae6 	bl	90003150 <LCD_DrawBitmap>
90005b84:	9b09      	ldr	r3, [sp, #36]	; 0x24
90005b86:	4543      	cmp	r3, r8
90005b88:	d027      	beq.n	90005bda <GUI_MEMDEV__WriteToActiveOpaque+0x732>
90005b8a:	4645      	mov	r5, r8
90005b8c:	f1ba 0f02 	cmp.w	sl, #2
90005b90:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
90005b94:	d1cc      	bne.n	90005b30 <GUI_MEMDEV__WriteToActiveOpaque+0x688>
90005b96:	4643      	mov	r3, r8
90005b98:	463a      	mov	r2, r7
90005b9a:	46a0      	mov	r8, r4
90005b9c:	f832 0b02 	ldrh.w	r0, [r2], #2
90005ba0:	930e      	str	r3, [sp, #56]	; 0x38
90005ba2:	920b      	str	r2, [sp, #44]	; 0x2c
90005ba4:	47c8      	blx	r9
90005ba6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90005ba8:	4798      	blx	r3
90005baa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90005bac:	f1b8 0801 	subs.w	r8, r8, #1
90005bb0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90005bb2:	f823 0b02 	strh.w	r0, [r3], #2
90005bb6:	d1f1      	bne.n	90005b9c <GUI_MEMDEV__WriteToActiveOpaque+0x6f4>
90005bb8:	e7d1      	b.n	90005b5e <GUI_MEMDEV__WriteToActiveOpaque+0x6b6>
90005bba:	463a      	mov	r2, r7
90005bbc:	4623      	mov	r3, r4
90005bbe:	f832 0b02 	ldrh.w	r0, [r2], #2
90005bc2:	930e      	str	r3, [sp, #56]	; 0x38
90005bc4:	920b      	str	r2, [sp, #44]	; 0x2c
90005bc6:	47c8      	blx	r9
90005bc8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90005bca:	4798      	blx	r3
90005bcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90005bce:	f848 0b04 	str.w	r0, [r8], #4
90005bd2:	3b01      	subs	r3, #1
90005bd4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90005bd6:	d1f2      	bne.n	90005bbe <GUI_MEMDEV__WriteToActiveOpaque+0x716>
90005bd8:	e7c1      	b.n	90005b5e <GUI_MEMDEV__WriteToActiveOpaque+0x6b6>
90005bda:	a816      	add	r0, sp, #88	; 0x58
90005bdc:	f7fc fafc 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005be0:	a818      	add	r0, sp, #96	; 0x60
90005be2:	f7fc faf9 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005be6:	980d      	ldr	r0, [sp, #52]	; 0x34
90005be8:	f7fc fb16 	bl	90002218 <GUI_ALLOC_Free>
90005bec:	b01b      	add	sp, #108	; 0x6c
90005bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005bf2:	bf00      	nop

90005bf4 <_OnExit>:
90005bf4:	b570      	push	{r4, r5, r6, lr}
90005bf6:	4b1a      	ldr	r3, [pc, #104]	; (90005c60 <_OnExit+0x6c>)
90005bf8:	2400      	movs	r4, #0
90005bfa:	4d1a      	ldr	r5, [pc, #104]	; (90005c64 <_OnExit+0x70>)
90005bfc:	601c      	str	r4, [r3, #0]
90005bfe:	4621      	mov	r1, r4
90005c00:	4b19      	ldr	r3, [pc, #100]	; (90005c68 <_OnExit+0x74>)
90005c02:	481a      	ldr	r0, [pc, #104]	; (90005c6c <_OnExit+0x78>)
90005c04:	601c      	str	r4, [r3, #0]
90005c06:	605c      	str	r4, [r3, #4]
90005c08:	300c      	adds	r0, #12
90005c0a:	4b19      	ldr	r3, [pc, #100]	; (90005c70 <_OnExit+0x7c>)
90005c0c:	4a19      	ldr	r2, [pc, #100]	; (90005c74 <_OnExit+0x80>)
90005c0e:	601c      	str	r4, [r3, #0]
90005c10:	4b19      	ldr	r3, [pc, #100]	; (90005c78 <_OnExit+0x84>)
90005c12:	f800 4c0c 	strb.w	r4, [r0, #-12]
90005c16:	601c      	str	r4, [r3, #0]
90005c18:	4b18      	ldr	r3, [pc, #96]	; (90005c7c <_OnExit+0x88>)
90005c1a:	f840 4c08 	str.w	r4, [r0, #-8]
90005c1e:	601c      	str	r4, [r3, #0]
90005c20:	4b17      	ldr	r3, [pc, #92]	; (90005c80 <_OnExit+0x8c>)
90005c22:	6014      	str	r4, [r2, #0]
90005c24:	6054      	str	r4, [r2, #4]
90005c26:	2218      	movs	r2, #24
90005c28:	601c      	str	r4, [r3, #0]
90005c2a:	f840 4c04 	str.w	r4, [r0, #-4]
90005c2e:	682b      	ldr	r3, [r5, #0]
90005c30:	4798      	blx	r3
90005c32:	4b14      	ldr	r3, [pc, #80]	; (90005c84 <_OnExit+0x90>)
90005c34:	4621      	mov	r1, r4
90005c36:	2210      	movs	r2, #16
90005c38:	601c      	str	r4, [r3, #0]
90005c3a:	4b13      	ldr	r3, [pc, #76]	; (90005c88 <_OnExit+0x94>)
90005c3c:	4813      	ldr	r0, [pc, #76]	; (90005c8c <_OnExit+0x98>)
90005c3e:	601c      	str	r4, [r3, #0]
90005c40:	605c      	str	r4, [r3, #4]
90005c42:	682b      	ldr	r3, [r5, #0]
90005c44:	4798      	blx	r3
90005c46:	682b      	ldr	r3, [r5, #0]
90005c48:	4621      	mov	r1, r4
90005c4a:	2210      	movs	r2, #16
90005c4c:	4810      	ldr	r0, [pc, #64]	; (90005c90 <_OnExit+0x9c>)
90005c4e:	4798      	blx	r3
90005c50:	682b      	ldr	r3, [r5, #0]
90005c52:	4621      	mov	r1, r4
90005c54:	2210      	movs	r2, #16
90005c56:	480f      	ldr	r0, [pc, #60]	; (90005c94 <_OnExit+0xa0>)
90005c58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005c5c:	4718      	bx	r3
90005c5e:	bf00      	nop
90005c60:	20025c5c 	.word	0x20025c5c
90005c64:	200000ac 	.word	0x200000ac
90005c68:	20025c64 	.word	0x20025c64
90005c6c:	20025aa8 	.word	0x20025aa8
90005c70:	20025c70 	.word	0x20025c70
90005c74:	20025c30 	.word	0x20025c30
90005c78:	20025c1c 	.word	0x20025c1c
90005c7c:	20025c50 	.word	0x20025c50
90005c80:	20025c60 	.word	0x20025c60
90005c84:	20025c2c 	.word	0x20025c2c
90005c88:	20025c20 	.word	0x20025c20
90005c8c:	20025c94 	.word	0x20025c94
90005c90:	20025c84 	.word	0x20025c84
90005c94:	20025c74 	.word	0x20025c74

90005c98 <_Findy1>:
90005c98:	b5f0      	push	{r4, r5, r6, r7, lr}
90005c9a:	b085      	sub	sp, #20
90005c9c:	4607      	mov	r7, r0
90005c9e:	460c      	mov	r4, r1
90005ca0:	4616      	mov	r6, r2
90005ca2:	ad02      	add	r5, sp, #8
90005ca4:	2f00      	cmp	r7, #0
90005ca6:	d048      	beq.n	90005d3a <_Findy1+0xa2>
90005ca8:	4638      	mov	r0, r7
90005caa:	f7fc fa87 	bl	900021bc <GUI_ALLOC_LockH>
90005cae:	6a87      	ldr	r7, [r0, #40]	; 0x28
90005cb0:	4601      	mov	r1, r0
90005cb2:	9001      	str	r0, [sp, #4]
90005cb4:	07bb      	lsls	r3, r7, #30
90005cb6:	d53a      	bpl.n	90005d2e <_Findy1+0x96>
90005cb8:	b126      	cbz	r6, 90005cc4 <_Findy1+0x2c>
90005cba:	4632      	mov	r2, r6
90005cbc:	4628      	mov	r0, r5
90005cbe:	f7fd f860 	bl	90002d82 <GUI__IntersectRects>
90005cc2:	e002      	b.n	90005cca <_Findy1+0x32>
90005cc4:	c803      	ldmia	r0, {r0, r1}
90005cc6:	e885 0003 	stmia.w	r5, {r0, r1}
90005cca:	4629      	mov	r1, r5
90005ccc:	4620      	mov	r0, r4
90005cce:	f7fc fca5 	bl	9000261c <GUI_RectsIntersect>
90005cd2:	b360      	cbz	r0, 90005d2e <_Findy1+0x96>
90005cd4:	f017 0f01 	tst.w	r7, #1
90005cd8:	9b01      	ldr	r3, [sp, #4]
90005cda:	d11c      	bne.n	90005d16 <_Findy1+0x7e>
90005cdc:	b13e      	cbz	r6, 90005cee <_Findy1+0x56>
90005cde:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90005ce2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90005ce6:	4293      	cmp	r3, r2
90005ce8:	bfb8      	it	lt
90005cea:	4613      	movlt	r3, r2
90005cec:	e001      	b.n	90005cf2 <_Findy1+0x5a>
90005cee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90005cf2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90005cf6:	4293      	cmp	r3, r2
90005cf8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90005cfc:	dd05      	ble.n	90005d0a <_Findy1+0x72>
90005cfe:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90005d02:	429a      	cmp	r2, r3
90005d04:	db13      	blt.n	90005d2e <_Findy1+0x96>
90005d06:	3b01      	subs	r3, #1
90005d08:	e003      	b.n	90005d12 <_Findy1+0x7a>
90005d0a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90005d0e:	429a      	cmp	r2, r3
90005d10:	dd0d      	ble.n	90005d2e <_Findy1+0x96>
90005d12:	80e3      	strh	r3, [r4, #6]
90005d14:	e00b      	b.n	90005d2e <_Findy1+0x96>
90005d16:	69df      	ldr	r7, [r3, #28]
90005d18:	b14f      	cbz	r7, 90005d2e <_Findy1+0x96>
90005d1a:	4638      	mov	r0, r7
90005d1c:	462a      	mov	r2, r5
90005d1e:	4621      	mov	r1, r4
90005d20:	f7ff ffba 	bl	90005c98 <_Findy1>
90005d24:	4638      	mov	r0, r7
90005d26:	f7fc fa3f 	bl	900021a8 <GUI_ALLOC_h2p>
90005d2a:	6a07      	ldr	r7, [r0, #32]
90005d2c:	e7f4      	b.n	90005d18 <_Findy1+0x80>
90005d2e:	9b01      	ldr	r3, [sp, #4]
90005d30:	a801      	add	r0, sp, #4
90005d32:	6a1f      	ldr	r7, [r3, #32]
90005d34:	f7fc fa50 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005d38:	e7b4      	b.n	90005ca4 <_Findy1+0xc>
90005d3a:	b005      	add	sp, #20
90005d3c:	bdf0      	pop	{r4, r5, r6, r7, pc}

90005d3e <_Findx0>:
90005d3e:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90005d42:	4606      	mov	r6, r0
90005d44:	460f      	mov	r7, r1
90005d46:	4690      	mov	r8, r2
90005d48:	2500      	movs	r5, #0
90005d4a:	ac02      	add	r4, sp, #8
90005d4c:	2e00      	cmp	r6, #0
90005d4e:	d035      	beq.n	90005dbc <_Findx0+0x7e>
90005d50:	4630      	mov	r0, r6
90005d52:	f7fc fa33 	bl	900021bc <GUI_ALLOC_LockH>
90005d56:	6a86      	ldr	r6, [r0, #40]	; 0x28
90005d58:	4601      	mov	r1, r0
90005d5a:	9001      	str	r0, [sp, #4]
90005d5c:	07b2      	lsls	r2, r6, #30
90005d5e:	d527      	bpl.n	90005db0 <_Findx0+0x72>
90005d60:	f1b8 0f00 	cmp.w	r8, #0
90005d64:	d004      	beq.n	90005d70 <_Findx0+0x32>
90005d66:	4642      	mov	r2, r8
90005d68:	4620      	mov	r0, r4
90005d6a:	f7fd f80a 	bl	90002d82 <GUI__IntersectRects>
90005d6e:	e002      	b.n	90005d76 <_Findx0+0x38>
90005d70:	c803      	ldmia	r0, {r0, r1}
90005d72:	e884 0003 	stmia.w	r4, {r0, r1}
90005d76:	4621      	mov	r1, r4
90005d78:	4638      	mov	r0, r7
90005d7a:	f7fc fc4f 	bl	9000261c <GUI_RectsIntersect>
90005d7e:	b1b8      	cbz	r0, 90005db0 <_Findx0+0x72>
90005d80:	07f3      	lsls	r3, r6, #31
90005d82:	d405      	bmi.n	90005d90 <_Findx0+0x52>
90005d84:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90005d88:	2501      	movs	r5, #1
90005d8a:	3301      	adds	r3, #1
90005d8c:	803b      	strh	r3, [r7, #0]
90005d8e:	e00f      	b.n	90005db0 <_Findx0+0x72>
90005d90:	9b01      	ldr	r3, [sp, #4]
90005d92:	69de      	ldr	r6, [r3, #28]
90005d94:	b166      	cbz	r6, 90005db0 <_Findx0+0x72>
90005d96:	4622      	mov	r2, r4
90005d98:	4639      	mov	r1, r7
90005d9a:	4630      	mov	r0, r6
90005d9c:	f7ff ffcf 	bl	90005d3e <_Findx0>
90005da0:	2800      	cmp	r0, #0
90005da2:	4630      	mov	r0, r6
90005da4:	bf18      	it	ne
90005da6:	2501      	movne	r5, #1
90005da8:	f7fc f9fe 	bl	900021a8 <GUI_ALLOC_h2p>
90005dac:	6a06      	ldr	r6, [r0, #32]
90005dae:	e7f1      	b.n	90005d94 <_Findx0+0x56>
90005db0:	9b01      	ldr	r3, [sp, #4]
90005db2:	a801      	add	r0, sp, #4
90005db4:	6a1e      	ldr	r6, [r3, #32]
90005db6:	f7fc fa0f 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005dba:	e7c7      	b.n	90005d4c <_Findx0+0xe>
90005dbc:	4628      	mov	r0, r5
90005dbe:	b004      	add	sp, #16
90005dc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90005dc4 <_Findx1>:
90005dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
90005dc6:	b085      	sub	sp, #20
90005dc8:	4605      	mov	r5, r0
90005dca:	460e      	mov	r6, r1
90005dcc:	4617      	mov	r7, r2
90005dce:	ac02      	add	r4, sp, #8
90005dd0:	b37d      	cbz	r5, 90005e32 <_Findx1+0x6e>
90005dd2:	4628      	mov	r0, r5
90005dd4:	f7fc f9f2 	bl	900021bc <GUI_ALLOC_LockH>
90005dd8:	6a85      	ldr	r5, [r0, #40]	; 0x28
90005dda:	4601      	mov	r1, r0
90005ddc:	9001      	str	r0, [sp, #4]
90005dde:	07aa      	lsls	r2, r5, #30
90005de0:	d521      	bpl.n	90005e26 <_Findx1+0x62>
90005de2:	b127      	cbz	r7, 90005dee <_Findx1+0x2a>
90005de4:	463a      	mov	r2, r7
90005de6:	4620      	mov	r0, r4
90005de8:	f7fc ffcb 	bl	90002d82 <GUI__IntersectRects>
90005dec:	e002      	b.n	90005df4 <_Findx1+0x30>
90005dee:	c803      	ldmia	r0, {r0, r1}
90005df0:	e884 0003 	stmia.w	r4, {r0, r1}
90005df4:	4621      	mov	r1, r4
90005df6:	4630      	mov	r0, r6
90005df8:	f7fc fc10 	bl	9000261c <GUI_RectsIntersect>
90005dfc:	b198      	cbz	r0, 90005e26 <_Findx1+0x62>
90005dfe:	07eb      	lsls	r3, r5, #31
90005e00:	d404      	bmi.n	90005e0c <_Findx1+0x48>
90005e02:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90005e06:	3b01      	subs	r3, #1
90005e08:	80b3      	strh	r3, [r6, #4]
90005e0a:	e00c      	b.n	90005e26 <_Findx1+0x62>
90005e0c:	9b01      	ldr	r3, [sp, #4]
90005e0e:	69dd      	ldr	r5, [r3, #28]
90005e10:	b14d      	cbz	r5, 90005e26 <_Findx1+0x62>
90005e12:	4628      	mov	r0, r5
90005e14:	4622      	mov	r2, r4
90005e16:	4631      	mov	r1, r6
90005e18:	f7ff ffd4 	bl	90005dc4 <_Findx1>
90005e1c:	4628      	mov	r0, r5
90005e1e:	f7fc f9c3 	bl	900021a8 <GUI_ALLOC_h2p>
90005e22:	6a05      	ldr	r5, [r0, #32]
90005e24:	e7f4      	b.n	90005e10 <_Findx1+0x4c>
90005e26:	9b01      	ldr	r3, [sp, #4]
90005e28:	a801      	add	r0, sp, #4
90005e2a:	6a1d      	ldr	r5, [r3, #32]
90005e2c:	f7fc f9d4 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005e30:	e7ce      	b.n	90005dd0 <_Findx1+0xc>
90005e32:	b005      	add	sp, #20
90005e34:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90005e38 <WM__ClipAtParentBorders>:
90005e38:	b573      	push	{r0, r1, r4, r5, r6, lr}
90005e3a:	4606      	mov	r6, r0
90005e3c:	460d      	mov	r5, r1
90005e3e:	4628      	mov	r0, r5
90005e40:	f7fc f9bc 	bl	900021bc <GUI_ALLOC_LockH>
90005e44:	6a83      	ldr	r3, [r0, #40]	; 0x28
90005e46:	4601      	mov	r1, r0
90005e48:	9001      	str	r0, [sp, #4]
90005e4a:	f013 0402 	ands.w	r4, r3, #2
90005e4e:	d104      	bne.n	90005e5a <WM__ClipAtParentBorders+0x22>
90005e50:	a801      	add	r0, sp, #4
90005e52:	f7fc f9c1 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005e56:	4620      	mov	r0, r4
90005e58:	e016      	b.n	90005e88 <WM__ClipAtParentBorders+0x50>
90005e5a:	4630      	mov	r0, r6
90005e5c:	f7fc ff74 	bl	90002d48 <GUI__IntersectRect>
90005e60:	9b01      	ldr	r3, [sp, #4]
90005e62:	a801      	add	r0, sp, #4
90005e64:	699c      	ldr	r4, [r3, #24]
90005e66:	b954      	cbnz	r4, 90005e7e <WM__ClipAtParentBorders+0x46>
90005e68:	f7fc f9b6 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005e6c:	4b07      	ldr	r3, [pc, #28]	; (90005e8c <WM__ClipAtParentBorders+0x54>)
90005e6e:	681a      	ldr	r2, [r3, #0]
90005e70:	4295      	cmp	r5, r2
90005e72:	d008      	beq.n	90005e86 <WM__ClipAtParentBorders+0x4e>
90005e74:	6858      	ldr	r0, [r3, #4]
90005e76:	1b43      	subs	r3, r0, r5
90005e78:	4258      	negs	r0, r3
90005e7a:	4158      	adcs	r0, r3
90005e7c:	e004      	b.n	90005e88 <WM__ClipAtParentBorders+0x50>
90005e7e:	f7fc f9ab 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005e82:	4625      	mov	r5, r4
90005e84:	e7db      	b.n	90005e3e <WM__ClipAtParentBorders+0x6>
90005e86:	2001      	movs	r0, #1
90005e88:	b002      	add	sp, #8
90005e8a:	bd70      	pop	{r4, r5, r6, pc}
90005e8c:	20025c20 	.word	0x20025c20

90005e90 <WM__InsertWindowIntoList>:
90005e90:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90005e94:	4606      	mov	r6, r0
90005e96:	460c      	mov	r4, r1
90005e98:	2900      	cmp	r1, #0
90005e9a:	d04c      	beq.n	90005f36 <WM__InsertWindowIntoList+0xa6>
90005e9c:	f7fc f98e 	bl	900021bc <GUI_ALLOC_LockH>
90005ea0:	2300      	movs	r3, #0
90005ea2:	6184      	str	r4, [r0, #24]
90005ea4:	9001      	str	r0, [sp, #4]
90005ea6:	6203      	str	r3, [r0, #32]
90005ea8:	4620      	mov	r0, r4
90005eaa:	f7fc f987 	bl	900021bc <GUI_ALLOC_LockH>
90005eae:	ac04      	add	r4, sp, #16
90005eb0:	69c7      	ldr	r7, [r0, #28]
90005eb2:	f844 0d08 	str.w	r0, [r4, #-8]!
90005eb6:	b92f      	cbnz	r7, 90005ec4 <WM__InsertWindowIntoList+0x34>
90005eb8:	61c6      	str	r6, [r0, #28]
90005eba:	a801      	add	r0, sp, #4
90005ebc:	f7fc f98c 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005ec0:	4620      	mov	r0, r4
90005ec2:	e036      	b.n	90005f32 <WM__InsertWindowIntoList+0xa2>
90005ec4:	9b01      	ldr	r3, [sp, #4]
90005ec6:	f10d 0810 	add.w	r8, sp, #16
90005eca:	4638      	mov	r0, r7
90005ecc:	6a9d      	ldr	r5, [r3, #40]	; 0x28
90005ece:	f7fc f975 	bl	900021bc <GUI_ALLOC_LockH>
90005ed2:	f848 0d04 	str.w	r0, [r8, #-4]!
90005ed6:	f005 0508 	and.w	r5, r5, #8
90005eda:	b975      	cbnz	r5, 90005efa <WM__InsertWindowIntoList+0x6a>
90005edc:	6a83      	ldr	r3, [r0, #40]	; 0x28
90005ede:	071a      	lsls	r2, r3, #28
90005ee0:	d50b      	bpl.n	90005efa <WM__InsertWindowIntoList+0x6a>
90005ee2:	9b01      	ldr	r3, [sp, #4]
90005ee4:	a801      	add	r0, sp, #4
90005ee6:	621f      	str	r7, [r3, #32]
90005ee8:	9b02      	ldr	r3, [sp, #8]
90005eea:	61de      	str	r6, [r3, #28]
90005eec:	f7fc f974 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005ef0:	4620      	mov	r0, r4
90005ef2:	f7fc f971 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005ef6:	4640      	mov	r0, r8
90005ef8:	e01b      	b.n	90005f32 <WM__InsertWindowIntoList+0xa2>
90005efa:	4620      	mov	r0, r4
90005efc:	f7fc f96c 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005f00:	4640      	mov	r0, r8
90005f02:	f7fc f969 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005f06:	4638      	mov	r0, r7
90005f08:	f7fc f94e 	bl	900021a8 <GUI_ALLOC_h2p>
90005f0c:	9003      	str	r0, [sp, #12]
90005f0e:	9b03      	ldr	r3, [sp, #12]
90005f10:	6a1c      	ldr	r4, [r3, #32]
90005f12:	b90c      	cbnz	r4, 90005f18 <WM__InsertWindowIntoList+0x88>
90005f14:	621e      	str	r6, [r3, #32]
90005f16:	e00b      	b.n	90005f30 <WM__InsertWindowIntoList+0xa0>
90005f18:	4620      	mov	r0, r4
90005f1a:	f7fc f945 	bl	900021a8 <GUI_ALLOC_h2p>
90005f1e:	2d00      	cmp	r5, #0
90005f20:	d1f4      	bne.n	90005f0c <WM__InsertWindowIntoList+0x7c>
90005f22:	6a83      	ldr	r3, [r0, #40]	; 0x28
90005f24:	071b      	lsls	r3, r3, #28
90005f26:	d5f1      	bpl.n	90005f0c <WM__InsertWindowIntoList+0x7c>
90005f28:	9b03      	ldr	r3, [sp, #12]
90005f2a:	621e      	str	r6, [r3, #32]
90005f2c:	9b01      	ldr	r3, [sp, #4]
90005f2e:	621c      	str	r4, [r3, #32]
90005f30:	a801      	add	r0, sp, #4
90005f32:	f7fc f951 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005f36:	b004      	add	sp, #16
90005f38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90005f3c <WM__Client2Screen>:
90005f3c:	4603      	mov	r3, r0
90005f3e:	4608      	mov	r0, r1
90005f40:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90005f44:	f9b3 1000 	ldrsh.w	r1, [r3]
90005f48:	f7fc bb4f 	b.w	900025ea <GUI_MoveRect>

90005f4c <_SetClipRectUserIntersect>:
90005f4c:	4b11      	ldr	r3, [pc, #68]	; (90005f94 <_SetClipRectUserIntersect+0x48>)
90005f4e:	b530      	push	{r4, r5, lr}
90005f50:	681c      	ldr	r4, [r3, #0]
90005f52:	b085      	sub	sp, #20
90005f54:	4605      	mov	r5, r0
90005f56:	6c62      	ldr	r2, [r4, #68]	; 0x44
90005f58:	b1ba      	cbz	r2, 90005f8a <_SetClipRectUserIntersect+0x3e>
90005f5a:	6810      	ldr	r0, [r2, #0]
90005f5c:	ab02      	add	r3, sp, #8
90005f5e:	6851      	ldr	r1, [r2, #4]
90005f60:	c303      	stmia	r3!, {r0, r1}
90005f62:	4b0d      	ldr	r3, [pc, #52]	; (90005f98 <_SetClipRectUserIntersect+0x4c>)
90005f64:	6818      	ldr	r0, [r3, #0]
90005f66:	b900      	cbnz	r0, 90005f6a <_SetClipRectUserIntersect+0x1e>
90005f68:	6ca0      	ldr	r0, [r4, #72]	; 0x48
90005f6a:	ac04      	add	r4, sp, #16
90005f6c:	f7fc f926 	bl	900021bc <GUI_ALLOC_LockH>
90005f70:	a902      	add	r1, sp, #8
90005f72:	f844 0d0c 	str.w	r0, [r4, #-12]!
90005f76:	f7ff ffe1 	bl	90005f3c <WM__Client2Screen>
90005f7a:	4620      	mov	r0, r4
90005f7c:	f7fc f92c 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005f80:	a802      	add	r0, sp, #8
90005f82:	4629      	mov	r1, r5
90005f84:	f7fc fee0 	bl	90002d48 <GUI__IntersectRect>
90005f88:	a802      	add	r0, sp, #8
90005f8a:	f001 f993 	bl	900072b4 <LCD_SetClipRectEx>
90005f8e:	b005      	add	sp, #20
90005f90:	bd30      	pop	{r4, r5, pc}
90005f92:	bf00      	nop
90005f94:	200000a4 	.word	0x200000a4
90005f98:	20025c1c 	.word	0x20025c1c

90005f9c <WM__ActivateClipRect>:
90005f9c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90005f9e:	4b0e      	ldr	r3, [pc, #56]	; (90005fd8 <WM__ActivateClipRect+0x3c>)
90005fa0:	681b      	ldr	r3, [r3, #0]
90005fa2:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
90005fa6:	b10a      	cbz	r2, 90005fac <WM__ActivateClipRect+0x10>
90005fa8:	480c      	ldr	r0, [pc, #48]	; (90005fdc <WM__ActivateClipRect+0x40>)
90005faa:	e011      	b.n	90005fd0 <WM__ActivateClipRect+0x34>
90005fac:	6c98      	ldr	r0, [r3, #72]	; 0x48
90005fae:	ac02      	add	r4, sp, #8
90005fb0:	f7fc f904 	bl	900021bc <GUI_ALLOC_LockH>
90005fb4:	9001      	str	r0, [sp, #4]
90005fb6:	c803      	ldmia	r0, {r0, r1}
90005fb8:	e884 0003 	stmia.w	r4, {r0, r1}
90005fbc:	a801      	add	r0, sp, #4
90005fbe:	f7fc f90b 	bl	900021d8 <GUI_ALLOC_UnlockH>
90005fc2:	4b07      	ldr	r3, [pc, #28]	; (90005fe0 <WM__ActivateClipRect+0x44>)
90005fc4:	6819      	ldr	r1, [r3, #0]
90005fc6:	b111      	cbz	r1, 90005fce <WM__ActivateClipRect+0x32>
90005fc8:	4620      	mov	r0, r4
90005fca:	f7ff ff35 	bl	90005e38 <WM__ClipAtParentBorders>
90005fce:	4620      	mov	r0, r4
90005fd0:	f7ff ffbc 	bl	90005f4c <_SetClipRectUserIntersect>
90005fd4:	b004      	add	sp, #16
90005fd6:	bd10      	pop	{r4, pc}
90005fd8:	200000a4 	.word	0x200000a4
90005fdc:	20025abc 	.word	0x20025abc
90005fe0:	20025c1c 	.word	0x20025c1c

90005fe4 <WM__InvalidateDrawAndDescs>:
90005fe4:	b513      	push	{r0, r1, r4, lr}
90005fe6:	4604      	mov	r4, r0
90005fe8:	b300      	cbz	r0, 9000602c <WM__InvalidateDrawAndDescs+0x48>
90005fea:	f7fc f8e7 	bl	900021bc <GUI_ALLOC_LockH>
90005fee:	6a83      	ldr	r3, [r0, #40]	; 0x28
90005ff0:	9001      	str	r0, [sp, #4]
90005ff2:	079b      	lsls	r3, r3, #30
90005ff4:	d517      	bpl.n	90006026 <WM__InvalidateDrawAndDescs+0x42>
90005ff6:	6a40      	ldr	r0, [r0, #36]	; 0x24
90005ff8:	b140      	cbz	r0, 9000600c <WM__InvalidateDrawAndDescs+0x28>
90005ffa:	4b0d      	ldr	r3, [pc, #52]	; (90006030 <WM__InvalidateDrawAndDescs+0x4c>)
90005ffc:	681b      	ldr	r3, [r3, #0]
90005ffe:	429c      	cmp	r4, r3
90006000:	d004      	beq.n	9000600c <WM__InvalidateDrawAndDescs+0x28>
90006002:	f001 f985 	bl	90007310 <GUI_MEMDEV_Delete>
90006006:	2200      	movs	r2, #0
90006008:	9b01      	ldr	r3, [sp, #4]
9000600a:	625a      	str	r2, [r3, #36]	; 0x24
9000600c:	4620      	mov	r0, r4
9000600e:	f000 fc4f 	bl	900068b0 <WM_GetFirstChild>
90006012:	4604      	mov	r4, r0
90006014:	b13c      	cbz	r4, 90006026 <WM__InvalidateDrawAndDescs+0x42>
90006016:	4620      	mov	r0, r4
90006018:	f7ff ffe4 	bl	90005fe4 <WM__InvalidateDrawAndDescs>
9000601c:	4620      	mov	r0, r4
9000601e:	f7fc f8c3 	bl	900021a8 <GUI_ALLOC_h2p>
90006022:	6a04      	ldr	r4, [r0, #32]
90006024:	e7f6      	b.n	90006014 <WM__InvalidateDrawAndDescs+0x30>
90006026:	a801      	add	r0, sp, #4
90006028:	f7fc f8d6 	bl	900021d8 <GUI_ALLOC_UnlockH>
9000602c:	b002      	add	sp, #8
9000602e:	bd10      	pop	{r4, pc}
90006030:	20025c6c 	.word	0x20025c6c

90006034 <WM__RectIsNZ>:
90006034:	f9b0 2000 	ldrsh.w	r2, [r0]
90006038:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9000603c:	429a      	cmp	r2, r3
9000603e:	dc08      	bgt.n	90006052 <WM__RectIsNZ+0x1e>
90006040:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90006044:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90006048:	4283      	cmp	r3, r0
9000604a:	bfcc      	ite	gt
9000604c:	2000      	movgt	r0, #0
9000604e:	2001      	movle	r0, #1
90006050:	4770      	bx	lr
90006052:	2000      	movs	r0, #0
90006054:	4770      	bx	lr

90006056 <WM__SendMsgNoData>:
90006056:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90006058:	ab04      	add	r3, sp, #16
9000605a:	9001      	str	r0, [sp, #4]
9000605c:	f843 1d10 	str.w	r1, [r3, #-16]!
90006060:	4619      	mov	r1, r3
90006062:	f000 fcab 	bl	900069bc <WM__SendMessage>
90006066:	b005      	add	sp, #20
90006068:	f85d fb04 	ldr.w	pc, [sp], #4

9000606c <WM__GetClientRectWin>:
9000606c:	2300      	movs	r3, #0
9000606e:	804b      	strh	r3, [r1, #2]
90006070:	800b      	strh	r3, [r1, #0]
90006072:	8883      	ldrh	r3, [r0, #4]
90006074:	8802      	ldrh	r2, [r0, #0]
90006076:	1a9b      	subs	r3, r3, r2
90006078:	8842      	ldrh	r2, [r0, #2]
9000607a:	808b      	strh	r3, [r1, #4]
9000607c:	88c3      	ldrh	r3, [r0, #6]
9000607e:	1a9b      	subs	r3, r3, r2
90006080:	80cb      	strh	r3, [r1, #6]
90006082:	4770      	bx	lr

90006084 <WM__GetTopLevelLayer>:
90006084:	b510      	push	{r4, lr}
90006086:	4604      	mov	r4, r0
90006088:	f7fc f88e 	bl	900021a8 <GUI_ALLOC_h2p>
9000608c:	6980      	ldr	r0, [r0, #24]
9000608e:	2800      	cmp	r0, #0
90006090:	d1f9      	bne.n	90006086 <WM__GetTopLevelLayer+0x2>
90006092:	4b05      	ldr	r3, [pc, #20]	; (900060a8 <WM__GetTopLevelLayer+0x24>)
90006094:	681a      	ldr	r2, [r3, #0]
90006096:	4294      	cmp	r4, r2
90006098:	d005      	beq.n	900060a6 <WM__GetTopLevelLayer+0x22>
9000609a:	6858      	ldr	r0, [r3, #4]
9000609c:	4284      	cmp	r4, r0
9000609e:	bf0c      	ite	eq
900060a0:	2001      	moveq	r0, #1
900060a2:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
900060a6:	bd10      	pop	{r4, pc}
900060a8:	20025c20 	.word	0x20025c20

900060ac <_Invalidate1Abs>:
900060ac:	b5f0      	push	{r4, r5, r6, r7, lr}
900060ae:	b085      	sub	sp, #20
900060b0:	460d      	mov	r5, r1
900060b2:	4606      	mov	r6, r0
900060b4:	4617      	mov	r7, r2
900060b6:	f7fc f877 	bl	900021a8 <GUI_ALLOC_h2p>
900060ba:	6a81      	ldr	r1, [r0, #40]	; 0x28
900060bc:	9001      	str	r0, [sp, #4]
900060be:	078b      	lsls	r3, r1, #30
900060c0:	d53e      	bpl.n	90006140 <_Invalidate1Abs+0x94>
900060c2:	4628      	mov	r0, r5
900060c4:	f7ff ffb6 	bl	90006034 <WM__RectIsNZ>
900060c8:	2800      	cmp	r0, #0
900060ca:	d039      	beq.n	90006140 <_Invalidate1Abs+0x94>
900060cc:	f640 0301 	movw	r3, #2049	; 0x801
900060d0:	400b      	ands	r3, r1
900060d2:	2b01      	cmp	r3, #1
900060d4:	d034      	beq.n	90006140 <_Invalidate1Abs+0x94>
900060d6:	ac02      	add	r4, sp, #8
900060d8:	4630      	mov	r0, r6
900060da:	f7fc f86f 	bl	900021bc <GUI_ALLOC_LockH>
900060de:	4629      	mov	r1, r5
900060e0:	4602      	mov	r2, r0
900060e2:	9001      	str	r0, [sp, #4]
900060e4:	4620      	mov	r0, r4
900060e6:	f7fc fe4c 	bl	90002d82 <GUI__IntersectRects>
900060ea:	4620      	mov	r0, r4
900060ec:	f7ff ffa2 	bl	90006034 <WM__RectIsNZ>
900060f0:	b318      	cbz	r0, 9000613a <_Invalidate1Abs+0x8e>
900060f2:	9b01      	ldr	r3, [sp, #4]
900060f4:	f244 0120 	movw	r1, #16416	; 0x4020
900060f8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
900060fa:	f103 0508 	add.w	r5, r3, #8
900060fe:	4011      	ands	r1, r2
90006100:	b129      	cbz	r1, 9000610e <_Invalidate1Abs+0x62>
90006102:	4622      	mov	r2, r4
90006104:	4629      	mov	r1, r5
90006106:	4628      	mov	r0, r5
90006108:	f7fc fa44 	bl	90002594 <GUI_MergeRect>
9000610c:	e015      	b.n	9000613a <_Invalidate1Abs+0x8e>
9000610e:	e894 0003 	ldmia.w	r4, {r0, r1}
90006112:	433a      	orrs	r2, r7
90006114:	e885 0003 	stmia.w	r5, {r0, r1}
90006118:	629a      	str	r2, [r3, #40]	; 0x28
9000611a:	4630      	mov	r0, r6
9000611c:	4a09      	ldr	r2, [pc, #36]	; (90006144 <_Invalidate1Abs+0x98>)
9000611e:	8813      	ldrh	r3, [r2, #0]
90006120:	3301      	adds	r3, #1
90006122:	8013      	strh	r3, [r2, #0]
90006124:	f7ff ffae 	bl	90006084 <WM__GetTopLevelLayer>
90006128:	4a07      	ldr	r2, [pc, #28]	; (90006148 <_Invalidate1Abs+0x9c>)
9000612a:	2301      	movs	r3, #1
9000612c:	fa03 f000 	lsl.w	r0, r3, r0
90006130:	6813      	ldr	r3, [r2, #0]
90006132:	4303      	orrs	r3, r0
90006134:	6013      	str	r3, [r2, #0]
90006136:	f7fc fdff 	bl	90002d38 <GUI_SignalEvent>
9000613a:	a801      	add	r0, sp, #4
9000613c:	f7fc f84c 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006140:	b005      	add	sp, #20
90006142:	bdf0      	pop	{r4, r5, r6, r7, pc}
90006144:	20025c38 	.word	0x20025c38
90006148:	20025c48 	.word	0x20025c48

9000614c <WM__Invalidate1Abs>:
9000614c:	2220      	movs	r2, #32
9000614e:	f7ff bfad 	b.w	900060ac <_Invalidate1Abs>

90006152 <WM_InvalidateWindowAndDescsEx>:
90006152:	b5f0      	push	{r4, r5, r6, r7, lr}
90006154:	460f      	mov	r7, r1
90006156:	b085      	sub	sp, #20
90006158:	4615      	mov	r5, r2
9000615a:	4606      	mov	r6, r0
9000615c:	b348      	cbz	r0, 900061b2 <WM_InvalidateWindowAndDescsEx+0x60>
9000615e:	f7fc f82d 	bl	900021bc <GUI_ALLOC_LockH>
90006162:	6a83      	ldr	r3, [r0, #40]	; 0x28
90006164:	ac04      	add	r4, sp, #16
90006166:	4602      	mov	r2, r0
90006168:	079b      	lsls	r3, r3, #30
9000616a:	f844 0d0c 	str.w	r0, [r4, #-12]!
9000616e:	d403      	bmi.n	90006178 <WM_InvalidateWindowAndDescsEx+0x26>
90006170:	4620      	mov	r0, r4
90006172:	f7fc f831 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006176:	e01c      	b.n	900061b2 <WM_InvalidateWindowAndDescsEx+0x60>
90006178:	4639      	mov	r1, r7
9000617a:	a802      	add	r0, sp, #8
9000617c:	f7fc fe01 	bl	90002d82 <GUI__IntersectRects>
90006180:	2800      	cmp	r0, #0
90006182:	d0f5      	beq.n	90006170 <WM_InvalidateWindowAndDescsEx+0x1e>
90006184:	4620      	mov	r0, r4
90006186:	f7fc f827 	bl	900021d8 <GUI_ALLOC_UnlockH>
9000618a:	462a      	mov	r2, r5
9000618c:	a902      	add	r1, sp, #8
9000618e:	4630      	mov	r0, r6
90006190:	f7ff ff8c 	bl	900060ac <_Invalidate1Abs>
90006194:	4630      	mov	r0, r6
90006196:	f000 fb8b 	bl	900068b0 <WM_GetFirstChild>
9000619a:	4604      	mov	r4, r0
9000619c:	b14c      	cbz	r4, 900061b2 <WM_InvalidateWindowAndDescsEx+0x60>
9000619e:	4620      	mov	r0, r4
900061a0:	462a      	mov	r2, r5
900061a2:	a902      	add	r1, sp, #8
900061a4:	f7ff ffd5 	bl	90006152 <WM_InvalidateWindowAndDescsEx>
900061a8:	4620      	mov	r0, r4
900061aa:	f7fb fffd 	bl	900021a8 <GUI_ALLOC_h2p>
900061ae:	6a04      	ldr	r4, [r0, #32]
900061b0:	e7f4      	b.n	9000619c <WM_InvalidateWindowAndDescsEx+0x4a>
900061b2:	b005      	add	sp, #20
900061b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

900061b6 <WM__InvalidateRect>:
900061b6:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
900061ba:	4680      	mov	r8, r0
900061bc:	4617      	mov	r7, r2
900061be:	461d      	mov	r5, r3
900061c0:	460c      	mov	r4, r1
900061c2:	b381      	cbz	r1, 90006226 <WM__InvalidateRect+0x70>
900061c4:	4608      	mov	r0, r1
900061c6:	f7fb fff9 	bl	900021bc <GUI_ALLOC_LockH>
900061ca:	6a86      	ldr	r6, [r0, #40]	; 0x28
900061cc:	4602      	mov	r2, r0
900061ce:	9001      	str	r0, [sp, #4]
900061d0:	07b3      	lsls	r3, r6, #30
900061d2:	d525      	bpl.n	90006220 <WM__InvalidateRect+0x6a>
900061d4:	4641      	mov	r1, r8
900061d6:	a802      	add	r0, sp, #8
900061d8:	f7fc fdd3 	bl	90002d82 <GUI__IntersectRects>
900061dc:	b300      	cbz	r0, 90006220 <WM__InvalidateRect+0x6a>
900061de:	f640 0301 	movw	r3, #2049	; 0x801
900061e2:	4033      	ands	r3, r6
900061e4:	2b01      	cmp	r3, #1
900061e6:	d107      	bne.n	900061f8 <WM__InvalidateRect+0x42>
900061e8:	9901      	ldr	r1, [sp, #4]
900061ea:	462b      	mov	r3, r5
900061ec:	a802      	add	r0, sp, #8
900061ee:	6a0a      	ldr	r2, [r1, #32]
900061f0:	6989      	ldr	r1, [r1, #24]
900061f2:	f7ff ffe0 	bl	900061b6 <WM__InvalidateRect>
900061f6:	e004      	b.n	90006202 <WM__InvalidateRect+0x4c>
900061f8:	462a      	mov	r2, r5
900061fa:	a902      	add	r1, sp, #8
900061fc:	4620      	mov	r0, r4
900061fe:	f7ff ff55 	bl	900060ac <_Invalidate1Abs>
90006202:	9b01      	ldr	r3, [sp, #4]
90006204:	69dc      	ldr	r4, [r3, #28]
90006206:	b15c      	cbz	r4, 90006220 <WM__InvalidateRect+0x6a>
90006208:	42bc      	cmp	r4, r7
9000620a:	d009      	beq.n	90006220 <WM__InvalidateRect+0x6a>
9000620c:	4620      	mov	r0, r4
9000620e:	462a      	mov	r2, r5
90006210:	a902      	add	r1, sp, #8
90006212:	f7ff ff9e 	bl	90006152 <WM_InvalidateWindowAndDescsEx>
90006216:	4620      	mov	r0, r4
90006218:	f7fb ffc6 	bl	900021a8 <GUI_ALLOC_h2p>
9000621c:	6a04      	ldr	r4, [r0, #32]
9000621e:	e7f2      	b.n	90006206 <WM__InvalidateRect+0x50>
90006220:	a801      	add	r0, sp, #4
90006222:	f7fb ffd9 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006226:	b004      	add	sp, #16
90006228:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000622c <WM__InvalidateRectEx>:
9000622c:	2320      	movs	r3, #32
9000622e:	f7ff bfc2 	b.w	900061b6 <WM__InvalidateRect>

90006232 <WM_InvalidateRect>:
90006232:	b5f0      	push	{r4, r5, r6, r7, lr}
90006234:	460f      	mov	r7, r1
90006236:	b087      	sub	sp, #28
90006238:	4605      	mov	r5, r0
9000623a:	2800      	cmp	r0, #0
9000623c:	d033      	beq.n	900062a6 <WM_InvalidateRect+0x74>
9000623e:	f7fb ffbd 	bl	900021bc <GUI_ALLOC_LockH>
90006242:	6a86      	ldr	r6, [r0, #40]	; 0x28
90006244:	9001      	str	r0, [sp, #4]
90006246:	07b2      	lsls	r2, r6, #30
90006248:	d52a      	bpl.n	900062a0 <WM_InvalidateRect+0x6e>
9000624a:	ac04      	add	r4, sp, #16
9000624c:	03f3      	lsls	r3, r6, #15
9000624e:	c803      	ldmia	r0, {r0, r1}
90006250:	e884 0003 	stmia.w	r4, {r0, r1}
90006254:	d502      	bpl.n	9000625c <WM_InvalidateRect+0x2a>
90006256:	4628      	mov	r0, r5
90006258:	f7ff fec4 	bl	90005fe4 <WM__InvalidateDrawAndDescs>
9000625c:	b15f      	cbz	r7, 90006276 <WM_InvalidateRect+0x44>
9000625e:	6838      	ldr	r0, [r7, #0]
90006260:	ab02      	add	r3, sp, #8
90006262:	6879      	ldr	r1, [r7, #4]
90006264:	c303      	stmia	r3!, {r0, r1}
90006266:	a902      	add	r1, sp, #8
90006268:	9801      	ldr	r0, [sp, #4]
9000626a:	f7ff fe67 	bl	90005f3c <WM__Client2Screen>
9000626e:	a902      	add	r1, sp, #8
90006270:	4620      	mov	r0, r4
90006272:	f7fc fd69 	bl	90002d48 <GUI__IntersectRect>
90006276:	4629      	mov	r1, r5
90006278:	4620      	mov	r0, r4
9000627a:	f7ff fddd 	bl	90005e38 <WM__ClipAtParentBorders>
9000627e:	b178      	cbz	r0, 900062a0 <WM_InvalidateRect+0x6e>
90006280:	f640 0301 	movw	r3, #2049	; 0x801
90006284:	4033      	ands	r3, r6
90006286:	2b01      	cmp	r3, #1
90006288:	d106      	bne.n	90006298 <WM_InvalidateRect+0x66>
9000628a:	9b01      	ldr	r3, [sp, #4]
9000628c:	4620      	mov	r0, r4
9000628e:	6a1a      	ldr	r2, [r3, #32]
90006290:	6999      	ldr	r1, [r3, #24]
90006292:	f7ff ffcb 	bl	9000622c <WM__InvalidateRectEx>
90006296:	e003      	b.n	900062a0 <WM_InvalidateRect+0x6e>
90006298:	4621      	mov	r1, r4
9000629a:	4628      	mov	r0, r5
9000629c:	f7ff ff56 	bl	9000614c <WM__Invalidate1Abs>
900062a0:	a801      	add	r0, sp, #4
900062a2:	f7fb ff99 	bl	900021d8 <GUI_ALLOC_UnlockH>
900062a6:	b007      	add	sp, #28
900062a8:	bdf0      	pop	{r4, r5, r6, r7, pc}

900062aa <WM_InvalidateWindow>:
900062aa:	2100      	movs	r1, #0
900062ac:	f7ff bfc1 	b.w	90006232 <WM_InvalidateRect>

900062b0 <WM__SelectTopLevelLayer>:
900062b0:	b508      	push	{r3, lr}
900062b2:	f7ff fee7 	bl	90006084 <WM__GetTopLevelLayer>
900062b6:	2800      	cmp	r0, #0
900062b8:	db03      	blt.n	900062c2 <WM__SelectTopLevelLayer+0x12>
900062ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900062be:	f000 beb5 	b.w	9000702c <GUI_SelectLayer>
900062c2:	bd08      	pop	{r3, pc}

900062c4 <WM_SelectWindow>:
900062c4:	4b0d      	ldr	r3, [pc, #52]	; (900062fc <WM_SelectWindow+0x38>)
900062c6:	681a      	ldr	r2, [r3, #0]
900062c8:	b570      	push	{r4, r5, r6, lr}
900062ca:	6c96      	ldr	r6, [r2, #72]	; 0x48
900062cc:	4604      	mov	r4, r0
900062ce:	461d      	mov	r5, r3
900062d0:	b908      	cbnz	r0, 900062d6 <WM_SelectWindow+0x12>
900062d2:	4b0b      	ldr	r3, [pc, #44]	; (90006300 <WM_SelectWindow+0x3c>)
900062d4:	681c      	ldr	r4, [r3, #0]
900062d6:	6494      	str	r4, [r2, #72]	; 0x48
900062d8:	4620      	mov	r0, r4
900062da:	f7ff ffe9 	bl	900062b0 <WM__SelectTopLevelLayer>
900062de:	f7fd f849 	bl	90003374 <LCD_SetClipRectMax>
900062e2:	4620      	mov	r0, r4
900062e4:	f7fb ff60 	bl	900021a8 <GUI_ALLOC_h2p>
900062e8:	682b      	ldr	r3, [r5, #0]
900062ea:	f9b0 2000 	ldrsh.w	r2, [r0]
900062ee:	64da      	str	r2, [r3, #76]	; 0x4c
900062f0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900062f4:	4630      	mov	r0, r6
900062f6:	651a      	str	r2, [r3, #80]	; 0x50
900062f8:	bd70      	pop	{r4, r5, r6, pc}
900062fa:	bf00      	nop
900062fc:	200000a4 	.word	0x200000a4
90006300:	20025c3c 	.word	0x20025c3c

90006304 <WM_CreateWindowAsChild>:
90006304:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006308:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
9000630c:	4698      	mov	r8, r3
9000630e:	4b4e      	ldr	r3, [pc, #312]	; (90006448 <WM_CreateWindowAsChild+0x144>)
90006310:	4605      	mov	r5, r0
90006312:	460e      	mov	r6, r1
90006314:	4617      	mov	r7, r2
90006316:	f8d3 9000 	ldr.w	r9, [r3]
9000631a:	f1ba 0f00 	cmp.w	sl, #0
9000631e:	d128      	bne.n	90006372 <WM_CreateWindowAsChild+0x6e>
90006320:	4b4a      	ldr	r3, [pc, #296]	; (9000644c <WM_CreateWindowAsChild+0x148>)
90006322:	881b      	ldrh	r3, [r3, #0]
90006324:	b353      	cbz	r3, 9000637c <WM_CreateWindowAsChild+0x78>
90006326:	4b4a      	ldr	r3, [pc, #296]	; (90006450 <WM_CreateWindowAsChild+0x14c>)
90006328:	681b      	ldr	r3, [r3, #0]
9000632a:	7c5a      	ldrb	r2, [r3, #17]
9000632c:	4b49      	ldr	r3, [pc, #292]	; (90006454 <WM_CreateWindowAsChild+0x150>)
9000632e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
90006332:	1c5a      	adds	r2, r3, #1
90006334:	2a01      	cmp	r2, #1
90006336:	d921      	bls.n	9000637c <WM_CreateWindowAsChild+0x78>
90006338:	469a      	mov	sl, r3
9000633a:	4650      	mov	r0, sl
9000633c:	f7fb ff3e 	bl	900021bc <GUI_ALLOC_LockH>
90006340:	f9b0 1000 	ldrsh.w	r1, [r0]
90006344:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90006348:	9001      	str	r0, [sp, #4]
9000634a:	440d      	add	r5, r1
9000634c:	4416      	add	r6, r2
9000634e:	b91f      	cbnz	r7, 90006358 <WM_CreateWindowAsChild+0x54>
90006350:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90006354:	1a5f      	subs	r7, r3, r1
90006356:	3701      	adds	r7, #1
90006358:	f1b8 0f00 	cmp.w	r8, #0
9000635c:	d105      	bne.n	9000636a <WM_CreateWindowAsChild+0x66>
9000635e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90006362:	ebc2 0803 	rsb	r8, r2, r3
90006366:	f108 0801 	add.w	r8, r8, #1
9000636a:	a801      	add	r0, sp, #4
9000636c:	f7fb ff34 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006370:	e004      	b.n	9000637c <WM_CreateWindowAsChild+0x78>
90006372:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
90006376:	d1e0      	bne.n	9000633a <WM_CreateWindowAsChild+0x36>
90006378:	f04f 0a00 	mov.w	sl, #0
9000637c:	980f      	ldr	r0, [sp, #60]	; 0x3c
9000637e:	302c      	adds	r0, #44	; 0x2c
90006380:	f7fc f8ae 	bl	900024e0 <GUI_ALLOC_AllocZero>
90006384:	4604      	mov	r4, r0
90006386:	2800      	cmp	r0, #0
90006388:	d059      	beq.n	9000643e <WM_CreateWindowAsChild+0x13a>
9000638a:	4a30      	ldr	r2, [pc, #192]	; (9000644c <WM_CreateWindowAsChild+0x148>)
9000638c:	f10d 0b08 	add.w	fp, sp, #8
90006390:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90006392:	ea49 0903 	orr.w	r9, r9, r3
90006396:	8813      	ldrh	r3, [r2, #0]
90006398:	3301      	adds	r3, #1
9000639a:	8013      	strh	r3, [r2, #0]
9000639c:	f7fb ff0e 	bl	900021bc <GUI_ALLOC_LockH>
900063a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900063a2:	f84b 0d08 	str.w	r0, [fp, #-8]!
900063a6:	6103      	str	r3, [r0, #16]
900063a8:	4b2b      	ldr	r3, [pc, #172]	; (90006458 <WM_CreateWindowAsChild+0x154>)
900063aa:	6a82      	ldr	r2, [r0, #40]	; 0x28
900063ac:	8005      	strh	r5, [r0, #0]
900063ae:	ea09 0303 	and.w	r3, r9, r3
900063b2:	8046      	strh	r6, [r0, #2]
900063b4:	443d      	add	r5, r7
900063b6:	4446      	add	r6, r8
900063b8:	4313      	orrs	r3, r2
900063ba:	3d01      	subs	r5, #1
900063bc:	3e01      	subs	r6, #1
900063be:	6283      	str	r3, [r0, #40]	; 0x28
900063c0:	8085      	strh	r5, [r0, #4]
900063c2:	80c6      	strh	r6, [r0, #6]
900063c4:	4658      	mov	r0, fp
900063c6:	f7fb ff07 	bl	900021d8 <GUI_ALLOC_UnlockH>
900063ca:	4b24      	ldr	r3, [pc, #144]	; (9000645c <WM_CreateWindowAsChild+0x158>)
900063cc:	6818      	ldr	r0, [r3, #0]
900063ce:	b148      	cbz	r0, 900063e4 <WM_CreateWindowAsChild+0xe0>
900063d0:	f7fb feea 	bl	900021a8 <GUI_ALLOC_h2p>
900063d4:	4605      	mov	r5, r0
900063d6:	4620      	mov	r0, r4
900063d8:	f7fb fee6 	bl	900021a8 <GUI_ALLOC_h2p>
900063dc:	696b      	ldr	r3, [r5, #20]
900063de:	6143      	str	r3, [r0, #20]
900063e0:	616c      	str	r4, [r5, #20]
900063e2:	e000      	b.n	900063e6 <WM_CreateWindowAsChild+0xe2>
900063e4:	601c      	str	r4, [r3, #0]
900063e6:	4651      	mov	r1, sl
900063e8:	4620      	mov	r0, r4
900063ea:	f7ff fd51 	bl	90005e90 <WM__InsertWindowIntoList>
900063ee:	f019 0f20 	tst.w	r9, #32
900063f2:	d002      	beq.n	900063fa <WM_CreateWindowAsChild+0xf6>
900063f4:	4620      	mov	r0, r4
900063f6:	f7ff ff65 	bl	900062c4 <WM_SelectWindow>
900063fa:	f019 0f01 	tst.w	r9, #1
900063fe:	bf1f      	itttt	ne
90006400:	4a17      	ldrne	r2, [pc, #92]	; (90006460 <WM_CreateWindowAsChild+0x15c>)
90006402:	6813      	ldrne	r3, [r2, #0]
90006404:	3301      	addne	r3, #1
90006406:	6013      	strne	r3, [r2, #0]
90006408:	f019 0f40 	tst.w	r9, #64	; 0x40
9000640c:	d002      	beq.n	90006414 <WM_CreateWindowAsChild+0x110>
9000640e:	4620      	mov	r0, r4
90006410:	f000 fa5e 	bl	900068d0 <WM_BringToBottom>
90006414:	f019 0f02 	tst.w	r9, #2
90006418:	d00d      	beq.n	90006436 <WM_CreateWindowAsChild+0x132>
9000641a:	4620      	mov	r0, r4
9000641c:	f7fb fece 	bl	900021bc <GUI_ALLOC_LockH>
90006420:	6a83      	ldr	r3, [r0, #40]	; 0x28
90006422:	9000      	str	r0, [sp, #0]
90006424:	f043 0302 	orr.w	r3, r3, #2
90006428:	6283      	str	r3, [r0, #40]	; 0x28
9000642a:	4658      	mov	r0, fp
9000642c:	f7fb fed4 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006430:	4620      	mov	r0, r4
90006432:	f7ff ff3a 	bl	900062aa <WM_InvalidateWindow>
90006436:	2101      	movs	r1, #1
90006438:	4620      	mov	r0, r4
9000643a:	f7ff fe0c 	bl	90006056 <WM__SendMsgNoData>
9000643e:	4620      	mov	r0, r4
90006440:	b003      	add	sp, #12
90006442:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006446:	bf00      	nop
90006448:	20025c50 	.word	0x20025c50
9000644c:	20025c18 	.word	0x20025c18
90006450:	200000a4 	.word	0x200000a4
90006454:	20025c20 	.word	0x20025c20
90006458:	003f3f9f 	.word	0x003f3f9f
9000645c:	20025c3c 	.word	0x20025c3c
90006460:	20025c70 	.word	0x20025c70

90006464 <WM__GetNextIVR>:
90006464:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90006468:	4f5d      	ldr	r7, [pc, #372]	; (900065e0 <WM__GetNextIVR+0x17c>)
9000646a:	683b      	ldr	r3, [r7, #0]
9000646c:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
90006470:	2800      	cmp	r0, #0
90006472:	f000 80b1 	beq.w	900065d8 <WM__GetNextIVR+0x174>
90006476:	4a5b      	ldr	r2, [pc, #364]	; (900065e4 <WM__GetNextIVR+0x180>)
90006478:	6a13      	ldr	r3, [r2, #32]
9000647a:	4614      	mov	r4, r2
9000647c:	2b01      	cmp	r3, #1
9000647e:	dd03      	ble.n	90006488 <WM__GetNextIVR+0x24>
90006480:	3b01      	subs	r3, #1
90006482:	2000      	movs	r0, #0
90006484:	6213      	str	r3, [r2, #32]
90006486:	e0a7      	b.n	900065d8 <WM__GetNextIVR+0x174>
90006488:	69d3      	ldr	r3, [r2, #28]
9000648a:	f102 0614 	add.w	r6, r2, #20
9000648e:	ad02      	add	r5, sp, #8
90006490:	3301      	adds	r3, #1
90006492:	e896 0003 	ldmia.w	r6, {r0, r1}
90006496:	61d3      	str	r3, [r2, #28]
90006498:	e885 0003 	stmia.w	r5, {r0, r1}
9000649c:	b923      	cbnz	r3, 900064a8 <WM__GetNextIVR+0x44>
9000649e:	8993      	ldrh	r3, [r2, #12]
900064a0:	f8ad 3008 	strh.w	r3, [sp, #8]
900064a4:	89d3      	ldrh	r3, [r2, #14]
900064a6:	e010      	b.n	900064ca <WM__GetNextIVR+0x66>
900064a8:	8b13      	ldrh	r3, [r2, #24]
900064aa:	8ad2      	ldrh	r2, [r2, #22]
900064ac:	3301      	adds	r3, #1
900064ae:	f8ad 200a 	strh.w	r2, [sp, #10]
900064b2:	b21b      	sxth	r3, r3
900064b4:	f9b4 2010 	ldrsh.w	r2, [r4, #16]
900064b8:	429a      	cmp	r2, r3
900064ba:	f8ad 3008 	strh.w	r3, [sp, #8]
900064be:	da06      	bge.n	900064ce <WM__GetNextIVR+0x6a>
900064c0:	89a3      	ldrh	r3, [r4, #12]
900064c2:	f8ad 3008 	strh.w	r3, [sp, #8]
900064c6:	8b63      	ldrh	r3, [r4, #26]
900064c8:	3301      	adds	r3, #1
900064ca:	f8ad 300a 	strh.w	r3, [sp, #10]
900064ce:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
900064d2:	f9b4 3012 	ldrsh.w	r3, [r4, #18]
900064d6:	f8df 810c 	ldr.w	r8, [pc, #268]	; 900065e4 <WM__GetNextIVR+0x180>
900064da:	429a      	cmp	r2, r3
900064dc:	dd04      	ble.n	900064e8 <WM__GetNextIVR+0x84>
900064de:	6a23      	ldr	r3, [r4, #32]
900064e0:	2000      	movs	r0, #0
900064e2:	3b01      	subs	r3, #1
900064e4:	6223      	str	r3, [r4, #32]
900064e6:	e077      	b.n	900065d8 <WM__GetNextIVR+0x174>
900064e8:	683b      	ldr	r3, [r7, #0]
900064ea:	6c98      	ldr	r0, [r3, #72]	; 0x48
900064ec:	f7fb fe66 	bl	900021bc <GUI_ALLOC_LockH>
900064f0:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
900064f4:	f9b8 300c 	ldrsh.w	r3, [r8, #12]
900064f8:	9001      	str	r0, [sp, #4]
900064fa:	429a      	cmp	r2, r3
900064fc:	d11c      	bne.n	90006538 <WM__GetNextIVR+0xd4>
900064fe:	f8b8 3012 	ldrh.w	r3, [r8, #18]
90006502:	f8ad 300e 	strh.w	r3, [sp, #14]
90006506:	f8b8 3010 	ldrh.w	r3, [r8, #16]
9000650a:	f8ad 300c 	strh.w	r3, [sp, #12]
9000650e:	4b34      	ldr	r3, [pc, #208]	; (900065e0 <WM__GetNextIVR+0x17c>)
90006510:	681b      	ldr	r3, [r3, #0]
90006512:	6c9a      	ldr	r2, [r3, #72]	; 0x48
90006514:	b15a      	cbz	r2, 9000652e <WM__GetNextIVR+0xca>
90006516:	4610      	mov	r0, r2
90006518:	f7fb fe46 	bl	900021a8 <GUI_ALLOC_h2p>
9000651c:	4680      	mov	r8, r0
9000651e:	2200      	movs	r2, #0
90006520:	4629      	mov	r1, r5
90006522:	6a00      	ldr	r0, [r0, #32]
90006524:	f7ff fbb8 	bl	90005c98 <_Findy1>
90006528:	f8d8 2018 	ldr.w	r2, [r8, #24]
9000652c:	e7f2      	b.n	90006514 <WM__GetNextIVR+0xb0>
9000652e:	9b01      	ldr	r3, [sp, #4]
90006530:	4629      	mov	r1, r5
90006532:	69d8      	ldr	r0, [r3, #28]
90006534:	f7ff fbb0 	bl	90005c98 <_Findy1>
90006538:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9000653c:	f8ad 300c 	strh.w	r3, [sp, #12]
90006540:	683b      	ldr	r3, [r7, #0]
90006542:	6c9a      	ldr	r2, [r3, #72]	; 0x48
90006544:	b16a      	cbz	r2, 90006562 <WM__GetNextIVR+0xfe>
90006546:	4610      	mov	r0, r2
90006548:	f7fb fe2e 	bl	900021a8 <GUI_ALLOC_h2p>
9000654c:	2200      	movs	r2, #0
9000654e:	4680      	mov	r8, r0
90006550:	4629      	mov	r1, r5
90006552:	6a00      	ldr	r0, [r0, #32]
90006554:	f7ff fbf3 	bl	90005d3e <_Findx0>
90006558:	2800      	cmp	r0, #0
9000655a:	d1ed      	bne.n	90006538 <WM__GetNextIVR+0xd4>
9000655c:	f8d8 2018 	ldr.w	r2, [r8, #24]
90006560:	e7f0      	b.n	90006544 <WM__GetNextIVR+0xe0>
90006562:	9b01      	ldr	r3, [sp, #4]
90006564:	4629      	mov	r1, r5
90006566:	69d8      	ldr	r0, [r3, #28]
90006568:	f7ff fbe9 	bl	90005d3e <_Findx0>
9000656c:	2800      	cmp	r0, #0
9000656e:	d1e3      	bne.n	90006538 <WM__GetNextIVR+0xd4>
90006570:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90006574:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
90006578:	f8ad 300c 	strh.w	r3, [sp, #12]
9000657c:	429a      	cmp	r2, r3
9000657e:	dd07      	ble.n	90006590 <WM__GetNextIVR+0x12c>
90006580:	e895 0003 	ldmia.w	r5, {r0, r1}
90006584:	e886 0003 	stmia.w	r6, {r0, r1}
90006588:	a801      	add	r0, sp, #4
9000658a:	f7fb fe25 	bl	900021d8 <GUI_ALLOC_UnlockH>
9000658e:	e797      	b.n	900064c0 <WM__GetNextIVR+0x5c>
90006590:	683b      	ldr	r3, [r7, #0]
90006592:	6c9a      	ldr	r2, [r3, #72]	; 0x48
90006594:	b152      	cbz	r2, 900065ac <WM__GetNextIVR+0x148>
90006596:	4610      	mov	r0, r2
90006598:	f7fb fe06 	bl	900021a8 <GUI_ALLOC_h2p>
9000659c:	4607      	mov	r7, r0
9000659e:	2200      	movs	r2, #0
900065a0:	4629      	mov	r1, r5
900065a2:	6a00      	ldr	r0, [r0, #32]
900065a4:	f7ff fc0e 	bl	90005dc4 <_Findx1>
900065a8:	69ba      	ldr	r2, [r7, #24]
900065aa:	e7f3      	b.n	90006594 <WM__GetNextIVR+0x130>
900065ac:	af04      	add	r7, sp, #16
900065ae:	4629      	mov	r1, r5
900065b0:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
900065b4:	69d8      	ldr	r0, [r3, #28]
900065b6:	f7ff fc05 	bl	90005dc4 <_Findx1>
900065ba:	4638      	mov	r0, r7
900065bc:	f7fb fe0c 	bl	900021d8 <GUI_ALLOC_UnlockH>
900065c0:	69e2      	ldr	r2, [r4, #28]
900065c2:	f644 6320 	movw	r3, #20000	; 0x4e20
900065c6:	429a      	cmp	r2, r3
900065c8:	dc89      	bgt.n	900064de <WM__GetNextIVR+0x7a>
900065ca:	e895 0003 	ldmia.w	r5, {r0, r1}
900065ce:	e886 0003 	stmia.w	r6, {r0, r1}
900065d2:	f7ff fce3 	bl	90005f9c <WM__ActivateClipRect>
900065d6:	2001      	movs	r0, #1
900065d8:	b004      	add	sp, #16
900065da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900065de:	bf00      	nop
900065e0:	200000a4 	.word	0x200000a4
900065e4:	20025aa8 	.word	0x20025aa8

900065e8 <WM__InitIVRSearch>:
900065e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900065ec:	4e39      	ldr	r6, [pc, #228]	; (900066d4 <WM__InitIVRSearch+0xec>)
900065ee:	b086      	sub	sp, #24
900065f0:	4680      	mov	r8, r0
900065f2:	6832      	ldr	r2, [r6, #0]
900065f4:	f892 3054 	ldrb.w	r3, [r2, #84]	; 0x54
900065f8:	b913      	cbnz	r3, 90006600 <WM__InitIVRSearch+0x18>
900065fa:	f7ff fccf 	bl	90005f9c <WM__ActivateClipRect>
900065fe:	e064      	b.n	900066ca <WM__InitIVRSearch+0xe2>
90006600:	4f35      	ldr	r7, [pc, #212]	; (900066d8 <WM__InitIVRSearch+0xf0>)
90006602:	6a3b      	ldr	r3, [r7, #32]
90006604:	463d      	mov	r5, r7
90006606:	3301      	adds	r3, #1
90006608:	2b01      	cmp	r3, #1
9000660a:	623b      	str	r3, [r7, #32]
9000660c:	dc5d      	bgt.n	900066ca <WM__InitIVRSearch+0xe2>
9000660e:	6c90      	ldr	r0, [r2, #72]	; 0x48
90006610:	f7fb fdd4 	bl	900021bc <GUI_ALLOC_LockH>
90006614:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
90006618:	9000      	str	r0, [sp, #0]
9000661a:	61fb      	str	r3, [r7, #28]
9000661c:	4b2f      	ldr	r3, [pc, #188]	; (900066dc <WM__InitIVRSearch+0xf4>)
9000661e:	781b      	ldrb	r3, [r3, #0]
90006620:	b113      	cbz	r3, 90006628 <WM__InitIVRSearch+0x40>
90006622:	ab02      	add	r3, sp, #8
90006624:	3008      	adds	r0, #8
90006626:	e004      	b.n	90006632 <WM__InitIVRSearch+0x4a>
90006628:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000662a:	f013 0402 	ands.w	r4, r3, #2
9000662e:	d00c      	beq.n	9000664a <WM__InitIVRSearch+0x62>
90006630:	ab02      	add	r3, sp, #8
90006632:	ac02      	add	r4, sp, #8
90006634:	c803      	ldmia	r0, {r0, r1}
90006636:	e883 0003 	stmia.w	r3, {r0, r1}
9000663a:	f1b8 0f00 	cmp.w	r8, #0
9000663e:	d00c      	beq.n	9000665a <WM__InitIVRSearch+0x72>
90006640:	4641      	mov	r1, r8
90006642:	4620      	mov	r0, r4
90006644:	f7fc fb80 	bl	90002d48 <GUI__IntersectRect>
90006648:	e007      	b.n	9000665a <WM__InitIVRSearch+0x72>
9000664a:	6a3b      	ldr	r3, [r7, #32]
9000664c:	4668      	mov	r0, sp
9000664e:	3b01      	subs	r3, #1
90006650:	623b      	str	r3, [r7, #32]
90006652:	f7fb fdc1 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006656:	4620      	mov	r0, r4
90006658:	e038      	b.n	900066cc <WM__InitIVRSearch+0xe4>
9000665a:	6833      	ldr	r3, [r6, #0]
9000665c:	4f20      	ldr	r7, [pc, #128]	; (900066e0 <WM__InitIVRSearch+0xf8>)
9000665e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
90006660:	b1c2      	cbz	r2, 90006694 <WM__InitIVRSearch+0xac>
90006662:	9b00      	ldr	r3, [sp, #0]
90006664:	6810      	ldr	r0, [r2, #0]
90006666:	9301      	str	r3, [sp, #4]
90006668:	ab04      	add	r3, sp, #16
9000666a:	6851      	ldr	r1, [r2, #4]
9000666c:	c303      	stmia	r3!, {r0, r1}
9000666e:	683b      	ldr	r3, [r7, #0]
90006670:	b133      	cbz	r3, 90006680 <WM__InitIVRSearch+0x98>
90006672:	a801      	add	r0, sp, #4
90006674:	f7fb fdb0 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006678:	6838      	ldr	r0, [r7, #0]
9000667a:	f7fb fd9f 	bl	900021bc <GUI_ALLOC_LockH>
9000667e:	9001      	str	r0, [sp, #4]
90006680:	a904      	add	r1, sp, #16
90006682:	9801      	ldr	r0, [sp, #4]
90006684:	f7ff fc5a 	bl	90005f3c <WM__Client2Screen>
90006688:	4620      	mov	r0, r4
9000668a:	a904      	add	r1, sp, #16
9000668c:	f7fc fb5c 	bl	90002d48 <GUI__IntersectRect>
90006690:	a801      	add	r0, sp, #4
90006692:	e000      	b.n	90006696 <WM__InitIVRSearch+0xae>
90006694:	4668      	mov	r0, sp
90006696:	f7fb fd9f 	bl	900021d8 <GUI_ALLOC_UnlockH>
9000669a:	6839      	ldr	r1, [r7, #0]
9000669c:	b119      	cbz	r1, 900066a6 <WM__InitIVRSearch+0xbe>
9000669e:	4620      	mov	r0, r4
900066a0:	f7ff fbca 	bl	90005e38 <WM__ClipAtParentBorders>
900066a4:	b128      	cbz	r0, 900066b2 <WM__InitIVRSearch+0xca>
900066a6:	6833      	ldr	r3, [r6, #0]
900066a8:	4620      	mov	r0, r4
900066aa:	6c99      	ldr	r1, [r3, #72]	; 0x48
900066ac:	f7ff fbc4 	bl	90005e38 <WM__ClipAtParentBorders>
900066b0:	b918      	cbnz	r0, 900066ba <WM__InitIVRSearch+0xd2>
900066b2:	6a2b      	ldr	r3, [r5, #32]
900066b4:	3b01      	subs	r3, #1
900066b6:	622b      	str	r3, [r5, #32]
900066b8:	e008      	b.n	900066cc <WM__InitIVRSearch+0xe4>
900066ba:	4b0a      	ldr	r3, [pc, #40]	; (900066e4 <WM__InitIVRSearch+0xfc>)
900066bc:	e894 0003 	ldmia.w	r4, {r0, r1}
900066c0:	e883 0003 	stmia.w	r3, {r0, r1}
900066c4:	f7ff fece 	bl	90006464 <WM__GetNextIVR>
900066c8:	e000      	b.n	900066cc <WM__InitIVRSearch+0xe4>
900066ca:	2001      	movs	r0, #1
900066cc:	b006      	add	sp, #24
900066ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900066d2:	bf00      	nop
900066d4:	200000a4 	.word	0x200000a4
900066d8:	20025aa8 	.word	0x20025aa8
900066dc:	20025c4c 	.word	0x20025c4c
900066e0:	20025c1c 	.word	0x20025c1c
900066e4:	20025ab4 	.word	0x20025ab4

900066e8 <WM_Activate>:
900066e8:	4b02      	ldr	r3, [pc, #8]	; (900066f4 <WM_Activate+0xc>)
900066ea:	2201      	movs	r2, #1
900066ec:	681b      	ldr	r3, [r3, #0]
900066ee:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
900066f2:	4770      	bx	lr
900066f4:	200000a4 	.word	0x200000a4

900066f8 <WM_DefaultProc>:
900066f8:	b510      	push	{r4, lr}
900066fa:	4604      	mov	r4, r0
900066fc:	6840      	ldr	r0, [r0, #4]
900066fe:	6823      	ldr	r3, [r4, #0]
90006700:	2b17      	cmp	r3, #23
90006702:	d010      	beq.n	90006726 <WM_DefaultProc+0x2e>
90006704:	dc07      	bgt.n	90006716 <WM_DefaultProc+0x1e>
90006706:	2b0e      	cmp	r3, #14
90006708:	d00f      	beq.n	9000672a <WM_DefaultProc+0x32>
9000670a:	2b14      	cmp	r3, #20
9000670c:	d115      	bne.n	9000673a <WM_DefaultProc+0x42>
9000670e:	68e1      	ldr	r1, [r4, #12]
90006710:	f000 f97a 	bl	90006a08 <WM__GetClientRectEx>
90006714:	e011      	b.n	9000673a <WM_DefaultProc+0x42>
90006716:	2b22      	cmp	r3, #34	; 0x22
90006718:	d00c      	beq.n	90006734 <WM_DefaultProc+0x3c>
9000671a:	2b28      	cmp	r3, #40	; 0x28
9000671c:	d10d      	bne.n	9000673a <WM_DefaultProc+0x42>
9000671e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90006722:	f7ff bdc2 	b.w	900062aa <WM_InvalidateWindow>
90006726:	60e0      	str	r0, [r4, #12]
90006728:	bd10      	pop	{r4, pc}
9000672a:	4621      	mov	r1, r4
9000672c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90006730:	f000 b911 	b.w	90006956 <WM_SendToParent>
90006734:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
90006738:	e000      	b.n	9000673c <WM_DefaultProc+0x44>
9000673a:	2300      	movs	r3, #0
9000673c:	60e3      	str	r3, [r4, #12]
9000673e:	bd10      	pop	{r4, pc}

90006740 <_cbBackWin>:
90006740:	6803      	ldr	r3, [r0, #0]
90006742:	2b0e      	cmp	r3, #14
90006744:	b510      	push	{r4, lr}
90006746:	4604      	mov	r4, r0
90006748:	d002      	beq.n	90006750 <_cbBackWin+0x10>
9000674a:	2b0f      	cmp	r3, #15
9000674c:	d009      	beq.n	90006762 <_cbBackWin+0x22>
9000674e:	e020      	b.n	90006792 <_cbBackWin+0x52>
90006750:	68c3      	ldr	r3, [r0, #12]
90006752:	685a      	ldr	r2, [r3, #4]
90006754:	2a01      	cmp	r2, #1
90006756:	d121      	bne.n	9000679c <_cbBackWin+0x5c>
90006758:	6818      	ldr	r0, [r3, #0]
9000675a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000675e:	f7fc bab3 	b.w	90002cc8 <GUI_StoreKey>
90006762:	4a0f      	ldr	r2, [pc, #60]	; (900067a0 <_cbBackWin+0x60>)
90006764:	6843      	ldr	r3, [r0, #4]
90006766:	6811      	ldr	r1, [r2, #0]
90006768:	428b      	cmp	r3, r1
9000676a:	d006      	beq.n	9000677a <_cbBackWin+0x3a>
9000676c:	6852      	ldr	r2, [r2, #4]
9000676e:	4293      	cmp	r3, r2
90006770:	bf0c      	ite	eq
90006772:	2301      	moveq	r3, #1
90006774:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
90006778:	e000      	b.n	9000677c <_cbBackWin+0x3c>
9000677a:	2300      	movs	r3, #0
9000677c:	4a09      	ldr	r2, [pc, #36]	; (900067a4 <_cbBackWin+0x64>)
9000677e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90006782:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
90006786:	4298      	cmp	r0, r3
90006788:	d003      	beq.n	90006792 <_cbBackWin+0x52>
9000678a:	f7fb ff6d 	bl	90002668 <GUI_SetBkColor>
9000678e:	f7fc f82d 	bl	900027ec <GUI_Clear>
90006792:	4620      	mov	r0, r4
90006794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90006798:	f7ff bfae 	b.w	900066f8 <WM_DefaultProc>
9000679c:	bd10      	pop	{r4, pc}
9000679e:	bf00      	nop
900067a0:	20025c20 	.word	0x20025c20
900067a4:	20025c54 	.word	0x20025c54

900067a8 <WM_Init>:
900067a8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
900067ac:	4d2a      	ldr	r5, [pc, #168]	; (90006858 <WM_Init+0xb0>)
900067ae:	7828      	ldrb	r0, [r5, #0]
900067b0:	2800      	cmp	r0, #0
900067b2:	d14d      	bne.n	90006850 <WM_Init+0xa8>
900067b4:	4b29      	ldr	r3, [pc, #164]	; (9000685c <WM_Init+0xb4>)
900067b6:	4604      	mov	r4, r0
900067b8:	4e29      	ldr	r6, [pc, #164]	; (90006860 <WM_Init+0xb8>)
900067ba:	6018      	str	r0, [r3, #0]
900067bc:	4b29      	ldr	r3, [pc, #164]	; (90006864 <WM_Init+0xbc>)
900067be:	4f2a      	ldr	r7, [pc, #168]	; (90006868 <WM_Init+0xc0>)
900067c0:	681b      	ldr	r3, [r3, #0]
900067c2:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 90006894 <WM_Init+0xec>
900067c6:	6458      	str	r0, [r3, #68]	; 0x44
900067c8:	4b28      	ldr	r3, [pc, #160]	; (9000686c <WM_Init+0xc4>)
900067ca:	60a8      	str	r0, [r5, #8]
900067cc:	8018      	strh	r0, [r3, #0]
900067ce:	4b28      	ldr	r3, [pc, #160]	; (90006870 <WM_Init+0xc8>)
900067d0:	8018      	strh	r0, [r3, #0]
900067d2:	4620      	mov	r0, r4
900067d4:	f7fc f93e 	bl	90002a54 <GUI_DEVICE__GetpDriver>
900067d8:	b1a8      	cbz	r0, 90006806 <WM_Init+0x5e>
900067da:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
900067de:	2302      	movs	r3, #2
900067e0:	2100      	movs	r1, #0
900067e2:	9602      	str	r6, [sp, #8]
900067e4:	e88d 000c 	stmia.w	sp, {r2, r3}
900067e8:	f643 73ff 	movw	r3, #16383	; 0x3fff
900067ec:	9103      	str	r1, [sp, #12]
900067ee:	4608      	mov	r0, r1
900067f0:	461a      	mov	r2, r3
900067f2:	f7ff fd87 	bl	90006304 <WM_CreateWindowAsChild>
900067f6:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
900067fa:	f847 0024 	str.w	r0, [r7, r4, lsl #2]
900067fe:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
90006802:	f7ff fd52 	bl	900062aa <WM_InvalidateWindow>
90006806:	3401      	adds	r4, #1
90006808:	2c02      	cmp	r4, #2
9000680a:	d1e2      	bne.n	900067d2 <WM_Init+0x2a>
9000680c:	4819      	ldr	r0, [pc, #100]	; (90006874 <WM_Init+0xcc>)
9000680e:	f000 f8f3 	bl	900069f8 <WM__AddCriticalHandle>
90006812:	4819      	ldr	r0, [pc, #100]	; (90006878 <WM_Init+0xd0>)
90006814:	f000 f8f0 	bl	900069f8 <WM__AddCriticalHandle>
90006818:	4818      	ldr	r0, [pc, #96]	; (9000687c <WM_Init+0xd4>)
9000681a:	f000 f8ed 	bl	900069f8 <WM__AddCriticalHandle>
9000681e:	4818      	ldr	r0, [pc, #96]	; (90006880 <WM_Init+0xd8>)
90006820:	f000 f8ea 	bl	900069f8 <WM__AddCriticalHandle>
90006824:	4817      	ldr	r0, [pc, #92]	; (90006884 <WM_Init+0xdc>)
90006826:	f000 f8e7 	bl	900069f8 <WM__AddCriticalHandle>
9000682a:	4817      	ldr	r0, [pc, #92]	; (90006888 <WM_Init+0xe0>)
9000682c:	f000 f8e4 	bl	900069f8 <WM__AddCriticalHandle>
90006830:	4b0d      	ldr	r3, [pc, #52]	; (90006868 <WM_Init+0xc0>)
90006832:	6818      	ldr	r0, [r3, #0]
90006834:	f7ff fd46 	bl	900062c4 <WM_SelectWindow>
90006838:	f7ff ff56 	bl	900066e8 <WM_Activate>
9000683c:	2301      	movs	r3, #1
9000683e:	4813      	ldr	r0, [pc, #76]	; (9000688c <WM_Init+0xe4>)
90006840:	702b      	strb	r3, [r5, #0]
90006842:	4b13      	ldr	r3, [pc, #76]	; (90006890 <WM_Init+0xe8>)
90006844:	626b      	str	r3, [r5, #36]	; 0x24
90006846:	b004      	add	sp, #16
90006848:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9000684c:	f7fc b8ee 	b.w	90002a2c <GUI__RegisterExit>
90006850:	b004      	add	sp, #16
90006852:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90006856:	bf00      	nop
90006858:	20025aa8 	.word	0x20025aa8
9000685c:	20025c3c 	.word	0x20025c3c
90006860:	90006741 	.word	0x90006741
90006864:	200000a4 	.word	0x200000a4
90006868:	20025c20 	.word	0x20025c20
9000686c:	20025c38 	.word	0x20025c38
90006870:	20025c18 	.word	0x20025c18
90006874:	20025c94 	.word	0x20025c94
90006878:	20025c84 	.word	0x20025c84
9000687c:	20025c74 	.word	0x20025c74
90006880:	20025c9c 	.word	0x20025c9c
90006884:	20025c8c 	.word	0x20025c8c
90006888:	20025c7c 	.word	0x20025c7c
9000688c:	20025acc 	.word	0x20025acc
90006890:	90005bf5 	.word	0x90005bf5
90006894:	20025c54 	.word	0x20025c54

90006898 <WM_GetDesktopWindow>:
90006898:	4b03      	ldr	r3, [pc, #12]	; (900068a8 <WM_GetDesktopWindow+0x10>)
9000689a:	681b      	ldr	r3, [r3, #0]
9000689c:	7c5a      	ldrb	r2, [r3, #17]
9000689e:	4b03      	ldr	r3, [pc, #12]	; (900068ac <WM_GetDesktopWindow+0x14>)
900068a0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900068a4:	4770      	bx	lr
900068a6:	bf00      	nop
900068a8:	200000a4 	.word	0x200000a4
900068ac:	20025c20 	.word	0x20025c20

900068b0 <WM_GetFirstChild>:
900068b0:	b508      	push	{r3, lr}
900068b2:	4603      	mov	r3, r0
900068b4:	b110      	cbz	r0, 900068bc <WM_GetFirstChild+0xc>
900068b6:	f7fb fc77 	bl	900021a8 <GUI_ALLOC_h2p>
900068ba:	69c3      	ldr	r3, [r0, #28]
900068bc:	4618      	mov	r0, r3
900068be:	bd08      	pop	{r3, pc}

900068c0 <WM_GetParent>:
900068c0:	b508      	push	{r3, lr}
900068c2:	4603      	mov	r3, r0
900068c4:	b110      	cbz	r0, 900068cc <WM_GetParent+0xc>
900068c6:	f7fb fc6f 	bl	900021a8 <GUI_ALLOC_h2p>
900068ca:	6983      	ldr	r3, [r0, #24]
900068cc:	4618      	mov	r0, r3
900068ce:	bd08      	pop	{r3, pc}

900068d0 <WM_BringToBottom>:
900068d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900068d4:	4604      	mov	r4, r0
900068d6:	b087      	sub	sp, #28
900068d8:	2800      	cmp	r0, #0
900068da:	d039      	beq.n	90006950 <WM_BringToBottom+0x80>
900068dc:	f7fb fc6e 	bl	900021bc <GUI_ALLOC_LockH>
900068e0:	ad04      	add	r5, sp, #16
900068e2:	4603      	mov	r3, r0
900068e4:	9001      	str	r0, [sp, #4]
900068e6:	c803      	ldmia	r0, {r0, r1}
900068e8:	6a1e      	ldr	r6, [r3, #32]
900068ea:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
900068ee:	e885 0003 	stmia.w	r5, {r0, r1}
900068f2:	a801      	add	r0, sp, #4
900068f4:	f7fb fc70 	bl	900021d8 <GUI_ALLOC_UnlockH>
900068f8:	4620      	mov	r0, r4
900068fa:	f000 f84c 	bl	90006996 <WM__GetPrevSibling>
900068fe:	4607      	mov	r7, r0
90006900:	b330      	cbz	r0, 90006950 <WM_BringToBottom+0x80>
90006902:	4620      	mov	r0, r4
90006904:	f7ff ffdc 	bl	900068c0 <WM_GetParent>
90006908:	f019 0f02 	tst.w	r9, #2
9000690c:	4680      	mov	r8, r0
9000690e:	d004      	beq.n	9000691a <WM_BringToBottom+0x4a>
90006910:	4601      	mov	r1, r0
90006912:	4632      	mov	r2, r6
90006914:	4628      	mov	r0, r5
90006916:	f7ff fc89 	bl	9000622c <WM__InvalidateRectEx>
9000691a:	4620      	mov	r0, r4
9000691c:	f7fb fc4e 	bl	900021bc <GUI_ALLOC_LockH>
90006920:	9001      	str	r0, [sp, #4]
90006922:	4640      	mov	r0, r8
90006924:	f7fb fc4a 	bl	900021bc <GUI_ALLOC_LockH>
90006928:	9003      	str	r0, [sp, #12]
9000692a:	4638      	mov	r0, r7
9000692c:	f7fb fc46 	bl	900021bc <GUI_ALLOC_LockH>
90006930:	9b03      	ldr	r3, [sp, #12]
90006932:	9a01      	ldr	r2, [sp, #4]
90006934:	69d9      	ldr	r1, [r3, #28]
90006936:	6206      	str	r6, [r0, #32]
90006938:	9002      	str	r0, [sp, #8]
9000693a:	a801      	add	r0, sp, #4
9000693c:	6211      	str	r1, [r2, #32]
9000693e:	61dc      	str	r4, [r3, #28]
90006940:	f7fb fc4a 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006944:	a803      	add	r0, sp, #12
90006946:	f7fb fc47 	bl	900021d8 <GUI_ALLOC_UnlockH>
9000694a:	a802      	add	r0, sp, #8
9000694c:	f7fb fc44 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006950:	b007      	add	sp, #28
90006952:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

90006956 <WM_SendToParent>:
90006956:	b538      	push	{r3, r4, r5, lr}
90006958:	4605      	mov	r5, r0
9000695a:	460c      	mov	r4, r1
9000695c:	b141      	cbz	r1, 90006970 <WM_SendToParent+0x1a>
9000695e:	f7ff ffaf 	bl	900068c0 <WM_GetParent>
90006962:	b128      	cbz	r0, 90006970 <WM_SendToParent+0x1a>
90006964:	60a5      	str	r5, [r4, #8]
90006966:	4621      	mov	r1, r4
90006968:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9000696c:	f000 b826 	b.w	900069bc <WM__SendMessage>
90006970:	bd38      	pop	{r3, r4, r5, pc}
	...

90006974 <WM_SetCreateFlags>:
90006974:	4b02      	ldr	r3, [pc, #8]	; (90006980 <WM_SetCreateFlags+0xc>)
90006976:	681a      	ldr	r2, [r3, #0]
90006978:	6018      	str	r0, [r3, #0]
9000697a:	4610      	mov	r0, r2
9000697c:	4770      	bx	lr
9000697e:	bf00      	nop
90006980:	20025c50 	.word	0x20025c50

90006984 <WM__GetFirstSibling>:
90006984:	b508      	push	{r3, lr}
90006986:	f7ff ff9b 	bl	900068c0 <WM_GetParent>
9000698a:	b118      	cbz	r0, 90006994 <WM__GetFirstSibling+0x10>
9000698c:	f7fb fc0c 	bl	900021a8 <GUI_ALLOC_h2p>
90006990:	69c0      	ldr	r0, [r0, #28]
90006992:	bd08      	pop	{r3, pc}
90006994:	bd08      	pop	{r3, pc}

90006996 <WM__GetPrevSibling>:
90006996:	b538      	push	{r3, r4, r5, lr}
90006998:	4605      	mov	r5, r0
9000699a:	f7ff fff3 	bl	90006984 <WM__GetFirstSibling>
9000699e:	4604      	mov	r4, r0
900069a0:	b154      	cbz	r4, 900069b8 <WM__GetPrevSibling+0x22>
900069a2:	42ac      	cmp	r4, r5
900069a4:	d007      	beq.n	900069b6 <WM__GetPrevSibling+0x20>
900069a6:	4620      	mov	r0, r4
900069a8:	f7fb fbfe 	bl	900021a8 <GUI_ALLOC_h2p>
900069ac:	6a03      	ldr	r3, [r0, #32]
900069ae:	429d      	cmp	r5, r3
900069b0:	d002      	beq.n	900069b8 <WM__GetPrevSibling+0x22>
900069b2:	461c      	mov	r4, r3
900069b4:	e7f4      	b.n	900069a0 <WM__GetPrevSibling+0xa>
900069b6:	2400      	movs	r4, #0
900069b8:	4620      	mov	r0, r4
900069ba:	bd38      	pop	{r3, r4, r5, pc}

900069bc <WM__SendMessage>:
900069bc:	b570      	push	{r4, r5, r6, lr}
900069be:	4c0d      	ldr	r4, [pc, #52]	; (900069f4 <WM__SendMessage+0x38>)
900069c0:	4606      	mov	r6, r0
900069c2:	460d      	mov	r5, r1
900069c4:	6823      	ldr	r3, [r4, #0]
900069c6:	2b13      	cmp	r3, #19
900069c8:	dc12      	bgt.n	900069f0 <WM__SendMessage+0x34>
900069ca:	f7fb fbed 	bl	900021a8 <GUI_ALLOC_h2p>
900069ce:	6902      	ldr	r2, [r0, #16]
900069d0:	606e      	str	r6, [r5, #4]
900069d2:	b142      	cbz	r2, 900069e6 <WM__SendMessage+0x2a>
900069d4:	6823      	ldr	r3, [r4, #0]
900069d6:	4628      	mov	r0, r5
900069d8:	3301      	adds	r3, #1
900069da:	6023      	str	r3, [r4, #0]
900069dc:	4790      	blx	r2
900069de:	6823      	ldr	r3, [r4, #0]
900069e0:	3b01      	subs	r3, #1
900069e2:	6023      	str	r3, [r4, #0]
900069e4:	bd70      	pop	{r4, r5, r6, pc}
900069e6:	4628      	mov	r0, r5
900069e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900069ec:	f7ff be84 	b.w	900066f8 <WM_DefaultProc>
900069f0:	bd70      	pop	{r4, r5, r6, pc}
900069f2:	bf00      	nop
900069f4:	20025ad8 	.word	0x20025ad8

900069f8 <WM__AddCriticalHandle>:
900069f8:	4b02      	ldr	r3, [pc, #8]	; (90006a04 <WM__AddCriticalHandle+0xc>)
900069fa:	681a      	ldr	r2, [r3, #0]
900069fc:	6002      	str	r2, [r0, #0]
900069fe:	6018      	str	r0, [r3, #0]
90006a00:	4770      	bx	lr
90006a02:	bf00      	nop
90006a04:	20025c5c 	.word	0x20025c5c

90006a08 <WM__GetClientRectEx>:
90006a08:	b537      	push	{r0, r1, r2, r4, r5, lr}
90006a0a:	460d      	mov	r5, r1
90006a0c:	b158      	cbz	r0, 90006a26 <WM__GetClientRectEx+0x1e>
90006a0e:	b151      	cbz	r1, 90006a26 <WM__GetClientRectEx+0x1e>
90006a10:	ac02      	add	r4, sp, #8
90006a12:	f7fb fbd3 	bl	900021bc <GUI_ALLOC_LockH>
90006a16:	4629      	mov	r1, r5
90006a18:	f844 0d04 	str.w	r0, [r4, #-4]!
90006a1c:	f7ff fb26 	bl	9000606c <WM__GetClientRectWin>
90006a20:	4620      	mov	r0, r4
90006a22:	f7fb fbd9 	bl	900021d8 <GUI_ALLOC_UnlockH>
90006a26:	b003      	add	sp, #12
90006a28:	bd30      	pop	{r4, r5, pc}

90006a2a <_GetIndexMask_0>:
90006a2a:	b508      	push	{r3, lr}
90006a2c:	f7fc fe56 	bl	900036dc <LCD_GetNumColors>
90006a30:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
90006a34:	d010      	beq.n	90006a58 <_GetIndexMask_0+0x2e>
90006a36:	287f      	cmp	r0, #127	; 0x7f
90006a38:	d810      	bhi.n	90006a5c <_GetIndexMask_0+0x32>
90006a3a:	283f      	cmp	r0, #63	; 0x3f
90006a3c:	d810      	bhi.n	90006a60 <_GetIndexMask_0+0x36>
90006a3e:	281f      	cmp	r0, #31
90006a40:	d810      	bhi.n	90006a64 <_GetIndexMask_0+0x3a>
90006a42:	280f      	cmp	r0, #15
90006a44:	d810      	bhi.n	90006a68 <_GetIndexMask_0+0x3e>
90006a46:	2807      	cmp	r0, #7
90006a48:	d810      	bhi.n	90006a6c <_GetIndexMask_0+0x42>
90006a4a:	2803      	cmp	r0, #3
90006a4c:	d810      	bhi.n	90006a70 <_GetIndexMask_0+0x46>
90006a4e:	2801      	cmp	r0, #1
90006a50:	bf94      	ite	ls
90006a52:	2000      	movls	r0, #0
90006a54:	2001      	movhi	r0, #1
90006a56:	e00c      	b.n	90006a72 <_GetIndexMask_0+0x48>
90006a58:	2008      	movs	r0, #8
90006a5a:	e00a      	b.n	90006a72 <_GetIndexMask_0+0x48>
90006a5c:	2007      	movs	r0, #7
90006a5e:	e008      	b.n	90006a72 <_GetIndexMask_0+0x48>
90006a60:	2006      	movs	r0, #6
90006a62:	e006      	b.n	90006a72 <_GetIndexMask_0+0x48>
90006a64:	2005      	movs	r0, #5
90006a66:	e004      	b.n	90006a72 <_GetIndexMask_0+0x48>
90006a68:	2004      	movs	r0, #4
90006a6a:	e002      	b.n	90006a72 <_GetIndexMask_0+0x48>
90006a6c:	2003      	movs	r0, #3
90006a6e:	e000      	b.n	90006a72 <_GetIndexMask_0+0x48>
90006a70:	2002      	movs	r0, #2
90006a72:	2301      	movs	r3, #1
90006a74:	fa03 f000 	lsl.w	r0, r3, r0
90006a78:	3801      	subs	r0, #1
90006a7a:	bd08      	pop	{r3, pc}

90006a7c <_Index2Color_0>:
90006a7c:	b538      	push	{r3, r4, r5, lr}
90006a7e:	4604      	mov	r4, r0
90006a80:	f7fc fe2c 	bl	900036dc <LCD_GetNumColors>
90006a84:	4605      	mov	r5, r0
90006a86:	f7fc fe47 	bl	90003718 <LCD_GetPalette>
90006a8a:	42a5      	cmp	r5, r4
90006a8c:	d903      	bls.n	90006a96 <_Index2Color_0+0x1a>
90006a8e:	b118      	cbz	r0, 90006a98 <_Index2Color_0+0x1c>
90006a90:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
90006a94:	bd38      	pop	{r3, r4, r5, pc}
90006a96:	2000      	movs	r0, #0
90006a98:	bd38      	pop	{r3, r4, r5, pc}

90006a9a <_Color2Index_0>:
90006a9a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90006a9e:	4681      	mov	r9, r0
90006aa0:	f7fc fe1c 	bl	900036dc <LCD_GetNumColors>
90006aa4:	4607      	mov	r7, r0
90006aa6:	f7fc fe37 	bl	90003718 <LCD_GetPalette>
90006aaa:	4606      	mov	r6, r0
90006aac:	b1e0      	cbz	r0, 90006ae8 <_Color2Index_0+0x4e>
90006aae:	2000      	movs	r0, #0
90006ab0:	f856 3020 	ldr.w	r3, [r6, r0, lsl #2]
90006ab4:	454b      	cmp	r3, r9
90006ab6:	d017      	beq.n	90006ae8 <_Color2Index_0+0x4e>
90006ab8:	3001      	adds	r0, #1
90006aba:	4287      	cmp	r7, r0
90006abc:	dcf8      	bgt.n	90006ab0 <_Color2Index_0+0x16>
90006abe:	2400      	movs	r4, #0
90006ac0:	f06f 487f 	mvn.w	r8, #4278190080	; 0xff000000
90006ac4:	4625      	mov	r5, r4
90006ac6:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
90006aca:	4648      	mov	r0, r9
90006acc:	f7fb fd20 	bl	90002510 <GUI_CalcColorDist>
90006ad0:	4580      	cmp	r8, r0
90006ad2:	bf88      	it	hi
90006ad4:	462c      	movhi	r4, r5
90006ad6:	f105 0501 	add.w	r5, r5, #1
90006ada:	bf88      	it	hi
90006adc:	4680      	movhi	r8, r0
90006ade:	42af      	cmp	r7, r5
90006ae0:	dcf1      	bgt.n	90006ac6 <_Color2Index_0+0x2c>
90006ae2:	4620      	mov	r0, r4
90006ae4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90006ae8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

90006aec <GUI_GetYAdjust>:
90006aec:	4b0a      	ldr	r3, [pc, #40]	; (90006b18 <GUI_GetYAdjust+0x2c>)
90006aee:	681a      	ldr	r2, [r3, #0]
90006af0:	8d93      	ldrh	r3, [r2, #44]	; 0x2c
90006af2:	f003 030c 	and.w	r3, r3, #12
90006af6:	2b08      	cmp	r3, #8
90006af8:	d007      	beq.n	90006b0a <GUI_GetYAdjust+0x1e>
90006afa:	2b0c      	cmp	r3, #12
90006afc:	d005      	beq.n	90006b0a <GUI_GetYAdjust+0x1e>
90006afe:	2b04      	cmp	r3, #4
90006b00:	d107      	bne.n	90006b12 <GUI_GetYAdjust+0x26>
90006b02:	69d3      	ldr	r3, [r2, #28]
90006b04:	7e18      	ldrb	r0, [r3, #24]
90006b06:	3801      	subs	r0, #1
90006b08:	4770      	bx	lr
90006b0a:	69d3      	ldr	r3, [r2, #28]
90006b0c:	7e18      	ldrb	r0, [r3, #24]
90006b0e:	0840      	lsrs	r0, r0, #1
90006b10:	4770      	bx	lr
90006b12:	2000      	movs	r0, #0
90006b14:	4770      	bx	lr
90006b16:	bf00      	nop
90006b18:	200000a4 	.word	0x200000a4

90006b1c <GUI_GetFontDistY>:
90006b1c:	4b02      	ldr	r3, [pc, #8]	; (90006b28 <GUI_GetFontDistY+0xc>)
90006b1e:	681b      	ldr	r3, [r3, #0]
90006b20:	69db      	ldr	r3, [r3, #28]
90006b22:	7e58      	ldrb	r0, [r3, #25]
90006b24:	4770      	bx	lr
90006b26:	bf00      	nop
90006b28:	200000a4 	.word	0x200000a4

90006b2c <GUI_GetCharDistX>:
90006b2c:	4b02      	ldr	r3, [pc, #8]	; (90006b38 <GUI_GetCharDistX+0xc>)
90006b2e:	2100      	movs	r1, #0
90006b30:	681b      	ldr	r3, [r3, #0]
90006b32:	69db      	ldr	r3, [r3, #28]
90006b34:	685b      	ldr	r3, [r3, #4]
90006b36:	4718      	bx	r3
90006b38:	200000a4 	.word	0x200000a4

90006b3c <GUI_GetCharDistXEx>:
90006b3c:	4b02      	ldr	r3, [pc, #8]	; (90006b48 <GUI_GetCharDistXEx+0xc>)
90006b3e:	681b      	ldr	r3, [r3, #0]
90006b40:	69db      	ldr	r3, [r3, #28]
90006b42:	685b      	ldr	r3, [r3, #4]
90006b44:	4718      	bx	r3
90006b46:	bf00      	nop
90006b48:	200000a4 	.word	0x200000a4

90006b4c <_Log2VisBuffered>:
90006b4c:	4770      	bx	lr
	...

90006b50 <_DispLine>:
90006b50:	b573      	push	{r0, r1, r4, r5, r6, lr}
90006b52:	4615      	mov	r5, r2
90006b54:	ab02      	add	r3, sp, #8
90006b56:	4a21      	ldr	r2, [pc, #132]	; (90006bdc <_DispLine+0x8c>)
90006b58:	4c21      	ldr	r4, [pc, #132]	; (90006be0 <_DispLine+0x90>)
90006b5a:	f843 1d08 	str.w	r1, [r3, #-8]!
90006b5e:	4619      	mov	r1, r3
90006b60:	9001      	str	r0, [sp, #4]
90006b62:	6812      	ldr	r2, [r2, #0]
90006b64:	4790      	blx	r2
90006b66:	6823      	ldr	r3, [r4, #0]
90006b68:	9001      	str	r0, [sp, #4]
90006b6a:	6958      	ldr	r0, [r3, #20]
90006b6c:	b940      	cbnz	r0, 90006b80 <_DispLine+0x30>
90006b6e:	2001      	movs	r0, #1
90006b70:	f000 fb98 	bl	900072a4 <GUI__ManageCache>
90006b74:	6822      	ldr	r2, [r4, #0]
90006b76:	69d3      	ldr	r3, [r2, #28]
90006b78:	695b      	ldr	r3, [r3, #20]
90006b7a:	b93b      	cbnz	r3, 90006b8c <_DispLine+0x3c>
90006b7c:	4d19      	ldr	r5, [pc, #100]	; (90006be4 <_DispLine+0x94>)
90006b7e:	e022      	b.n	90006bc6 <_DispLine+0x76>
90006b80:	4629      	mov	r1, r5
90006b82:	f7fb fd4b 	bl	9000261c <GUI_RectsIntersect>
90006b86:	2800      	cmp	r0, #0
90006b88:	d1f1      	bne.n	90006b6e <_DispLine+0x1e>
90006b8a:	e024      	b.n	90006bd6 <_DispLine+0x86>
90006b8c:	4c16      	ldr	r4, [pc, #88]	; (90006be8 <_DispLine+0x98>)
90006b8e:	689b      	ldr	r3, [r3, #8]
90006b90:	6821      	ldr	r1, [r4, #0]
90006b92:	b141      	cbz	r1, 90006ba6 <_DispLine+0x56>
90006b94:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	; 0x22
90006b98:	9801      	ldr	r0, [sp, #4]
90006b9a:	9900      	ldr	r1, [sp, #0]
90006b9c:	4798      	blx	r3
90006b9e:	6823      	ldr	r3, [r4, #0]
90006ba0:	4628      	mov	r0, r5
90006ba2:	4798      	blx	r3
90006ba4:	e014      	b.n	90006bd0 <_DispLine+0x80>
90006ba6:	9900      	ldr	r1, [sp, #0]
90006ba8:	9801      	ldr	r0, [sp, #4]
90006baa:	4798      	blx	r3
90006bac:	e010      	b.n	90006bd0 <_DispLine+0x80>
90006bae:	a801      	add	r0, sp, #4
90006bb0:	f7fc f892 	bl	90002cd8 <GUI_UC__GetCharCodeInc>
90006bb4:	6823      	ldr	r3, [r4, #0]
90006bb6:	4606      	mov	r6, r0
90006bb8:	69db      	ldr	r3, [r3, #28]
90006bba:	681b      	ldr	r3, [r3, #0]
90006bbc:	4798      	blx	r3
90006bbe:	682b      	ldr	r3, [r5, #0]
90006bc0:	b10b      	cbz	r3, 90006bc6 <_DispLine+0x76>
90006bc2:	4630      	mov	r0, r6
90006bc4:	4798      	blx	r3
90006bc6:	9b00      	ldr	r3, [sp, #0]
90006bc8:	3b01      	subs	r3, #1
90006bca:	2b00      	cmp	r3, #0
90006bcc:	9300      	str	r3, [sp, #0]
90006bce:	daee      	bge.n	90006bae <_DispLine+0x5e>
90006bd0:	2000      	movs	r0, #0
90006bd2:	f000 fb67 	bl	900072a4 <GUI__ManageCache>
90006bd6:	b002      	add	sp, #8
90006bd8:	bd70      	pop	{r4, r5, r6, pc}
90006bda:	bf00      	nop
90006bdc:	200000c0 	.word	0x200000c0
90006be0:	200000a4 	.word	0x200000a4
90006be4:	20025be0 	.word	0x20025be0
90006be8:	20025bd4 	.word	0x20025bd4

90006bec <GUI__GetLineNumChars>:
90006bec:	b537      	push	{r0, r1, r2, r4, r5, lr}
90006bee:	460d      	mov	r5, r1
90006bf0:	9001      	str	r0, [sp, #4]
90006bf2:	4604      	mov	r4, r0
90006bf4:	b188      	cbz	r0, 90006c1a <GUI__GetLineNumChars+0x2e>
90006bf6:	4b0a      	ldr	r3, [pc, #40]	; (90006c20 <GUI__GetLineNumChars+0x34>)
90006bf8:	681b      	ldr	r3, [r3, #0]
90006bfa:	69db      	ldr	r3, [r3, #28]
90006bfc:	695c      	ldr	r4, [r3, #20]
90006bfe:	b154      	cbz	r4, 90006c16 <GUI__GetLineNumChars+0x2a>
90006c00:	6864      	ldr	r4, [r4, #4]
90006c02:	b144      	cbz	r4, 90006c16 <GUI__GetLineNumChars+0x2a>
90006c04:	47a0      	blx	r4
90006c06:	e009      	b.n	90006c1c <GUI__GetLineNumChars+0x30>
90006c08:	a801      	add	r0, sp, #4
90006c0a:	f7fc f865 	bl	90002cd8 <GUI_UC__GetCharCodeInc>
90006c0e:	b120      	cbz	r0, 90006c1a <GUI__GetLineNumChars+0x2e>
90006c10:	280a      	cmp	r0, #10
90006c12:	d002      	beq.n	90006c1a <GUI__GetLineNumChars+0x2e>
90006c14:	3401      	adds	r4, #1
90006c16:	42ac      	cmp	r4, r5
90006c18:	dbf6      	blt.n	90006c08 <GUI__GetLineNumChars+0x1c>
90006c1a:	4620      	mov	r0, r4
90006c1c:	b003      	add	sp, #12
90006c1e:	bd30      	pop	{r4, r5, pc}
90006c20:	200000a4 	.word	0x200000a4

90006c24 <GUI__GetOverlap>:
90006c24:	b513      	push	{r0, r1, r4, lr}
90006c26:	2400      	movs	r4, #0
90006c28:	a902      	add	r1, sp, #8
90006c2a:	f841 4d04 	str.w	r4, [r1, #-4]!
90006c2e:	f7ff ff85 	bl	90006b3c <GUI_GetCharDistXEx>
90006c32:	9b01      	ldr	r3, [sp, #4]
90006c34:	4298      	cmp	r0, r3
90006c36:	bfb4      	ite	lt
90006c38:	1a18      	sublt	r0, r3, r0
90006c3a:	4620      	movge	r0, r4
90006c3c:	b002      	add	sp, #8
90006c3e:	bd10      	pop	{r4, pc}

90006c40 <GUI__GetLineDistX>:
90006c40:	b537      	push	{r0, r1, r2, r4, r5, lr}
90006c42:	4a15      	ldr	r2, [pc, #84]	; (90006c98 <GUI__GetLineDistX+0x58>)
90006c44:	ab02      	add	r3, sp, #8
90006c46:	9001      	str	r0, [sp, #4]
90006c48:	f843 1d08 	str.w	r1, [r3, #-8]!
90006c4c:	4619      	mov	r1, r3
90006c4e:	6812      	ldr	r2, [r2, #0]
90006c50:	4790      	blx	r2
90006c52:	9001      	str	r0, [sp, #4]
90006c54:	b1e8      	cbz	r0, 90006c92 <GUI__GetLineDistX+0x52>
90006c56:	4b11      	ldr	r3, [pc, #68]	; (90006c9c <GUI__GetLineDistX+0x5c>)
90006c58:	681b      	ldr	r3, [r3, #0]
90006c5a:	69db      	ldr	r3, [r3, #28]
90006c5c:	695c      	ldr	r4, [r3, #20]
90006c5e:	b10c      	cbz	r4, 90006c64 <GUI__GetLineDistX+0x24>
90006c60:	6824      	ldr	r4, [r4, #0]
90006c62:	b90c      	cbnz	r4, 90006c68 <GUI__GetLineDistX+0x28>
90006c64:	4625      	mov	r5, r4
90006c66:	e002      	b.n	90006c6e <GUI__GetLineDistX+0x2e>
90006c68:	9900      	ldr	r1, [sp, #0]
90006c6a:	47a0      	blx	r4
90006c6c:	e011      	b.n	90006c92 <GUI__GetLineDistX+0x52>
90006c6e:	9b00      	ldr	r3, [sp, #0]
90006c70:	3b01      	subs	r3, #1
90006c72:	2b00      	cmp	r3, #0
90006c74:	9300      	str	r3, [sp, #0]
90006c76:	db07      	blt.n	90006c88 <GUI__GetLineDistX+0x48>
90006c78:	a801      	add	r0, sp, #4
90006c7a:	f7fc f82d 	bl	90002cd8 <GUI_UC__GetCharCodeInc>
90006c7e:	4604      	mov	r4, r0
90006c80:	f7ff ff54 	bl	90006b2c <GUI_GetCharDistX>
90006c84:	4405      	add	r5, r0
90006c86:	e7f2      	b.n	90006c6e <GUI__GetLineDistX+0x2e>
90006c88:	4620      	mov	r0, r4
90006c8a:	f7ff ffcb 	bl	90006c24 <GUI__GetOverlap>
90006c8e:	4428      	add	r0, r5
90006c90:	e7ff      	b.n	90006c92 <GUI__GetLineDistX+0x52>
90006c92:	b003      	add	sp, #12
90006c94:	bd30      	pop	{r4, r5, pc}
90006c96:	bf00      	nop
90006c98:	200000c0 	.word	0x200000c0
90006c9c:	200000a4 	.word	0x200000a4

90006ca0 <GUI__DispLine>:
90006ca0:	4b27      	ldr	r3, [pc, #156]	; (90006d40 <GUI__DispLine+0xa0>)
90006ca2:	681b      	ldr	r3, [r3, #0]
90006ca4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90006ca6:	4605      	mov	r5, r0
90006ca8:	460e      	mov	r6, r1
90006caa:	b163      	cbz	r3, 90006cc6 <GUI__DispLine+0x26>
90006cac:	2000      	movs	r0, #0
90006cae:	f7ff fc9b 	bl	900065e8 <WM__InitIVRSearch>
90006cb2:	2800      	cmp	r0, #0
90006cb4:	d041      	beq.n	90006d3a <GUI__DispLine+0x9a>
90006cb6:	466a      	mov	r2, sp
90006cb8:	4631      	mov	r1, r6
90006cba:	4628      	mov	r0, r5
90006cbc:	f7ff ff48 	bl	90006b50 <_DispLine>
90006cc0:	f7ff fbd0 	bl	90006464 <WM__GetNextIVR>
90006cc4:	e7f5      	b.n	90006cb2 <GUI__DispLine+0x12>
90006cc6:	4c1f      	ldr	r4, [pc, #124]	; (90006d44 <GUI__DispLine+0xa4>)
90006cc8:	466b      	mov	r3, sp
90006cca:	6810      	ldr	r0, [r2, #0]
90006ccc:	6851      	ldr	r1, [r2, #4]
90006cce:	6822      	ldr	r2, [r4, #0]
90006cd0:	c303      	stmia	r3!, {r0, r1}
90006cd2:	f8b2 704c 	ldrh.w	r7, [r2, #76]	; 0x4c
90006cd6:	f8bd 3000 	ldrh.w	r3, [sp]
90006cda:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
90006cde:	443b      	add	r3, r7
90006ce0:	f8bd 1002 	ldrh.w	r1, [sp, #2]
90006ce4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90006ce8:	f8ad 3000 	strh.w	r3, [sp]
90006cec:	4401      	add	r1, r0
90006cee:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90006cf2:	443a      	add	r2, r7
90006cf4:	f8ad 1002 	strh.w	r1, [sp, #2]
90006cf8:	4403      	add	r3, r0
90006cfa:	4668      	mov	r0, sp
90006cfc:	f8ad 2004 	strh.w	r2, [sp, #4]
90006d00:	f8ad 3006 	strh.w	r3, [sp, #6]
90006d04:	f7ff fc70 	bl	900065e8 <WM__InitIVRSearch>
90006d08:	6823      	ldr	r3, [r4, #0]
90006d0a:	b940      	cbnz	r0, 90006d1e <GUI__DispLine+0x7e>
90006d0c:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
90006d0e:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
90006d10:	1a52      	subs	r2, r2, r1
90006d12:	6d19      	ldr	r1, [r3, #80]	; 0x50
90006d14:	845a      	strh	r2, [r3, #34]	; 0x22
90006d16:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
90006d18:	1a52      	subs	r2, r2, r1
90006d1a:	849a      	strh	r2, [r3, #36]	; 0x24
90006d1c:	e00d      	b.n	90006d3a <GUI__DispLine+0x9a>
90006d1e:	f8bd 2000 	ldrh.w	r2, [sp]
90006d22:	4631      	mov	r1, r6
90006d24:	4628      	mov	r0, r5
90006d26:	845a      	strh	r2, [r3, #34]	; 0x22
90006d28:	f8bd 2002 	ldrh.w	r2, [sp, #2]
90006d2c:	849a      	strh	r2, [r3, #36]	; 0x24
90006d2e:	466a      	mov	r2, sp
90006d30:	f7ff ff0e 	bl	90006b50 <_DispLine>
90006d34:	f7ff fb96 	bl	90006464 <WM__GetNextIVR>
90006d38:	e7e6      	b.n	90006d08 <GUI__DispLine+0x68>
90006d3a:	b003      	add	sp, #12
90006d3c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90006d3e:	bf00      	nop
90006d40:	20025bc0 	.word	0x20025bc0
90006d44:	200000a4 	.word	0x200000a4

90006d48 <GUIMONO_DispChar>:
90006d48:	4b4d      	ldr	r3, [pc, #308]	; (90006e80 <GUIMONO_DispChar+0x138>)
90006d4a:	681a      	ldr	r2, [r3, #0]
90006d4c:	69d1      	ldr	r1, [r2, #28]
90006d4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006d52:	69cc      	ldr	r4, [r1, #28]
90006d54:	b08b      	sub	sp, #44	; 0x2c
90006d56:	89a3      	ldrh	r3, [r4, #12]
90006d58:	4283      	cmp	r3, r0
90006d5a:	d808      	bhi.n	90006d6e <GUIMONO_DispChar+0x26>
90006d5c:	89e5      	ldrh	r5, [r4, #14]
90006d5e:	4285      	cmp	r5, r0
90006d60:	d305      	bcc.n	90006d6e <GUIMONO_DispChar+0x26>
90006d62:	6825      	ldr	r5, [r4, #0]
90006d64:	1ac3      	subs	r3, r0, r3
90006d66:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
90006d6a:	9506      	str	r5, [sp, #24]
90006d6c:	e013      	b.n	90006d96 <GUIMONO_DispChar+0x4e>
90006d6e:	68a3      	ldr	r3, [r4, #8]
90006d70:	2b00      	cmp	r3, #0
90006d72:	d07c      	beq.n	90006e6e <GUIMONO_DispChar+0x126>
90006d74:	881d      	ldrh	r5, [r3, #0]
90006d76:	42a8      	cmp	r0, r5
90006d78:	d379      	bcc.n	90006e6e <GUIMONO_DispChar+0x126>
90006d7a:	885e      	ldrh	r6, [r3, #2]
90006d7c:	4286      	cmp	r6, r0
90006d7e:	d376      	bcc.n	90006e6e <GUIMONO_DispChar+0x126>
90006d80:	1b40      	subs	r0, r0, r5
90006d82:	685b      	ldr	r3, [r3, #4]
90006d84:	6866      	ldr	r6, [r4, #4]
90006d86:	b280      	uxth	r0, r0
90006d88:	9606      	str	r6, [sp, #24]
90006d8a:	eb03 0580 	add.w	r5, r3, r0, lsl #2
90006d8e:	f933 3020 	ldrsh.w	r3, [r3, r0, lsl #2]
90006d92:	f9b5 6002 	ldrsh.w	r6, [r5, #2]
90006d96:	1c58      	adds	r0, r3, #1
90006d98:	9309      	str	r3, [sp, #36]	; 0x24
90006d9a:	d068      	beq.n	90006e6e <GUIMONO_DispChar+0x126>
90006d9c:	f891 b018 	ldrb.w	fp, [r1, #24]
90006da0:	7ca1      	ldrb	r1, [r4, #18]
90006da2:	f9b2 902a 	ldrsh.w	r9, [r2, #42]	; 0x2a
90006da6:	fb1b f301 	smulbb	r3, fp, r1
90006daa:	4d35      	ldr	r5, [pc, #212]	; (90006e80 <GUIMONO_DispChar+0x138>)
90006dac:	4648      	mov	r0, r9
90006dae:	f9b2 7022 	ldrsh.w	r7, [r2, #34]	; 0x22
90006db2:	f9b2 8024 	ldrsh.w	r8, [r2, #36]	; 0x24
90006db6:	9307      	str	r3, [sp, #28]
90006db8:	f894 a010 	ldrb.w	sl, [r4, #16]
90006dbc:	f7fc f852 	bl	90002e64 <LCD_SetDrawMode>
90006dc0:	6829      	ldr	r1, [r5, #0]
90006dc2:	9b07      	ldr	r3, [sp, #28]
90006dc4:	69ca      	ldr	r2, [r1, #28]
90006dc6:	6b89      	ldr	r1, [r1, #56]	; 0x38
90006dc8:	9008      	str	r0, [sp, #32]
90006dca:	4618      	mov	r0, r3
90006dcc:	9105      	str	r1, [sp, #20]
90006dce:	9b09      	ldr	r3, [sp, #36]	; 0x24
90006dd0:	9906      	ldr	r1, [sp, #24]
90006dd2:	fb00 1003 	mla	r0, r0, r3, r1
90006dd6:	4641      	mov	r1, r8
90006dd8:	9004      	str	r0, [sp, #16]
90006dda:	4638      	mov	r0, r7
90006ddc:	7ca3      	ldrb	r3, [r4, #18]
90006dde:	9303      	str	r3, [sp, #12]
90006de0:	2301      	movs	r3, #1
90006de2:	9302      	str	r3, [sp, #8]
90006de4:	7ed3      	ldrb	r3, [r2, #27]
90006de6:	9301      	str	r3, [sp, #4]
90006de8:	7e93      	ldrb	r3, [r2, #26]
90006dea:	4652      	mov	r2, sl
90006dec:	9300      	str	r3, [sp, #0]
90006dee:	465b      	mov	r3, fp
90006df0:	f7fc f9ae 	bl	90003150 <LCD_DrawBitmap>
90006df4:	1c73      	adds	r3, r6, #1
90006df6:	d01a      	beq.n	90006e2e <GUIMONO_DispChar+0xe6>
90006df8:	f049 0002 	orr.w	r0, r9, #2
90006dfc:	f7fc f832 	bl	90002e64 <LCD_SetDrawMode>
90006e00:	682a      	ldr	r2, [r5, #0]
90006e02:	9906      	ldr	r1, [sp, #24]
90006e04:	4638      	mov	r0, r7
90006e06:	69d3      	ldr	r3, [r2, #28]
90006e08:	6b92      	ldr	r2, [r2, #56]	; 0x38
90006e0a:	9205      	str	r2, [sp, #20]
90006e0c:	9a07      	ldr	r2, [sp, #28]
90006e0e:	fb02 1606 	mla	r6, r2, r6, r1
90006e12:	4641      	mov	r1, r8
90006e14:	9604      	str	r6, [sp, #16]
90006e16:	7ca2      	ldrb	r2, [r4, #18]
90006e18:	9203      	str	r2, [sp, #12]
90006e1a:	2201      	movs	r2, #1
90006e1c:	9202      	str	r2, [sp, #8]
90006e1e:	7eda      	ldrb	r2, [r3, #27]
90006e20:	9201      	str	r2, [sp, #4]
90006e22:	4652      	mov	r2, sl
90006e24:	7e9b      	ldrb	r3, [r3, #26]
90006e26:	9300      	str	r3, [sp, #0]
90006e28:	465b      	mov	r3, fp
90006e2a:	f7fc f991 	bl	90003150 <LCD_DrawBitmap>
90006e2e:	682b      	ldr	r3, [r5, #0]
90006e30:	69db      	ldr	r3, [r3, #28]
90006e32:	7e5a      	ldrb	r2, [r3, #25]
90006e34:	7e1b      	ldrb	r3, [r3, #24]
90006e36:	429a      	cmp	r2, r3
90006e38:	d915      	bls.n	90006e66 <GUIMONO_DispChar+0x11e>
90006e3a:	f1b9 0f02 	cmp.w	r9, #2
90006e3e:	d012      	beq.n	90006e66 <GUIMONO_DispChar+0x11e>
90006e40:	f089 0004 	eor.w	r0, r9, #4
90006e44:	f7fc f80e 	bl	90002e64 <LCD_SetDrawMode>
90006e48:	4b0d      	ldr	r3, [pc, #52]	; (90006e80 <GUIMONO_DispChar+0x138>)
90006e4a:	681b      	ldr	r3, [r3, #0]
90006e4c:	69db      	ldr	r3, [r3, #28]
90006e4e:	7e18      	ldrb	r0, [r3, #24]
90006e50:	7ed9      	ldrb	r1, [r3, #27]
90006e52:	7e9a      	ldrb	r2, [r3, #26]
90006e54:	7e5b      	ldrb	r3, [r3, #25]
90006e56:	fb00 8101 	mla	r1, r0, r1, r8
90006e5a:	fb0a 7202 	mla	r2, sl, r2, r7
90006e5e:	4638      	mov	r0, r7
90006e60:	4443      	add	r3, r8
90006e62:	f7fc f85d 	bl	90002f20 <LCD_FillRect>
90006e66:	f89d 0020 	ldrb.w	r0, [sp, #32]
90006e6a:	f7fb fffb 	bl	90002e64 <LCD_SetDrawMode>
90006e6e:	4b04      	ldr	r3, [pc, #16]	; (90006e80 <GUIMONO_DispChar+0x138>)
90006e70:	7c61      	ldrb	r1, [r4, #17]
90006e72:	681a      	ldr	r2, [r3, #0]
90006e74:	8c53      	ldrh	r3, [r2, #34]	; 0x22
90006e76:	440b      	add	r3, r1
90006e78:	8453      	strh	r3, [r2, #34]	; 0x22
90006e7a:	b00b      	add	sp, #44	; 0x2c
90006e7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006e80:	200000a4 	.word	0x200000a4

90006e84 <GUIMONO_GetCharDistX>:
90006e84:	4b04      	ldr	r3, [pc, #16]	; (90006e98 <GUIMONO_GetCharDistX+0x14>)
90006e86:	681b      	ldr	r3, [r3, #0]
90006e88:	69db      	ldr	r3, [r3, #28]
90006e8a:	69db      	ldr	r3, [r3, #28]
90006e8c:	b109      	cbz	r1, 90006e92 <GUIMONO_GetCharDistX+0xe>
90006e8e:	7c1a      	ldrb	r2, [r3, #16]
90006e90:	600a      	str	r2, [r1, #0]
90006e92:	7c58      	ldrb	r0, [r3, #17]
90006e94:	4770      	bx	lr
90006e96:	bf00      	nop
90006e98:	200000a4 	.word	0x200000a4

90006e9c <GUIMONO_GetFontInfo>:
90006e9c:	2302      	movs	r3, #2
90006e9e:	800b      	strh	r3, [r1, #0]
90006ea0:	4770      	bx	lr

90006ea2 <GUIMONO_IsInFont>:
90006ea2:	69c3      	ldr	r3, [r0, #28]
90006ea4:	899a      	ldrh	r2, [r3, #12]
90006ea6:	428a      	cmp	r2, r1
90006ea8:	d802      	bhi.n	90006eb0 <GUIMONO_IsInFont+0xe>
90006eaa:	89da      	ldrh	r2, [r3, #14]
90006eac:	428a      	cmp	r2, r1
90006eae:	d20f      	bcs.n	90006ed0 <GUIMONO_IsInFont+0x2e>
90006eb0:	6898      	ldr	r0, [r3, #8]
90006eb2:	b180      	cbz	r0, 90006ed6 <GUIMONO_IsInFont+0x34>
90006eb4:	8803      	ldrh	r3, [r0, #0]
90006eb6:	4299      	cmp	r1, r3
90006eb8:	d30c      	bcc.n	90006ed4 <GUIMONO_IsInFont+0x32>
90006eba:	8842      	ldrh	r2, [r0, #2]
90006ebc:	428a      	cmp	r2, r1
90006ebe:	d309      	bcc.n	90006ed4 <GUIMONO_IsInFont+0x32>
90006ec0:	1ac9      	subs	r1, r1, r3
90006ec2:	6843      	ldr	r3, [r0, #4]
90006ec4:	f833 0021 	ldrh.w	r0, [r3, r1, lsl #2]
90006ec8:	43c0      	mvns	r0, r0
90006eca:	f3c0 30c0 	ubfx	r0, r0, #15, #1
90006ece:	4770      	bx	lr
90006ed0:	2001      	movs	r0, #1
90006ed2:	4770      	bx	lr
90006ed4:	2000      	movs	r0, #0
90006ed6:	4770      	bx	lr

90006ed8 <GUIPROP__FindChar>:
90006ed8:	b138      	cbz	r0, 90006eea <GUIPROP__FindChar+0x12>
90006eda:	8803      	ldrh	r3, [r0, #0]
90006edc:	428b      	cmp	r3, r1
90006ede:	d802      	bhi.n	90006ee6 <GUIPROP__FindChar+0xe>
90006ee0:	8843      	ldrh	r3, [r0, #2]
90006ee2:	428b      	cmp	r3, r1
90006ee4:	d201      	bcs.n	90006eea <GUIPROP__FindChar+0x12>
90006ee6:	6880      	ldr	r0, [r0, #8]
90006ee8:	e7f6      	b.n	90006ed8 <GUIPROP__FindChar>
90006eea:	4770      	bx	lr

90006eec <GUIPROP_DispChar>:
90006eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006ef0:	4c38      	ldr	r4, [pc, #224]	; (90006fd4 <GUIPROP_DispChar+0xe8>)
90006ef2:	b089      	sub	sp, #36	; 0x24
90006ef4:	4606      	mov	r6, r0
90006ef6:	4601      	mov	r1, r0
90006ef8:	6823      	ldr	r3, [r4, #0]
90006efa:	f9b3 802a 	ldrsh.w	r8, [r3, #42]	; 0x2a
90006efe:	69db      	ldr	r3, [r3, #28]
90006f00:	69d8      	ldr	r0, [r3, #28]
90006f02:	f7ff ffe9 	bl	90006ed8 <GUIPROP__FindChar>
90006f06:	2800      	cmp	r0, #0
90006f08:	d060      	beq.n	90006fcc <GUIPROP_DispChar+0xe0>
90006f0a:	8805      	ldrh	r5, [r0, #0]
90006f0c:	6847      	ldr	r7, [r0, #4]
90006f0e:	4640      	mov	r0, r8
90006f10:	1b75      	subs	r5, r6, r5
90006f12:	eb07 06c5 	add.w	r6, r7, r5, lsl #3
90006f16:	f896 a002 	ldrb.w	sl, [r6, #2]
90006f1a:	f7fb ffa3 	bl	90002e64 <LCD_SetDrawMode>
90006f1e:	f8d4 c000 	ldr.w	ip, [r4]
90006f22:	4681      	mov	r9, r0
90006f24:	f817 2035 	ldrb.w	r2, [r7, r5, lsl #3]
90006f28:	f8dc e01c 	ldr.w	lr, [ip, #28]
90006f2c:	f8dc 3038 	ldr.w	r3, [ip, #56]	; 0x38
90006f30:	f89e b018 	ldrb.w	fp, [lr, #24]
90006f34:	f9bc 1024 	ldrsh.w	r1, [ip, #36]	; 0x24
90006f38:	f9bc 0022 	ldrsh.w	r0, [ip, #34]	; 0x22
90006f3c:	f04f 0c01 	mov.w	ip, #1
90006f40:	9305      	str	r3, [sp, #20]
90006f42:	6873      	ldr	r3, [r6, #4]
90006f44:	f8cd a00c 	str.w	sl, [sp, #12]
90006f48:	9304      	str	r3, [sp, #16]
90006f4a:	465b      	mov	r3, fp
90006f4c:	f8cd c008 	str.w	ip, [sp, #8]
90006f50:	f89e c01b 	ldrb.w	ip, [lr, #27]
90006f54:	f8cd c004 	str.w	ip, [sp, #4]
90006f58:	f89e e01a 	ldrb.w	lr, [lr, #26]
90006f5c:	f8cd e000 	str.w	lr, [sp]
90006f60:	f7fc f8f6 	bl	90003150 <LCD_DrawBitmap>
90006f64:	6823      	ldr	r3, [r4, #0]
90006f66:	69db      	ldr	r3, [r3, #28]
90006f68:	7e59      	ldrb	r1, [r3, #25]
90006f6a:	f893 a018 	ldrb.w	sl, [r3, #24]
90006f6e:	9107      	str	r1, [sp, #28]
90006f70:	4551      	cmp	r1, sl
90006f72:	d920      	bls.n	90006fb6 <GUIPROP_DispChar+0xca>
90006f74:	f1b8 0f02 	cmp.w	r8, #2
90006f78:	d01d      	beq.n	90006fb6 <GUIPROP_DispChar+0xca>
90006f7a:	f893 b01b 	ldrb.w	fp, [r3, #27]
90006f7e:	f7fb faf5 	bl	9000256c <GUI_GetColor>
90006f82:	4680      	mov	r8, r0
90006f84:	f7fb faeb 	bl	9000255e <GUI_GetBkColor>
90006f88:	f7fb fb70 	bl	9000266c <GUI_SetColor>
90006f8c:	6823      	ldr	r3, [r4, #0]
90006f8e:	9907      	ldr	r1, [sp, #28]
90006f90:	f9b3 e024 	ldrsh.w	lr, [r3, #36]	; 0x24
90006f94:	f9b3 0022 	ldrsh.w	r0, [r3, #34]	; 0x22
90006f98:	69db      	ldr	r3, [r3, #28]
90006f9a:	f817 5035 	ldrb.w	r5, [r7, r5, lsl #3]
90006f9e:	7eda      	ldrb	r2, [r3, #27]
90006fa0:	fb0b e301 	mla	r3, fp, r1, lr
90006fa4:	fb0b e10a 	mla	r1, fp, sl, lr
90006fa8:	fb05 0202 	mla	r2, r5, r2, r0
90006fac:	f7fb ffb8 	bl	90002f20 <LCD_FillRect>
90006fb0:	4640      	mov	r0, r8
90006fb2:	f7fb fb5b 	bl	9000266c <GUI_SetColor>
90006fb6:	4648      	mov	r0, r9
90006fb8:	f7fb ff54 	bl	90002e64 <LCD_SetDrawMode>
90006fbc:	6823      	ldr	r3, [r4, #0]
90006fbe:	7871      	ldrb	r1, [r6, #1]
90006fc0:	69da      	ldr	r2, [r3, #28]
90006fc2:	7e90      	ldrb	r0, [r2, #26]
90006fc4:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
90006fc6:	fb00 2201 	mla	r2, r0, r1, r2
90006fca:	845a      	strh	r2, [r3, #34]	; 0x22
90006fcc:	b009      	add	sp, #36	; 0x24
90006fce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006fd2:	bf00      	nop
90006fd4:	200000a4 	.word	0x200000a4

90006fd8 <GUIPROP_GetCharDistX>:
90006fd8:	b538      	push	{r3, r4, r5, lr}
90006fda:	4b0d      	ldr	r3, [pc, #52]	; (90007010 <GUIPROP_GetCharDistX+0x38>)
90006fdc:	4602      	mov	r2, r0
90006fde:	460c      	mov	r4, r1
90006fe0:	4601      	mov	r1, r0
90006fe2:	681b      	ldr	r3, [r3, #0]
90006fe4:	69dd      	ldr	r5, [r3, #28]
90006fe6:	69e8      	ldr	r0, [r5, #28]
90006fe8:	f7ff ff76 	bl	90006ed8 <GUIPROP__FindChar>
90006fec:	b170      	cbz	r0, 9000700c <GUIPROP_GetCharDistX+0x34>
90006fee:	8803      	ldrh	r3, [r0, #0]
90006ff0:	1ad2      	subs	r2, r2, r3
90006ff2:	6843      	ldr	r3, [r0, #4]
90006ff4:	eb03 01c2 	add.w	r1, r3, r2, lsl #3
90006ff8:	7848      	ldrb	r0, [r1, #1]
90006ffa:	7ea9      	ldrb	r1, [r5, #26]
90006ffc:	fb10 f001 	smulbb	r0, r0, r1
90007000:	b124      	cbz	r4, 9000700c <GUIPROP_GetCharDistX+0x34>
90007002:	f813 3032 	ldrb.w	r3, [r3, r2, lsl #3]
90007006:	fb11 f303 	smulbb	r3, r1, r3
9000700a:	6023      	str	r3, [r4, #0]
9000700c:	bd38      	pop	{r3, r4, r5, pc}
9000700e:	bf00      	nop
90007010:	200000a4 	.word	0x200000a4

90007014 <GUIPROP_GetFontInfo>:
90007014:	2301      	movs	r3, #1
90007016:	800b      	strh	r3, [r1, #0]
90007018:	4770      	bx	lr

9000701a <GUIPROP_IsInFont>:
9000701a:	b508      	push	{r3, lr}
9000701c:	69c0      	ldr	r0, [r0, #28]
9000701e:	f7ff ff5b 	bl	90006ed8 <GUIPROP__FindChar>
90007022:	3000      	adds	r0, #0
90007024:	bf18      	it	ne
90007026:	2001      	movne	r0, #1
90007028:	bd08      	pop	{r3, pc}
	...

9000702c <GUI_SelectLayer>:
9000702c:	b570      	push	{r4, r5, r6, lr}
9000702e:	4d08      	ldr	r5, [pc, #32]	; (90007050 <GUI_SelectLayer+0x24>)
90007030:	2801      	cmp	r0, #1
90007032:	4604      	mov	r4, r0
90007034:	682b      	ldr	r3, [r5, #0]
90007036:	7c5e      	ldrb	r6, [r3, #17]
90007038:	d808      	bhi.n	9000704c <GUI_SelectLayer+0x20>
9000703a:	f7fb fd0b 	bl	90002a54 <GUI_DEVICE__GetpDriver>
9000703e:	b128      	cbz	r0, 9000704c <GUI_SelectLayer+0x20>
90007040:	682b      	ldr	r3, [r5, #0]
90007042:	745c      	strb	r4, [r3, #17]
90007044:	f7fb fb07 	bl	90002656 <GUI_SelectLCD>
90007048:	4b02      	ldr	r3, [pc, #8]	; (90007054 <GUI_SelectLayer+0x28>)
9000704a:	601c      	str	r4, [r3, #0]
9000704c:	4630      	mov	r0, r6
9000704e:	bd70      	pop	{r4, r5, r6, pc}
90007050:	200000a4 	.word	0x200000a4
90007054:	20025c40 	.word	0x20025c40

90007058 <GUI__CompactPixelIndices>:
90007058:	2a08      	cmp	r2, #8
9000705a:	b510      	push	{r4, lr}
9000705c:	dd0e      	ble.n	9000707c <GUI__CompactPixelIndices+0x24>
9000705e:	2a10      	cmp	r2, #16
90007060:	dc0a      	bgt.n	90007078 <GUI__CompactPixelIndices+0x20>
90007062:	4603      	mov	r3, r0
90007064:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90007068:	f850 2b04 	ldr.w	r2, [r0], #4
9000706c:	f823 2b02 	strh.w	r2, [r3], #2
90007070:	428b      	cmp	r3, r1
90007072:	d1f9      	bne.n	90007068 <GUI__CompactPixelIndices+0x10>
90007074:	2001      	movs	r0, #1
90007076:	bd10      	pop	{r4, pc}
90007078:	2000      	movs	r0, #0
9000707a:	bd10      	pop	{r4, pc}
9000707c:	2a02      	cmp	r2, #2
9000707e:	d12a      	bne.n	900070d6 <GUI__CompactPixelIndices+0x7e>
90007080:	4604      	mov	r4, r0
90007082:	6803      	ldr	r3, [r0, #0]
90007084:	2901      	cmp	r1, #1
90007086:	ea4f 1383 	mov.w	r3, r3, lsl #6
9000708a:	b2db      	uxtb	r3, r3
9000708c:	d020      	beq.n	900070d0 <GUI__CompactPixelIndices+0x78>
9000708e:	6842      	ldr	r2, [r0, #4]
90007090:	2902      	cmp	r1, #2
90007092:	ea4f 1202 	mov.w	r2, r2, lsl #4
90007096:	f002 0230 	and.w	r2, r2, #48	; 0x30
9000709a:	ea43 0302 	orr.w	r3, r3, r2
9000709e:	d101      	bne.n	900070a4 <GUI__CompactPixelIndices+0x4c>
900070a0:	3008      	adds	r0, #8
900070a2:	e016      	b.n	900070d2 <GUI__CompactPixelIndices+0x7a>
900070a4:	6882      	ldr	r2, [r0, #8]
900070a6:	2903      	cmp	r1, #3
900070a8:	ea4f 0282 	mov.w	r2, r2, lsl #2
900070ac:	f002 020c 	and.w	r2, r2, #12
900070b0:	ea43 0302 	orr.w	r3, r3, r2
900070b4:	d101      	bne.n	900070ba <GUI__CompactPixelIndices+0x62>
900070b6:	300c      	adds	r0, #12
900070b8:	e00b      	b.n	900070d2 <GUI__CompactPixelIndices+0x7a>
900070ba:	68c2      	ldr	r2, [r0, #12]
900070bc:	3904      	subs	r1, #4
900070be:	3010      	adds	r0, #16
900070c0:	f002 0203 	and.w	r2, r2, #3
900070c4:	4313      	orrs	r3, r2
900070c6:	f804 3b01 	strb.w	r3, [r4], #1
900070ca:	2900      	cmp	r1, #0
900070cc:	d1d9      	bne.n	90007082 <GUI__CompactPixelIndices+0x2a>
900070ce:	e7d1      	b.n	90007074 <GUI__CompactPixelIndices+0x1c>
900070d0:	3004      	adds	r0, #4
900070d2:	2100      	movs	r1, #0
900070d4:	e7f7      	b.n	900070c6 <GUI__CompactPixelIndices+0x6e>
900070d6:	2a04      	cmp	r2, #4
900070d8:	d115      	bne.n	90007106 <GUI__CompactPixelIndices+0xae>
900070da:	4604      	mov	r4, r0
900070dc:	2901      	cmp	r1, #1
900070de:	6803      	ldr	r3, [r0, #0]
900070e0:	bf18      	it	ne
900070e2:	6842      	ldrne	r2, [r0, #4]
900070e4:	ea4f 1303 	mov.w	r3, r3, lsl #4
900070e8:	bf0c      	ite	eq
900070ea:	2100      	moveq	r1, #0
900070ec:	3902      	subne	r1, #2
900070ee:	b2db      	uxtb	r3, r3
900070f0:	bf17      	itett	ne
900070f2:	f002 020f 	andne.w	r2, r2, #15
900070f6:	3004      	addeq	r0, #4
900070f8:	3008      	addne	r0, #8
900070fa:	4313      	orrne	r3, r2
900070fc:	f804 3b01 	strb.w	r3, [r4], #1
90007100:	2900      	cmp	r1, #0
90007102:	d1eb      	bne.n	900070dc <GUI__CompactPixelIndices+0x84>
90007104:	e7b6      	b.n	90007074 <GUI__CompactPixelIndices+0x1c>
90007106:	2a01      	cmp	r2, #1
90007108:	4603      	mov	r3, r0
9000710a:	d154      	bne.n	900071b6 <GUI__CompactPixelIndices+0x15e>
9000710c:	681a      	ldr	r2, [r3, #0]
9000710e:	2901      	cmp	r1, #1
90007110:	ea4f 12c2 	mov.w	r2, r2, lsl #7
90007114:	b2d2      	uxtb	r2, r2
90007116:	d04b      	beq.n	900071b0 <GUI__CompactPixelIndices+0x158>
90007118:	685c      	ldr	r4, [r3, #4]
9000711a:	2902      	cmp	r1, #2
9000711c:	ea4f 1484 	mov.w	r4, r4, lsl #6
90007120:	f004 0440 	and.w	r4, r4, #64	; 0x40
90007124:	ea42 0204 	orr.w	r2, r2, r4
90007128:	d101      	bne.n	9000712e <GUI__CompactPixelIndices+0xd6>
9000712a:	3308      	adds	r3, #8
9000712c:	e041      	b.n	900071b2 <GUI__CompactPixelIndices+0x15a>
9000712e:	689c      	ldr	r4, [r3, #8]
90007130:	2903      	cmp	r1, #3
90007132:	ea4f 1444 	mov.w	r4, r4, lsl #5
90007136:	f004 0420 	and.w	r4, r4, #32
9000713a:	ea42 0204 	orr.w	r2, r2, r4
9000713e:	d101      	bne.n	90007144 <GUI__CompactPixelIndices+0xec>
90007140:	330c      	adds	r3, #12
90007142:	e036      	b.n	900071b2 <GUI__CompactPixelIndices+0x15a>
90007144:	68dc      	ldr	r4, [r3, #12]
90007146:	2904      	cmp	r1, #4
90007148:	ea4f 1404 	mov.w	r4, r4, lsl #4
9000714c:	f004 0410 	and.w	r4, r4, #16
90007150:	ea42 0204 	orr.w	r2, r2, r4
90007154:	d101      	bne.n	9000715a <GUI__CompactPixelIndices+0x102>
90007156:	3310      	adds	r3, #16
90007158:	e02b      	b.n	900071b2 <GUI__CompactPixelIndices+0x15a>
9000715a:	691c      	ldr	r4, [r3, #16]
9000715c:	2905      	cmp	r1, #5
9000715e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90007162:	f004 0408 	and.w	r4, r4, #8
90007166:	ea42 0204 	orr.w	r2, r2, r4
9000716a:	d101      	bne.n	90007170 <GUI__CompactPixelIndices+0x118>
9000716c:	3314      	adds	r3, #20
9000716e:	e020      	b.n	900071b2 <GUI__CompactPixelIndices+0x15a>
90007170:	695c      	ldr	r4, [r3, #20]
90007172:	2906      	cmp	r1, #6
90007174:	ea4f 0484 	mov.w	r4, r4, lsl #2
90007178:	f004 0404 	and.w	r4, r4, #4
9000717c:	ea42 0204 	orr.w	r2, r2, r4
90007180:	d101      	bne.n	90007186 <GUI__CompactPixelIndices+0x12e>
90007182:	3318      	adds	r3, #24
90007184:	e015      	b.n	900071b2 <GUI__CompactPixelIndices+0x15a>
90007186:	699c      	ldr	r4, [r3, #24]
90007188:	3907      	subs	r1, #7
9000718a:	ea4f 0444 	mov.w	r4, r4, lsl #1
9000718e:	bf08      	it	eq
90007190:	331c      	addeq	r3, #28
90007192:	f004 0402 	and.w	r4, r4, #2
90007196:	ea42 0204 	orr.w	r2, r2, r4
9000719a:	bf1f      	itttt	ne
9000719c:	69dc      	ldrne	r4, [r3, #28]
9000719e:	3320      	addne	r3, #32
900071a0:	f004 0401 	andne.w	r4, r4, #1
900071a4:	4322      	orrne	r2, r4
900071a6:	f800 2b01 	strb.w	r2, [r0], #1
900071aa:	2900      	cmp	r1, #0
900071ac:	d1ae      	bne.n	9000710c <GUI__CompactPixelIndices+0xb4>
900071ae:	e761      	b.n	90007074 <GUI__CompactPixelIndices+0x1c>
900071b0:	3304      	adds	r3, #4
900071b2:	2100      	movs	r1, #0
900071b4:	e7f7      	b.n	900071a6 <GUI__CompactPixelIndices+0x14e>
900071b6:	4401      	add	r1, r0
900071b8:	f850 2b04 	ldr.w	r2, [r0], #4
900071bc:	f803 2b01 	strb.w	r2, [r3], #1
900071c0:	4299      	cmp	r1, r3
900071c2:	d1f9      	bne.n	900071b8 <GUI__CompactPixelIndices+0x160>
900071c4:	e756      	b.n	90007074 <GUI__CompactPixelIndices+0x1c>
	...

900071c8 <GUI__ManageCacheEx>:
900071c8:	2801      	cmp	r0, #1
900071ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900071cc:	4606      	mov	r6, r0
900071ce:	460c      	mov	r4, r1
900071d0:	dc62      	bgt.n	90007298 <GUI__ManageCacheEx+0xd0>
900071d2:	4d33      	ldr	r5, [pc, #204]	; (900072a0 <GUI__ManageCacheEx+0xd8>)
900071d4:	686b      	ldr	r3, [r5, #4]
900071d6:	b103      	cbz	r3, 900071da <GUI__ManageCacheEx+0x12>
900071d8:	4798      	blx	r3
900071da:	2c01      	cmp	r4, #1
900071dc:	d004      	beq.n	900071e8 <GUI__ManageCacheEx+0x20>
900071de:	2c02      	cmp	r4, #2
900071e0:	d020      	beq.n	90007224 <GUI__ManageCacheEx+0x5c>
900071e2:	2c00      	cmp	r4, #0
900071e4:	d158      	bne.n	90007298 <GUI__ManageCacheEx+0xd0>
900071e6:	e033      	b.n	90007250 <GUI__ManageCacheEx+0x88>
900071e8:	eb05 0586 	add.w	r5, r5, r6, lsl #2
900071ec:	68af      	ldr	r7, [r5, #8]
900071ee:	b9af      	cbnz	r7, 9000721c <GUI__ManageCacheEx+0x54>
900071f0:	4630      	mov	r0, r6
900071f2:	f7fb fc2f 	bl	90002a54 <GUI_DEVICE__GetpDriver>
900071f6:	9001      	str	r0, [sp, #4]
900071f8:	2800      	cmp	r0, #0
900071fa:	d04d      	beq.n	90007298 <GUI__ManageCacheEx+0xd0>
900071fc:	68c3      	ldr	r3, [r0, #12]
900071fe:	210d      	movs	r1, #13
90007200:	a801      	add	r0, sp, #4
90007202:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90007204:	4798      	blx	r3
90007206:	4603      	mov	r3, r0
90007208:	2800      	cmp	r0, #0
9000720a:	d045      	beq.n	90007298 <GUI__ManageCacheEx+0xd0>
9000720c:	4621      	mov	r1, r4
9000720e:	9801      	ldr	r0, [sp, #4]
90007210:	4798      	blx	r3
90007212:	68ab      	ldr	r3, [r5, #8]
90007214:	4638      	mov	r0, r7
90007216:	3301      	adds	r3, #1
90007218:	60ab      	str	r3, [r5, #8]
9000721a:	e03e      	b.n	9000729a <GUI__ManageCacheEx+0xd2>
9000721c:	1c78      	adds	r0, r7, #1
9000721e:	60a8      	str	r0, [r5, #8]
90007220:	4620      	mov	r0, r4
90007222:	e03a      	b.n	9000729a <GUI__ManageCacheEx+0xd2>
90007224:	4630      	mov	r0, r6
90007226:	f7fb fc15 	bl	90002a54 <GUI_DEVICE__GetpDriver>
9000722a:	9001      	str	r0, [sp, #4]
9000722c:	2800      	cmp	r0, #0
9000722e:	d033      	beq.n	90007298 <GUI__ManageCacheEx+0xd0>
90007230:	68c3      	ldr	r3, [r0, #12]
90007232:	210d      	movs	r1, #13
90007234:	a801      	add	r0, sp, #4
90007236:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90007238:	4798      	blx	r3
9000723a:	4604      	mov	r4, r0
9000723c:	2800      	cmp	r0, #0
9000723e:	d02b      	beq.n	90007298 <GUI__ManageCacheEx+0xd0>
90007240:	682b      	ldr	r3, [r5, #0]
90007242:	b103      	cbz	r3, 90007246 <GUI__ManageCacheEx+0x7e>
90007244:	4798      	blx	r3
90007246:	2102      	movs	r1, #2
90007248:	9801      	ldr	r0, [sp, #4]
9000724a:	47a0      	blx	r4
9000724c:	2000      	movs	r0, #0
9000724e:	e024      	b.n	9000729a <GUI__ManageCacheEx+0xd2>
90007250:	00b4      	lsls	r4, r6, #2
90007252:	192b      	adds	r3, r5, r4
90007254:	689b      	ldr	r3, [r3, #8]
90007256:	2b01      	cmp	r3, #1
90007258:	d001      	beq.n	9000725e <GUI__ManageCacheEx+0x96>
9000725a:	2001      	movs	r0, #1
9000725c:	e015      	b.n	9000728a <GUI__ManageCacheEx+0xc2>
9000725e:	4630      	mov	r0, r6
90007260:	f7fb fbf8 	bl	90002a54 <GUI_DEVICE__GetpDriver>
90007264:	9001      	str	r0, [sp, #4]
90007266:	2800      	cmp	r0, #0
90007268:	d0f7      	beq.n	9000725a <GUI__ManageCacheEx+0x92>
9000726a:	68c3      	ldr	r3, [r0, #12]
9000726c:	210d      	movs	r1, #13
9000726e:	a801      	add	r0, sp, #4
90007270:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90007272:	4798      	blx	r3
90007274:	4606      	mov	r6, r0
90007276:	2800      	cmp	r0, #0
90007278:	d0ef      	beq.n	9000725a <GUI__ManageCacheEx+0x92>
9000727a:	4b09      	ldr	r3, [pc, #36]	; (900072a0 <GUI__ManageCacheEx+0xd8>)
9000727c:	681b      	ldr	r3, [r3, #0]
9000727e:	b103      	cbz	r3, 90007282 <GUI__ManageCacheEx+0xba>
90007280:	4798      	blx	r3
90007282:	2100      	movs	r1, #0
90007284:	9801      	ldr	r0, [sp, #4]
90007286:	47b0      	blx	r6
90007288:	2000      	movs	r0, #0
9000728a:	4425      	add	r5, r4
9000728c:	68ab      	ldr	r3, [r5, #8]
9000728e:	2b00      	cmp	r3, #0
90007290:	bf18      	it	ne
90007292:	3b01      	subne	r3, #1
90007294:	60ab      	str	r3, [r5, #8]
90007296:	e000      	b.n	9000729a <GUI__ManageCacheEx+0xd2>
90007298:	2001      	movs	r0, #1
9000729a:	b003      	add	sp, #12
9000729c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000729e:	bf00      	nop
900072a0:	20025adc 	.word	0x20025adc

900072a4 <GUI__ManageCache>:
900072a4:	4b02      	ldr	r3, [pc, #8]	; (900072b0 <GUI__ManageCache+0xc>)
900072a6:	4601      	mov	r1, r0
900072a8:	681b      	ldr	r3, [r3, #0]
900072aa:	7c58      	ldrb	r0, [r3, #17]
900072ac:	f7ff bf8c 	b.w	900071c8 <GUI__ManageCacheEx>
900072b0:	200000a4 	.word	0x200000a4

900072b4 <LCD_SetClipRectEx>:
900072b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900072b6:	4c09      	ldr	r4, [pc, #36]	; (900072dc <LCD_SetClipRectEx+0x28>)
900072b8:	4605      	mov	r5, r0
900072ba:	4669      	mov	r1, sp
900072bc:	6823      	ldr	r3, [r4, #0]
900072be:	7c5a      	ldrb	r2, [r3, #17]
900072c0:	4b07      	ldr	r3, [pc, #28]	; (900072e0 <LCD_SetClipRectEx+0x2c>)
900072c2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900072c6:	68c3      	ldr	r3, [r0, #12]
900072c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900072ca:	4798      	blx	r3
900072cc:	6820      	ldr	r0, [r4, #0]
900072ce:	466a      	mov	r2, sp
900072d0:	4629      	mov	r1, r5
900072d2:	3008      	adds	r0, #8
900072d4:	f7fb fd55 	bl	90002d82 <GUI__IntersectRects>
900072d8:	b003      	add	sp, #12
900072da:	bd30      	pop	{r4, r5, pc}
900072dc:	200000a4 	.word	0x200000a4
900072e0:	20025c04 	.word	0x20025c04

900072e4 <GUI_MEMDEV_GetBitsPerPixel>:
900072e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900072e6:	4604      	mov	r4, r0
900072e8:	b170      	cbz	r0, 90007308 <GUI_MEMDEV_GetBitsPerPixel+0x24>
900072ea:	f7fa ff67 	bl	900021bc <GUI_ALLOC_LockH>
900072ee:	6803      	ldr	r3, [r0, #0]
900072f0:	ad02      	add	r5, sp, #8
900072f2:	691b      	ldr	r3, [r3, #16]
900072f4:	f845 0d04 	str.w	r0, [r5, #-4]!
900072f8:	689b      	ldr	r3, [r3, #8]
900072fa:	4798      	blx	r3
900072fc:	f7fc fa7b 	bl	900037f6 <LCD__GetBPPDevice>
90007300:	4604      	mov	r4, r0
90007302:	4628      	mov	r0, r5
90007304:	f7fa ff68 	bl	900021d8 <GUI_ALLOC_UnlockH>
90007308:	4620      	mov	r0, r4
9000730a:	b003      	add	sp, #12
9000730c:	bd30      	pop	{r4, r5, pc}
	...

90007310 <GUI_MEMDEV_Delete>:
90007310:	b537      	push	{r0, r1, r2, r4, r5, lr}
90007312:	4604      	mov	r4, r0
90007314:	b1d0      	cbz	r0, 9000734c <GUI_MEMDEV_Delete+0x3c>
90007316:	4b0e      	ldr	r3, [pc, #56]	; (90007350 <GUI_MEMDEV_Delete+0x40>)
90007318:	681b      	ldr	r3, [r3, #0]
9000731a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000731c:	4298      	cmp	r0, r3
9000731e:	d101      	bne.n	90007324 <GUI_MEMDEV_Delete+0x14>
90007320:	f7fb f999 	bl	90002656 <GUI_SelectLCD>
90007324:	4620      	mov	r0, r4
90007326:	f7fa ff49 	bl	900021bc <GUI_ALLOC_LockH>
9000732a:	9001      	str	r0, [sp, #4]
9000732c:	6940      	ldr	r0, [r0, #20]
9000732e:	b108      	cbz	r0, 90007334 <GUI_MEMDEV_Delete+0x24>
90007330:	f7fe f852 	bl	900053d8 <GUI_USAGE_DecUseCnt>
90007334:	ad02      	add	r5, sp, #8
90007336:	f855 3d04 	ldr.w	r3, [r5, #-4]!
9000733a:	6818      	ldr	r0, [r3, #0]
9000733c:	f7fb fb9a 	bl	90002a74 <GUI_DEVICE_Delete>
90007340:	4628      	mov	r0, r5
90007342:	f7fa ff49 	bl	900021d8 <GUI_ALLOC_UnlockH>
90007346:	4620      	mov	r0, r4
90007348:	f7fa ff66 	bl	90002218 <GUI_ALLOC_Free>
9000734c:	b003      	add	sp, #12
9000734e:	bd30      	pop	{r4, r5, pc}
90007350:	200000a4 	.word	0x200000a4

90007354 <GUI_MEMDEV_GetDataPtr>:
90007354:	b513      	push	{r0, r1, r4, lr}
90007356:	b158      	cbz	r0, 90007370 <GUI_MEMDEV_GetDataPtr+0x1c>
90007358:	f7fa ff30 	bl	900021bc <GUI_ALLOC_LockH>
9000735c:	ab02      	add	r3, sp, #8
9000735e:	f100 0418 	add.w	r4, r0, #24
90007362:	f843 0d04 	str.w	r0, [r3, #-4]!
90007366:	4618      	mov	r0, r3
90007368:	f7fa ff36 	bl	900021d8 <GUI_ALLOC_UnlockH>
9000736c:	4620      	mov	r0, r4
9000736e:	e7ff      	b.n	90007370 <GUI_MEMDEV_GetDataPtr+0x1c>
90007370:	b002      	add	sp, #8
90007372:	bd10      	pop	{r4, pc}

90007374 <memmove>:
90007374:	4288      	cmp	r0, r1
90007376:	b510      	push	{r4, lr}
90007378:	eb01 0402 	add.w	r4, r1, r2
9000737c:	d902      	bls.n	90007384 <memmove+0x10>
9000737e:	4284      	cmp	r4, r0
90007380:	4623      	mov	r3, r4
90007382:	d807      	bhi.n	90007394 <memmove+0x20>
90007384:	1e43      	subs	r3, r0, #1
90007386:	42a1      	cmp	r1, r4
90007388:	d008      	beq.n	9000739c <memmove+0x28>
9000738a:	f811 2b01 	ldrb.w	r2, [r1], #1
9000738e:	f803 2f01 	strb.w	r2, [r3, #1]!
90007392:	e7f8      	b.n	90007386 <memmove+0x12>
90007394:	4402      	add	r2, r0
90007396:	4601      	mov	r1, r0
90007398:	428a      	cmp	r2, r1
9000739a:	d100      	bne.n	9000739e <memmove+0x2a>
9000739c:	bd10      	pop	{r4, pc}
9000739e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
900073a2:	f802 4d01 	strb.w	r4, [r2, #-1]!
900073a6:	e7f7      	b.n	90007398 <memmove+0x24>

900073a8 <memset>:
900073a8:	4402      	add	r2, r0
900073aa:	4603      	mov	r3, r0
900073ac:	4293      	cmp	r3, r2
900073ae:	d100      	bne.n	900073b2 <memset+0xa>
900073b0:	4770      	bx	lr
900073b2:	f803 1b01 	strb.w	r1, [r3], #1
900073b6:	e7f9      	b.n	900073ac <memset+0x4>

900073b8 <__libc_init_array>:
900073b8:	b570      	push	{r4, r5, r6, lr}
900073ba:	4d0d      	ldr	r5, [pc, #52]	; (900073f0 <__libc_init_array+0x38>)
900073bc:	4c0d      	ldr	r4, [pc, #52]	; (900073f4 <__libc_init_array+0x3c>)
900073be:	1b64      	subs	r4, r4, r5
900073c0:	10a4      	asrs	r4, r4, #2
900073c2:	2600      	movs	r6, #0
900073c4:	42a6      	cmp	r6, r4
900073c6:	d109      	bne.n	900073dc <__libc_init_array+0x24>
900073c8:	4d0b      	ldr	r5, [pc, #44]	; (900073f8 <__libc_init_array+0x40>)
900073ca:	4c0c      	ldr	r4, [pc, #48]	; (900073fc <__libc_init_array+0x44>)
900073cc:	f000 f826 	bl	9000741c <_init>
900073d0:	1b64      	subs	r4, r4, r5
900073d2:	10a4      	asrs	r4, r4, #2
900073d4:	2600      	movs	r6, #0
900073d6:	42a6      	cmp	r6, r4
900073d8:	d105      	bne.n	900073e6 <__libc_init_array+0x2e>
900073da:	bd70      	pop	{r4, r5, r6, pc}
900073dc:	f855 3b04 	ldr.w	r3, [r5], #4
900073e0:	4798      	blx	r3
900073e2:	3601      	adds	r6, #1
900073e4:	e7ee      	b.n	900073c4 <__libc_init_array+0xc>
900073e6:	f855 3b04 	ldr.w	r3, [r5], #4
900073ea:	4798      	blx	r3
900073ec:	3601      	adds	r6, #1
900073ee:	e7f2      	b.n	900073d6 <__libc_init_array+0x1e>
900073f0:	9000de9c 	.word	0x9000de9c
900073f4:	9000de9c 	.word	0x9000de9c
900073f8:	9000de9c 	.word	0x9000de9c
900073fc:	9000dea0 	.word	0x9000dea0

90007400 <memcpy>:
90007400:	440a      	add	r2, r1
90007402:	4291      	cmp	r1, r2
90007404:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
90007408:	d100      	bne.n	9000740c <memcpy+0xc>
9000740a:	4770      	bx	lr
9000740c:	b510      	push	{r4, lr}
9000740e:	f811 4b01 	ldrb.w	r4, [r1], #1
90007412:	f803 4f01 	strb.w	r4, [r3, #1]!
90007416:	4291      	cmp	r1, r2
90007418:	d1f9      	bne.n	9000740e <memcpy+0xe>
9000741a:	bd10      	pop	{r4, pc}

9000741c <_init>:
9000741c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000741e:	bf00      	nop
90007420:	bcf8      	pop	{r3, r4, r5, r6, r7}
90007422:	bc08      	pop	{r3}
90007424:	469e      	mov	lr, r3
90007426:	4770      	bx	lr

90007428 <_fini>:
90007428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000742a:	bf00      	nop
9000742c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9000742e:	bc08      	pop	{r3}
90007430:	469e      	mov	lr, r3
90007432:	4770      	bx	lr
